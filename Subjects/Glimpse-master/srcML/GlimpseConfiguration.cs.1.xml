<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Framework\GlimpseConfiguration.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Linq</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Runtime</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">Serialization</name><op:operator pos:line="5" pos:column="35">.</op:operator><name pos:line="5" pos:column="36">Formatters</name><op:operator pos:line="5" pos:column="46">.</op:operator><name pos:line="5" pos:column="47">Binary</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Text</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">Core</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Framework</name></name>
<block pos:line="10" pos:column="1">{
    <comment type="line" pos:line="11" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="12" pos:column="5">/// Contains all configuration required by &lt;see cref="IGlimpseRuntime"/&gt; instances to execute.</comment>
    <comment type="line" pos:line="13" pos:column="5">/// &lt;/summary&gt;</comment>
    <class><specifier pos:line="14" pos:column="5">public</specifier> class <name pos:line="14" pos:column="18">GlimpseConfiguration</name> <super pos:line="14" pos:column="39">: <name pos:line="14" pos:column="41">IGlimpseConfiguration</name></super>
    <block pos:line="15" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <specifier pos:line="16" pos:column="17">static</specifier> <name pos:line="16" pos:column="24">IMessageBroker</name></type> <name pos:line="16" pos:column="39">messageBroker</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">private</specifier> <specifier pos:line="17" pos:column="17">static</specifier> <name><name pos:line="17" pos:column="24">Func</name><argument_list pos:line="17" pos:column="28">&lt;<argument><name pos:line="17" pos:column="29">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="17" pos:column="46">timerStrategy</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">private</specifier> <specifier pos:line="18" pos:column="17">static</specifier> <name pos:line="18" pos:column="24">ILogger</name></type> <name pos:line="18" pos:column="32">logger</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">private</specifier> <name><name pos:line="19" pos:column="17">ICollection</name><argument_list pos:line="19" pos:column="28">&lt;<argument><name pos:line="19" pos:column="29">IClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="19" pos:column="44">clientScripts</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">private</specifier> <name pos:line="20" pos:column="17">IResource</name></type> <name pos:line="20" pos:column="27">defaultResource</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">private</specifier> <name pos:line="21" pos:column="17">string</name></type> <name pos:line="21" pos:column="24">endpointBaseUri</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">private</specifier> <name pos:line="22" pos:column="17">IFrameworkProvider</name></type> <name pos:line="22" pos:column="36">frameworkProvider</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">private</specifier> <name pos:line="23" pos:column="17">IHtmlEncoder</name></type> <name pos:line="23" pos:column="30">htmlEncoder</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <name pos:line="24" pos:column="17">IPersistenceStore</name></type> <name pos:line="24" pos:column="35">persistenceStore</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">private</specifier> <name><name pos:line="25" pos:column="17">ICollection</name><argument_list pos:line="25" pos:column="28">&lt;<argument><name pos:line="25" pos:column="29">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="25" pos:column="41">inspectors</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">private</specifier> <name pos:line="26" pos:column="17">IProxyFactory</name></type> <name pos:line="26" pos:column="31">proxyFactory</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name pos:line="27" pos:column="17">ResourceEndpointConfiguration</name></type> <name pos:line="27" pos:column="47">resourceEndpoint</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">private</specifier> <name><name pos:line="28" pos:column="17">ICollection</name><argument_list pos:line="28" pos:column="28">&lt;<argument><name pos:line="28" pos:column="29">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="28" pos:column="40">resources</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <name><name pos:line="29" pos:column="17">ICollection</name><argument_list pos:line="29" pos:column="28">&lt;<argument><name pos:line="29" pos:column="29">IRuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="29" pos:column="45">runtimePolicies</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">private</specifier> <name pos:line="30" pos:column="17">ISerializer</name></type> <name pos:line="30" pos:column="29">serializer</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">private</specifier> <name><name pos:line="31" pos:column="17">ICollection</name><argument_list pos:line="31" pos:column="28">&lt;<argument><name pos:line="31" pos:column="29">ITab</name></argument>&gt;</argument_list></name></type> <name pos:line="31" pos:column="35">tabs</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="32" pos:column="9">private</specifier> <name><name pos:line="32" pos:column="17">ICollection</name><argument_list pos:line="32" pos:column="28">&lt;<argument><name pos:line="32" pos:column="29">IDisplay</name></argument>&gt;</argument_list></name></type> <name pos:line="32" pos:column="39">displays</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <specifier pos:line="33" pos:column="17">static</specifier> <name pos:line="33" pos:column="24">RuntimePolicy</name></type> <name pos:line="33" pos:column="38">defaultRuntimePolicy</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">private</specifier> <specifier pos:line="34" pos:column="17">static</specifier> <name><name pos:line="34" pos:column="24">Func</name><argument_list pos:line="34" pos:column="28">&lt;<argument><name pos:line="34" pos:column="29">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="34" pos:column="44">runtimePolicyStrategy</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <name pos:line="35" pos:column="17">string</name></type> <name pos:line="35" pos:column="24">hash</name></decl>;</decl_stmt>

        <comment type="line" pos:line="37" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="38" pos:column="9">/// Initializes a new instance of the &lt;see cref="GlimpseConfiguration" /&gt; class.</comment>
        <comment type="line" pos:line="39" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="40" pos:column="9">/// &lt;param name="frameworkProvider"&gt;The framework provider.&lt;/param&gt;</comment>
        <comment type="line" pos:line="41" pos:column="9">/// &lt;param name="endpointConfiguration"&gt;The resource endpoint configuration.&lt;/param&gt;</comment>
        <comment type="line" pos:line="42" pos:column="9">/// &lt;param name="clientScripts"&gt;The client scripts collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="43" pos:column="9">/// &lt;param name="logger"&gt;The logger.&lt;/param&gt;</comment>
        <comment type="line" pos:line="44" pos:column="9">/// &lt;param name="defaultRuntimePolicy"&gt;The default runtime policy.&lt;/param&gt;</comment>
        <comment type="line" pos:line="45" pos:column="9">/// &lt;param name="htmlEncoder"&gt;The Html encoder.&lt;/param&gt;</comment>
        <comment type="line" pos:line="46" pos:column="9">/// &lt;param name="persistenceStore"&gt;The persistence store.&lt;/param&gt;</comment>
        <comment type="line" pos:line="47" pos:column="9">/// &lt;param name="inspectors"&gt;The inspectors collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="48" pos:column="9">/// &lt;param name="resources"&gt;The resources collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="49" pos:column="9">/// &lt;param name="serializer"&gt;The serializer.&lt;/param&gt;</comment>
        <comment type="line" pos:line="50" pos:column="9">/// &lt;param name="tabs"&gt;The tabs collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="51" pos:column="9">/// &lt;param name="displays"&gt;The displays collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="52" pos:column="9">/// &lt;param name="runtimePolicies"&gt;The runtime policies collection.&lt;/param&gt;</comment>
        <comment type="line" pos:line="53" pos:column="9">/// &lt;param name="defaultResource"&gt;The default resource.&lt;/param&gt;</comment>
        <comment type="line" pos:line="54" pos:column="9">/// &lt;param name="proxyFactory"&gt;The proxy factory.&lt;/param&gt;</comment>
        <comment type="line" pos:line="55" pos:column="9">/// &lt;param name="messageBroker"&gt;The message broker.&lt;/param&gt;</comment>
        <comment type="line" pos:line="56" pos:column="9">/// &lt;param name="endpointBaseUri"&gt;The endpoint base Uri.&lt;/param&gt;</comment>
        <comment type="line" pos:line="57" pos:column="9">/// &lt;param name="timerStrategy"&gt;The timer strategy.&lt;/param&gt;</comment>
        <comment type="line" pos:line="58" pos:column="9">/// &lt;param name="runtimePolicyStrategy"&gt;The runtime policy strategy.&lt;/param&gt;</comment>
        <comment type="line" pos:line="59" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if any parameter is &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <constructor><specifier pos:line="60" pos:column="9">public</specifier> <name pos:line="60" pos:column="16">GlimpseConfiguration</name><parameter_list pos:line="60" pos:column="36">(
            <param><decl><type><name pos:line="61" pos:column="13">IFrameworkProvider</name></type> <name pos:line="61" pos:column="32">frameworkProvider</name></decl></param>, 
            <param><decl><type><name pos:line="62" pos:column="13">ResourceEndpointConfiguration</name></type> <name pos:line="62" pos:column="43">endpointConfiguration</name></decl></param>,
            <param><decl><type><name><name pos:line="63" pos:column="13">ICollection</name><argument_list pos:line="63" pos:column="24">&lt;<argument><name pos:line="63" pos:column="25">IClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="63" pos:column="40">clientScripts</name></decl></param>,
            <param><decl><type><name pos:line="64" pos:column="13">ILogger</name></type> <name pos:line="64" pos:column="21">logger</name></decl></param>,
            <param><decl><type><name pos:line="65" pos:column="13">RuntimePolicy</name></type> <name pos:line="65" pos:column="27">defaultRuntimePolicy</name></decl></param>,
            <param><decl><type><name pos:line="66" pos:column="13">IHtmlEncoder</name></type> <name pos:line="66" pos:column="26">htmlEncoder</name></decl></param>,
            <param><decl><type><name pos:line="67" pos:column="13">IPersistenceStore</name></type> <name pos:line="67" pos:column="31">persistenceStore</name></decl></param>,
            <param><decl><type><name><name pos:line="68" pos:column="13">ICollection</name><argument_list pos:line="68" pos:column="24">&lt;<argument><name pos:line="68" pos:column="25">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="68" pos:column="37">inspectors</name></decl></param>,
            <param><decl><type><name><name pos:line="69" pos:column="13">ICollection</name><argument_list pos:line="69" pos:column="24">&lt;<argument><name pos:line="69" pos:column="25">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="69" pos:column="36">resources</name></decl></param>,
            <param><decl><type><name pos:line="70" pos:column="13">ISerializer</name></type> <name pos:line="70" pos:column="25">serializer</name></decl></param>,
            <param><decl><type><name><name pos:line="71" pos:column="13">ICollection</name><argument_list pos:line="71" pos:column="24">&lt;<argument><name pos:line="71" pos:column="25">ITab</name></argument>&gt;</argument_list></name></type> <name pos:line="71" pos:column="31">tabs</name></decl></param>,
            <param><decl><type><name><name pos:line="72" pos:column="13">ICollection</name><argument_list pos:line="72" pos:column="24">&lt;<argument><name pos:line="72" pos:column="25">IDisplay</name></argument>&gt;</argument_list></name></type> <name pos:line="72" pos:column="35">displays</name></decl></param>,
            <param><decl><type><name><name pos:line="73" pos:column="13">ICollection</name><argument_list pos:line="73" pos:column="24">&lt;<argument><name pos:line="73" pos:column="25">IRuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="73" pos:column="41">runtimePolicies</name></decl></param>,
            <param><decl><type><name pos:line="74" pos:column="13">IResource</name></type> <name pos:line="74" pos:column="23">defaultResource</name></decl></param>,
            <param><decl><type><name pos:line="75" pos:column="13">IProxyFactory</name></type> <name pos:line="75" pos:column="27">proxyFactory</name></decl></param>,
            <param><decl><type><name pos:line="76" pos:column="13">IMessageBroker</name></type> <name pos:line="76" pos:column="28">messageBroker</name></decl></param>,
            <param><decl><type><name pos:line="77" pos:column="13">string</name></type> <name pos:line="77" pos:column="20">endpointBaseUri</name></decl></param>,
            <param><decl><type><name><name pos:line="78" pos:column="13">Func</name><argument_list pos:line="78" pos:column="17">&lt;<argument><name pos:line="78" pos:column="18">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="78" pos:column="35">timerStrategy</name></decl></param>,
            <param><decl><type><name><name pos:line="79" pos:column="13">Func</name><argument_list pos:line="79" pos:column="17">&lt;<argument><name pos:line="79" pos:column="18">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="79" pos:column="33">runtimePolicyStrategy</name></decl></param>)</parameter_list>
        <block pos:line="80" pos:column="9">{
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">frameworkProvider</name> <op:operator pos:line="81" pos:column="35">==</op:operator> <name pos:line="81" pos:column="38">null</name></expr>)</condition><then pos:line="81" pos:column="43">
            <block pos:line="82" pos:column="13">{
                <throw pos:line="83" pos:column="17">throw <expr><op:operator pos:line="83" pos:column="23">new</op:operator> <call><name pos:line="83" pos:column="27">ArgumentNullException</name><argument_list pos:line="83" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="49">"frameworkProvider"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">endpointConfiguration</name> <op:operator pos:line="86" pos:column="39">==</op:operator> <name pos:line="86" pos:column="42">null</name></expr>)</condition><then pos:line="86" pos:column="47">
            <block pos:line="87" pos:column="13">{
                <throw pos:line="88" pos:column="17">throw <expr><op:operator pos:line="88" pos:column="23">new</op:operator> <call><name pos:line="88" pos:column="27">ArgumentNullException</name><argument_list pos:line="88" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="49">"endpointConfiguration"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name pos:line="91" pos:column="17">logger</name> <op:operator pos:line="91" pos:column="24">==</op:operator> <name pos:line="91" pos:column="27">null</name></expr>)</condition><then pos:line="91" pos:column="32">
            <block pos:line="92" pos:column="13">{
                <throw pos:line="93" pos:column="17">throw <expr><op:operator pos:line="93" pos:column="23">new</op:operator> <call><name pos:line="93" pos:column="27">ArgumentNullException</name><argument_list pos:line="93" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="49">"logger"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">htmlEncoder</name> <op:operator pos:line="96" pos:column="29">==</op:operator> <name pos:line="96" pos:column="32">null</name></expr>)</condition><then pos:line="96" pos:column="37">
            <block pos:line="97" pos:column="13">{
                <throw pos:line="98" pos:column="17">throw <expr><op:operator pos:line="98" pos:column="23">new</op:operator> <call><name pos:line="98" pos:column="27">ArgumentNullException</name><argument_list pos:line="98" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="49">"htmlEncoder"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name pos:line="101" pos:column="17">persistenceStore</name> <op:operator pos:line="101" pos:column="34">==</op:operator> <name pos:line="101" pos:column="37">null</name></expr>)</condition><then pos:line="101" pos:column="42">
            <block pos:line="102" pos:column="13">{
                <throw pos:line="103" pos:column="17">throw <expr><op:operator pos:line="103" pos:column="23">new</op:operator> <call><name pos:line="103" pos:column="27">ArgumentNullException</name><argument_list pos:line="103" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="49">"persistenceStore"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="106" pos:column="13">if <condition pos:line="106" pos:column="16">(<expr><name pos:line="106" pos:column="17">clientScripts</name> <op:operator pos:line="106" pos:column="31">==</op:operator> <name pos:line="106" pos:column="34">null</name></expr>)</condition><then pos:line="106" pos:column="39">
            <block pos:line="107" pos:column="13">{
                <throw pos:line="108" pos:column="17">throw <expr><op:operator pos:line="108" pos:column="23">new</op:operator> <call><name pos:line="108" pos:column="27">ArgumentNullException</name><argument_list pos:line="108" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="49">"clientScripts"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">resources</name> <op:operator pos:line="111" pos:column="27">==</op:operator> <name pos:line="111" pos:column="30">null</name></expr>)</condition><then pos:line="111" pos:column="35">
            <block pos:line="112" pos:column="13">{
                <throw pos:line="113" pos:column="17">throw <expr><op:operator pos:line="113" pos:column="23">new</op:operator> <call><name pos:line="113" pos:column="27">ArgumentNullException</name><argument_list pos:line="113" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="113" pos:column="49">"inspectors"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><name pos:line="116" pos:column="17">serializer</name> <op:operator pos:line="116" pos:column="28">==</op:operator> <name pos:line="116" pos:column="31">null</name></expr>)</condition><then pos:line="116" pos:column="36">
            <block pos:line="117" pos:column="13">{
                <throw pos:line="118" pos:column="17">throw <expr><op:operator pos:line="118" pos:column="23">new</op:operator> <call><name pos:line="118" pos:column="27">ArgumentNullException</name><argument_list pos:line="118" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="49">"serializer"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">tabs</name> <op:operator pos:line="121" pos:column="22">==</op:operator> <name pos:line="121" pos:column="25">null</name></expr>)</condition><then pos:line="121" pos:column="30">
            <block pos:line="122" pos:column="13">{
                <throw pos:line="123" pos:column="17">throw <expr><op:operator pos:line="123" pos:column="23">new</op:operator> <call><name pos:line="123" pos:column="27">ArgumentNullException</name><argument_list pos:line="123" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="49">"tabs"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><name pos:line="126" pos:column="17">displays</name> <op:operator pos:line="126" pos:column="26">==</op:operator> <name pos:line="126" pos:column="29">null</name></expr>)</condition><then pos:line="126" pos:column="34">
            <block pos:line="127" pos:column="13">{
                <throw pos:line="128" pos:column="17">throw <expr><op:operator pos:line="128" pos:column="23">new</op:operator> <call><name pos:line="128" pos:column="27">ArgumentNullException</name><argument_list pos:line="128" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="49">"displays"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><name pos:line="131" pos:column="17">runtimePolicies</name> <op:operator pos:line="131" pos:column="33">==</op:operator> <name pos:line="131" pos:column="36">null</name></expr>)</condition><then pos:line="131" pos:column="41">
            <block pos:line="132" pos:column="13">{
                <throw pos:line="133" pos:column="17">throw <expr><op:operator pos:line="133" pos:column="23">new</op:operator> <call><name pos:line="133" pos:column="27">ArgumentNullException</name><argument_list pos:line="133" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="133" pos:column="49">"runtimePolicies"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><name pos:line="136" pos:column="17">defaultResource</name> <op:operator pos:line="136" pos:column="33">==</op:operator> <name pos:line="136" pos:column="36">null</name></expr>)</condition><then pos:line="136" pos:column="41">
            <block pos:line="137" pos:column="13">{
                <throw pos:line="138" pos:column="17">throw <expr><op:operator pos:line="138" pos:column="23">new</op:operator> <call><name pos:line="138" pos:column="27">ArgumentNullException</name><argument_list pos:line="138" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="49">"defaultResource"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><name pos:line="141" pos:column="17">proxyFactory</name> <op:operator pos:line="141" pos:column="30">==</op:operator> <name pos:line="141" pos:column="33">null</name></expr>)</condition><then pos:line="141" pos:column="38">
            <block pos:line="142" pos:column="13">{
                <throw pos:line="143" pos:column="17">throw <expr><op:operator pos:line="143" pos:column="23">new</op:operator> <call><name pos:line="143" pos:column="27">ArgumentNullException</name><argument_list pos:line="143" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="49">"proxyFactory"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><name pos:line="146" pos:column="17">messageBroker</name> <op:operator pos:line="146" pos:column="31">==</op:operator> <name pos:line="146" pos:column="34">null</name></expr>)</condition><then pos:line="146" pos:column="39">
            <block pos:line="147" pos:column="13">{
                <throw pos:line="148" pos:column="17">throw <expr><op:operator pos:line="148" pos:column="23">new</op:operator> <call><name pos:line="148" pos:column="27">ArgumentNullException</name><argument_list pos:line="148" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="49">"messageBroker"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="151" pos:column="13">if <condition pos:line="151" pos:column="16">(<expr><name pos:line="151" pos:column="17">endpointBaseUri</name> <op:operator pos:line="151" pos:column="33">==</op:operator> <name pos:line="151" pos:column="36">null</name></expr>)</condition><then pos:line="151" pos:column="41">
            <block pos:line="152" pos:column="13">{
                <throw pos:line="153" pos:column="17">throw <expr><op:operator pos:line="153" pos:column="23">new</op:operator> <call><name pos:line="153" pos:column="27">ArgumentNullException</name><argument_list pos:line="153" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="49">"endpointBaseUri"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="156" pos:column="13">if <condition pos:line="156" pos:column="16">(<expr><name pos:line="156" pos:column="17">timerStrategy</name> <op:operator pos:line="156" pos:column="31">==</op:operator> <name pos:line="156" pos:column="34">null</name></expr>)</condition><then pos:line="156" pos:column="39">
            <block pos:line="157" pos:column="13">{
                <throw pos:line="158" pos:column="17">throw <expr><op:operator pos:line="158" pos:column="23">new</op:operator> <call><name pos:line="158" pos:column="27">ArgumentNullException</name><argument_list pos:line="158" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="49">"timerStrategy"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><name pos:line="161" pos:column="17">runtimePolicyStrategy</name> <op:operator pos:line="161" pos:column="39">==</op:operator> <name pos:line="161" pos:column="42">null</name></expr>)</condition><then pos:line="161" pos:column="47">
            <block pos:line="162" pos:column="13">{
                <throw pos:line="163" pos:column="17">throw <expr><op:operator pos:line="163" pos:column="23">new</op:operator> <call><name pos:line="163" pos:column="27">ArgumentNullException</name><argument_list pos:line="163" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="49">"runtimePolicyStrategy"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><name pos:line="166" pos:column="13">Logger</name> <op:operator pos:line="166" pos:column="20">=</op:operator> <name pos:line="166" pos:column="22">logger</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="167" pos:column="13">ClientScripts</name> <op:operator pos:line="167" pos:column="27">=</op:operator> <name pos:line="167" pos:column="29">clientScripts</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="168" pos:column="13">FrameworkProvider</name> <op:operator pos:line="168" pos:column="31">=</op:operator> <name pos:line="168" pos:column="33">frameworkProvider</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="169" pos:column="13">HtmlEncoder</name> <op:operator pos:line="169" pos:column="25">=</op:operator> <name pos:line="169" pos:column="27">htmlEncoder</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="170" pos:column="13">PersistenceStore</name> <op:operator pos:line="170" pos:column="30">=</op:operator> <name pos:line="170" pos:column="32">persistenceStore</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="171" pos:column="13">Inspectors</name> <op:operator pos:line="171" pos:column="24">=</op:operator> <name pos:line="171" pos:column="26">inspectors</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="172" pos:column="13">ResourceEndpoint</name> <op:operator pos:line="172" pos:column="30">=</op:operator> <name pos:line="172" pos:column="32">endpointConfiguration</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="173" pos:column="13">Resources</name> <op:operator pos:line="173" pos:column="23">=</op:operator> <name pos:line="173" pos:column="25">resources</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="174" pos:column="13">Serializer</name> <op:operator pos:line="174" pos:column="24">=</op:operator> <name pos:line="174" pos:column="26">serializer</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="175" pos:column="13">Tabs</name> <op:operator pos:line="175" pos:column="18">=</op:operator> <name pos:line="175" pos:column="20">tabs</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="176" pos:column="13">Displays</name> <op:operator pos:line="176" pos:column="22">=</op:operator> <name pos:line="176" pos:column="24">displays</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="177" pos:column="13">RuntimePolicies</name> <op:operator pos:line="177" pos:column="29">=</op:operator> <name pos:line="177" pos:column="31">runtimePolicies</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="178" pos:column="13">DefaultRuntimePolicy</name> <op:operator pos:line="178" pos:column="34">=</op:operator> <name pos:line="178" pos:column="36">defaultRuntimePolicy</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="179" pos:column="13">DefaultResource</name> <op:operator pos:line="179" pos:column="29">=</op:operator> <name pos:line="179" pos:column="31">defaultResource</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="180" pos:column="13">ProxyFactory</name> <op:operator pos:line="180" pos:column="26">=</op:operator> <name pos:line="180" pos:column="28">proxyFactory</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="181" pos:column="13">MessageBroker</name> <op:operator pos:line="181" pos:column="27">=</op:operator> <name pos:line="181" pos:column="29">messageBroker</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="182" pos:column="13">EndpointBaseUri</name> <op:operator pos:line="182" pos:column="29">=</op:operator> <name pos:line="182" pos:column="31">endpointBaseUri</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="183" pos:column="13">TimerStrategy</name> <op:operator pos:line="183" pos:column="27">=</op:operator> <name pos:line="183" pos:column="29">timerStrategy</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="184" pos:column="13">RuntimePolicyStrategy</name> <op:operator pos:line="184" pos:column="35">=</op:operator> <name pos:line="184" pos:column="37">runtimePolicyStrategy</name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="187" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="188" pos:column="9">/// Gets or sets the client scripts collection.</comment>
        <comment type="line" pos:line="189" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="190" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="191" pos:column="9">/// The client scripts.</comment>
        <comment type="line" pos:line="192" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="193" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="194" pos:column="9">public</specifier> <name><name pos:line="194" pos:column="16">ICollection</name><argument_list pos:line="194" pos:column="27">&lt;<argument><name pos:line="194" pos:column="28">IClientScript</name></argument>&gt;</argument_list></name></type> <name pos:line="194" pos:column="43">ClientScripts</name>
        <block pos:line="195" pos:column="9">{
            <function><name pos:line="196" pos:column="13">get</name>
            <block pos:line="197" pos:column="13">{
                <return pos:line="198" pos:column="17">return <expr><name pos:line="198" pos:column="24">clientScripts</name></expr>;</return>
            }</block></function>

            <function><name pos:line="201" pos:column="13">set</name>
            <block pos:line="202" pos:column="13">{
                <if pos:line="203" pos:column="17">if <condition pos:line="203" pos:column="20">(<expr><name pos:line="203" pos:column="21">value</name> <op:operator pos:line="203" pos:column="27">==</op:operator> <name pos:line="203" pos:column="30">null</name></expr>)</condition><then pos:line="203" pos:column="35">
                <block pos:line="204" pos:column="17">{
                    <throw pos:line="205" pos:column="21">throw <expr><op:operator pos:line="205" pos:column="27">new</op:operator> <call><name pos:line="205" pos:column="31">ArgumentNullException</name><argument_list pos:line="205" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="205" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="208" pos:column="17">clientScripts</name> <op:operator pos:line="208" pos:column="31">=</op:operator> <name pos:line="208" pos:column="33">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="212" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="213" pos:column="9">/// Gets or sets the default &lt;see cref="IResource"/&gt; to execute.</comment>
        <comment type="line" pos:line="214" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="215" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="216" pos:column="9">/// The default resource.</comment>
        <comment type="line" pos:line="217" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="218" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="219" pos:column="9">public</specifier> <name pos:line="219" pos:column="16">IResource</name></type> <name pos:line="219" pos:column="26">DefaultResource</name>
        <block pos:line="220" pos:column="9">{
            <function><name pos:line="221" pos:column="13">get</name>
            <block pos:line="222" pos:column="13">{
                <return pos:line="223" pos:column="17">return <expr><name pos:line="223" pos:column="24">defaultResource</name></expr>;</return>
            }</block></function>

            <function><name pos:line="226" pos:column="13">set</name>
            <block pos:line="227" pos:column="13">{
                <if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><name pos:line="228" pos:column="21">value</name> <op:operator pos:line="228" pos:column="27">==</op:operator> <name pos:line="228" pos:column="30">null</name></expr>)</condition><then pos:line="228" pos:column="35">
                <block pos:line="229" pos:column="17">{
                    <throw pos:line="230" pos:column="21">throw <expr><op:operator pos:line="230" pos:column="27">new</op:operator> <call><name pos:line="230" pos:column="31">ArgumentNullException</name><argument_list pos:line="230" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="230" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="233" pos:column="17">defaultResource</name> <op:operator pos:line="233" pos:column="33">=</op:operator> <name pos:line="233" pos:column="35">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="237" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="238" pos:column="9">/// Gets or sets the default runtime policy.</comment>
        <comment type="line" pos:line="239" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="240" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="241" pos:column="9">/// The default runtime policy.</comment>
        <comment type="line" pos:line="242" pos:column="9">/// &lt;/value&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="243" pos:column="9">public</specifier> <name pos:line="243" pos:column="16">RuntimePolicy</name></type> <name pos:line="243" pos:column="30">DefaultRuntimePolicy</name>
        <block pos:line="244" pos:column="9">{
            <function><name pos:line="245" pos:column="13">get</name>
            <block pos:line="246" pos:column="13">{
                <return pos:line="247" pos:column="17">return <expr><name pos:line="247" pos:column="24">defaultRuntimePolicy</name></expr>;</return>
            }</block></function>

            <function><name pos:line="250" pos:column="13">set</name>
            <block pos:line="251" pos:column="13">{
                <expr_stmt><expr><name pos:line="252" pos:column="17">defaultRuntimePolicy</name> <op:operator pos:line="252" pos:column="38">=</op:operator> <name pos:line="252" pos:column="40">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="256" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="257" pos:column="9">/// Gets or sets the endpoint base URI.</comment>
        <comment type="line" pos:line="258" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="259" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="260" pos:column="9">/// The endpoint base URI.</comment>
        <comment type="line" pos:line="261" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="262" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="263" pos:column="9">public</specifier> <name pos:line="263" pos:column="16">string</name></type> <name pos:line="263" pos:column="23">EndpointBaseUri</name>
        <block pos:line="264" pos:column="9">{
            <function><name pos:line="265" pos:column="13">get</name>
            <block pos:line="266" pos:column="13">{
                <return pos:line="267" pos:column="17">return <expr><name pos:line="267" pos:column="24">endpointBaseUri</name></expr>;</return>
            }</block></function>

            <function><name pos:line="270" pos:column="13">set</name>
            <block pos:line="271" pos:column="13">{
                <if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">value</name> <op:operator pos:line="272" pos:column="27">==</op:operator> <name pos:line="272" pos:column="30">null</name></expr>)</condition><then pos:line="272" pos:column="35">
                <block pos:line="273" pos:column="17">{
                    <throw pos:line="274" pos:column="21">throw <expr><op:operator pos:line="274" pos:column="27">new</op:operator> <call><name pos:line="274" pos:column="31">ArgumentNullException</name><argument_list pos:line="274" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="274" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="277" pos:column="17">endpointBaseUri</name> <op:operator pos:line="277" pos:column="33">=</op:operator> <name pos:line="277" pos:column="35">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="281" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="282" pos:column="9">/// Gets or sets the &lt;see cref="IFrameworkProvider"/&gt;.</comment>
        <comment type="line" pos:line="283" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="284" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="285" pos:column="9">/// The configured &lt;see cref="IFrameworkProvider"/&gt;.</comment>
        <comment type="line" pos:line="286" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="287" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="288" pos:column="9">public</specifier> <name pos:line="288" pos:column="16">IFrameworkProvider</name></type> <name pos:line="288" pos:column="35">FrameworkProvider</name>
        <block pos:line="289" pos:column="9">{
            <function><name pos:line="290" pos:column="13">get</name>
            <block pos:line="291" pos:column="13">{
                <return pos:line="292" pos:column="17">return <expr><name pos:line="292" pos:column="24">frameworkProvider</name></expr>;</return>
            }</block></function>

            <function><name pos:line="295" pos:column="13">set</name>
            <block pos:line="296" pos:column="13">{
                <if pos:line="297" pos:column="17">if <condition pos:line="297" pos:column="20">(<expr><name pos:line="297" pos:column="21">value</name> <op:operator pos:line="297" pos:column="27">==</op:operator> <name pos:line="297" pos:column="30">null</name></expr>)</condition><then pos:line="297" pos:column="35">
                <block pos:line="298" pos:column="17">{
                    <throw pos:line="299" pos:column="21">throw <expr><op:operator pos:line="299" pos:column="27">new</op:operator> <call><name pos:line="299" pos:column="31">ArgumentNullException</name><argument_list pos:line="299" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="302" pos:column="17">frameworkProvider</name> <op:operator pos:line="302" pos:column="35">=</op:operator> <name pos:line="302" pos:column="37">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="306" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="307" pos:column="9">/// Gets or sets the &lt;see cref="IHtmlEncoder"/&gt;.</comment>
        <comment type="line" pos:line="308" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="309" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="310" pos:column="9">/// The configured &lt;see cref="IHtmlEncoder"/&gt;.</comment>
        <comment type="line" pos:line="311" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="312" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="313" pos:column="9">public</specifier> <name pos:line="313" pos:column="16">IHtmlEncoder</name></type> <name pos:line="313" pos:column="29">HtmlEncoder</name>
        <block pos:line="314" pos:column="9">{
            <function><name pos:line="315" pos:column="13">get</name>
            <block pos:line="316" pos:column="13">{
                <return pos:line="317" pos:column="17">return <expr><name pos:line="317" pos:column="24">htmlEncoder</name></expr>;</return>
            }</block></function>

            <function><name pos:line="320" pos:column="13">set</name>
            <block pos:line="321" pos:column="13">{
                <if pos:line="322" pos:column="17">if <condition pos:line="322" pos:column="20">(<expr><name pos:line="322" pos:column="21">value</name> <op:operator pos:line="322" pos:column="27">==</op:operator> <name pos:line="322" pos:column="30">null</name></expr>)</condition><then pos:line="322" pos:column="35">
                <block pos:line="323" pos:column="17">{
                    <throw pos:line="324" pos:column="21">throw <expr><op:operator pos:line="324" pos:column="27">new</op:operator> <call><name pos:line="324" pos:column="31">ArgumentNullException</name><argument_list pos:line="324" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="324" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="327" pos:column="17">htmlEncoder</name> <op:operator pos:line="327" pos:column="29">=</op:operator> <name pos:line="327" pos:column="31">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="331" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="332" pos:column="9">/// Gets or sets the &lt;see cref="ILogger"/&gt;.</comment>
        <comment type="line" pos:line="333" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="334" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="335" pos:column="9">/// The configured &lt;see cref="ILogger"/&gt;.</comment>
        <comment type="line" pos:line="336" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="337" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="338" pos:column="9">public</specifier> <name pos:line="338" pos:column="16">ILogger</name></type> <name pos:line="338" pos:column="24">Logger</name>
        <block pos:line="339" pos:column="9">{
            <function><name pos:line="340" pos:column="13">get</name>
            <block pos:line="341" pos:column="13">{
                <return pos:line="342" pos:column="17">return <expr><name pos:line="342" pos:column="24">logger</name></expr>;</return>
            }</block></function>

            <function><name pos:line="345" pos:column="13">set</name>
            <block pos:line="346" pos:column="13">{
                <if pos:line="347" pos:column="17">if <condition pos:line="347" pos:column="20">(<expr><name pos:line="347" pos:column="21">value</name> <op:operator pos:line="347" pos:column="27">==</op:operator> <name pos:line="347" pos:column="30">null</name></expr>)</condition><then pos:line="347" pos:column="35">
                <block pos:line="348" pos:column="17">{
                    <throw pos:line="349" pos:column="21">throw <expr><op:operator pos:line="349" pos:column="27">new</op:operator> <call><name pos:line="349" pos:column="31">ArgumentNullException</name><argument_list pos:line="349" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="349" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="352" pos:column="17">logger</name> <op:operator pos:line="352" pos:column="24">=</op:operator> <name pos:line="352" pos:column="26">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="356" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="357" pos:column="9">/// Gets or sets the &lt;see cref="IMessageBroker"/&gt;.</comment>
        <comment type="line" pos:line="358" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="359" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="360" pos:column="9">/// The configured &lt;see cref="IMessageBroker"/&gt;.</comment>
        <comment type="line" pos:line="361" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="362" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="363" pos:column="9">public</specifier> <name pos:line="363" pos:column="16">IMessageBroker</name></type> <name pos:line="363" pos:column="31">MessageBroker</name>
        <block pos:line="364" pos:column="9">{
            <function><name pos:line="365" pos:column="13">get</name>
            <block pos:line="366" pos:column="13">{
                <return pos:line="367" pos:column="17">return <expr><name pos:line="367" pos:column="24">messageBroker</name></expr>;</return>
            }</block></function>

            <function><name pos:line="370" pos:column="13">set</name>
            <block pos:line="371" pos:column="13">{
                <if pos:line="372" pos:column="17">if <condition pos:line="372" pos:column="20">(<expr><name pos:line="372" pos:column="21">value</name> <op:operator pos:line="372" pos:column="27">==</op:operator> <name pos:line="372" pos:column="30">null</name></expr>)</condition><then pos:line="372" pos:column="35">
                <block pos:line="373" pos:column="17">{
                    <throw pos:line="374" pos:column="21">throw <expr><op:operator pos:line="374" pos:column="27">new</op:operator> <call><name pos:line="374" pos:column="31">ArgumentNullException</name><argument_list pos:line="374" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="374" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="377" pos:column="17">messageBroker</name> <op:operator pos:line="377" pos:column="31">=</op:operator> <name pos:line="377" pos:column="33">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="381" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="382" pos:column="9">/// Gets or sets the &lt;see cref="IPersistenceStore"/&gt;.</comment>
        <comment type="line" pos:line="383" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="384" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="385" pos:column="9">/// The configured &lt;see cref="IPersistenceStore"/&gt;.</comment>
        <comment type="line" pos:line="386" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="387" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="388" pos:column="9">public</specifier> <name pos:line="388" pos:column="16">IPersistenceStore</name></type> <name pos:line="388" pos:column="34">PersistenceStore</name>
        <block pos:line="389" pos:column="9">{
            <function><name pos:line="390" pos:column="13">get</name>
            <block pos:line="391" pos:column="13">{
                <return pos:line="392" pos:column="17">return <expr><name pos:line="392" pos:column="24">persistenceStore</name></expr>;</return>
            }</block></function>

            <function><name pos:line="395" pos:column="13">set</name>
            <block pos:line="396" pos:column="13">{
                <if pos:line="397" pos:column="17">if <condition pos:line="397" pos:column="20">(<expr><name pos:line="397" pos:column="21">value</name> <op:operator pos:line="397" pos:column="27">==</op:operator> <name pos:line="397" pos:column="30">null</name></expr>)</condition><then pos:line="397" pos:column="35">
                <block pos:line="398" pos:column="17">{
                    <throw pos:line="399" pos:column="21">throw <expr><op:operator pos:line="399" pos:column="27">new</op:operator> <call><name pos:line="399" pos:column="31">ArgumentNullException</name><argument_list pos:line="399" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="402" pos:column="17">persistenceStore</name> <op:operator pos:line="402" pos:column="34">=</op:operator> <name pos:line="402" pos:column="36">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="406" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="407" pos:column="9">/// Gets or sets the collection of &lt;see cref="IInspector"/&gt;.</comment>
        <comment type="line" pos:line="408" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="409" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="410" pos:column="9">/// The configured collection of &lt;see cref="IInspector"/&gt;.</comment>
        <comment type="line" pos:line="411" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="412" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="413" pos:column="9">public</specifier> <name><name pos:line="413" pos:column="16">ICollection</name><argument_list pos:line="413" pos:column="27">&lt;<argument><name pos:line="413" pos:column="28">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="413" pos:column="40">Inspectors</name>
        <block pos:line="414" pos:column="9">{
            <function><name pos:line="415" pos:column="13">get</name>
            <block pos:line="416" pos:column="13">{
                <return pos:line="417" pos:column="17">return <expr><name pos:line="417" pos:column="24">inspectors</name></expr>;</return>
            }</block></function>

            <function><name pos:line="420" pos:column="13">set</name>
            <block pos:line="421" pos:column="13">{
                <if pos:line="422" pos:column="17">if <condition pos:line="422" pos:column="20">(<expr><name pos:line="422" pos:column="21">value</name> <op:operator pos:line="422" pos:column="27">==</op:operator> <name pos:line="422" pos:column="30">null</name></expr>)</condition><then pos:line="422" pos:column="35">
                <block pos:line="423" pos:column="17">{
                    <throw pos:line="424" pos:column="21">throw <expr><op:operator pos:line="424" pos:column="27">new</op:operator> <call><name pos:line="424" pos:column="31">ArgumentNullException</name><argument_list pos:line="424" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="424" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="427" pos:column="17">inspectors</name> <op:operator pos:line="427" pos:column="28">=</op:operator> <name pos:line="427" pos:column="30">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="431" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="432" pos:column="9">/// Gets or sets the &lt;see cref="IProxyFactory"/&gt;.</comment>
        <comment type="line" pos:line="433" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="434" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="435" pos:column="9">/// The configured &lt;see cref="IProxyFactory"/&gt;.</comment>
        <comment type="line" pos:line="436" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="437" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="438" pos:column="9">public</specifier> <name pos:line="438" pos:column="16">IProxyFactory</name></type> <name pos:line="438" pos:column="30">ProxyFactory</name>
        <block pos:line="439" pos:column="9">{
            <function><name pos:line="440" pos:column="13">get</name>
            <block pos:line="441" pos:column="13">{
                <return pos:line="442" pos:column="17">return <expr><name pos:line="442" pos:column="24">proxyFactory</name></expr>;</return>
            }</block></function>

            <function><name pos:line="445" pos:column="13">set</name>
            <block pos:line="446" pos:column="13">{
                <if pos:line="447" pos:column="17">if <condition pos:line="447" pos:column="20">(<expr><name pos:line="447" pos:column="21">value</name> <op:operator pos:line="447" pos:column="27">==</op:operator> <name pos:line="447" pos:column="30">null</name></expr>)</condition><then pos:line="447" pos:column="35">
                <block pos:line="448" pos:column="17">{
                    <throw pos:line="449" pos:column="21">throw <expr><op:operator pos:line="449" pos:column="27">new</op:operator> <call><name pos:line="449" pos:column="31">ArgumentNullException</name><argument_list pos:line="449" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="452" pos:column="17">proxyFactory</name> <op:operator pos:line="452" pos:column="30">=</op:operator> <name pos:line="452" pos:column="32">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="456" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="457" pos:column="9">/// Gets or sets the &lt;see cref="ResourceEndpointConfiguration"/&gt;.</comment>
        <comment type="line" pos:line="458" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="459" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="460" pos:column="9">/// The configured &lt;see cref="ResourceEndpointConfiguration"/&gt;.</comment>
        <comment type="line" pos:line="461" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="462" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="463" pos:column="9">public</specifier> <name pos:line="463" pos:column="16">ResourceEndpointConfiguration</name></type> <name pos:line="463" pos:column="46">ResourceEndpoint</name>
        <block pos:line="464" pos:column="9">{
            <function><name pos:line="465" pos:column="13">get</name>
            <block pos:line="466" pos:column="13">{
                <return pos:line="467" pos:column="17">return <expr><name pos:line="467" pos:column="24">resourceEndpoint</name></expr>;</return>
            }</block></function>

            <function><name pos:line="470" pos:column="13">set</name>
            <block pos:line="471" pos:column="13">{
                <if pos:line="472" pos:column="17">if <condition pos:line="472" pos:column="20">(<expr><name pos:line="472" pos:column="21">value</name> <op:operator pos:line="472" pos:column="27">==</op:operator> <name pos:line="472" pos:column="30">null</name></expr>)</condition><then pos:line="472" pos:column="35">
                <block pos:line="473" pos:column="17">{
                    <throw pos:line="474" pos:column="21">throw <expr><op:operator pos:line="474" pos:column="27">new</op:operator> <call><name pos:line="474" pos:column="31">ArgumentNullException</name><argument_list pos:line="474" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="474" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="477" pos:column="17">resourceEndpoint</name> <op:operator pos:line="477" pos:column="34">=</op:operator> <name pos:line="477" pos:column="36">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="481" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="482" pos:column="9">/// Gets or sets the collection of &lt;see cref="IResource"/&gt;.</comment>
        <comment type="line" pos:line="483" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="484" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="485" pos:column="9">/// The configured collection of &lt;see cref="IResource"/&gt;.</comment>
        <comment type="line" pos:line="486" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="487" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="488" pos:column="9">public</specifier> <name><name pos:line="488" pos:column="16">ICollection</name><argument_list pos:line="488" pos:column="27">&lt;<argument><name pos:line="488" pos:column="28">IResource</name></argument>&gt;</argument_list></name></type> <name pos:line="488" pos:column="39">Resources</name>
        <block pos:line="489" pos:column="9">{
            <function><name pos:line="490" pos:column="13">get</name>
            <block pos:line="491" pos:column="13">{
                <return pos:line="492" pos:column="17">return <expr><name pos:line="492" pos:column="24">resources</name></expr>;</return>
            }</block></function>

            <function><name pos:line="495" pos:column="13">set</name>
            <block pos:line="496" pos:column="13">{
                <if pos:line="497" pos:column="17">if <condition pos:line="497" pos:column="20">(<expr><name pos:line="497" pos:column="21">value</name> <op:operator pos:line="497" pos:column="27">==</op:operator> <name pos:line="497" pos:column="30">null</name></expr>)</condition><then pos:line="497" pos:column="35">
                <block pos:line="498" pos:column="17">{
                    <throw pos:line="499" pos:column="21">throw <expr><op:operator pos:line="499" pos:column="27">new</op:operator> <call><name pos:line="499" pos:column="31">ArgumentNullException</name><argument_list pos:line="499" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="499" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="502" pos:column="17">resources</name> <op:operator pos:line="502" pos:column="27">=</op:operator> <name pos:line="502" pos:column="29">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="506" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="507" pos:column="9">/// Gets or sets the collection of &lt;see cref="IRuntimePolicy"/&gt;.</comment>
        <comment type="line" pos:line="508" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="509" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="510" pos:column="9">/// The configured collection of &lt;see cref="IRuntimePolicy"/&gt;.</comment>
        <comment type="line" pos:line="511" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="512" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="513" pos:column="9">public</specifier> <name><name pos:line="513" pos:column="16">ICollection</name><argument_list pos:line="513" pos:column="27">&lt;<argument><name pos:line="513" pos:column="28">IRuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="513" pos:column="44">RuntimePolicies</name>
        <block pos:line="514" pos:column="9">{
            <function><name pos:line="515" pos:column="13">get</name>
            <block pos:line="516" pos:column="13">{
                <return pos:line="517" pos:column="17">return <expr><name pos:line="517" pos:column="24">runtimePolicies</name></expr>;</return>
            }</block></function>

            <function><name pos:line="520" pos:column="13">set</name>
            <block pos:line="521" pos:column="13">{
                <if pos:line="522" pos:column="17">if <condition pos:line="522" pos:column="20">(<expr><name pos:line="522" pos:column="21">value</name> <op:operator pos:line="522" pos:column="27">==</op:operator> <name pos:line="522" pos:column="30">null</name></expr>)</condition><then pos:line="522" pos:column="35">
                <block pos:line="523" pos:column="17">{
                    <throw pos:line="524" pos:column="21">throw <expr><op:operator pos:line="524" pos:column="27">new</op:operator> <call><name pos:line="524" pos:column="31">ArgumentNullException</name><argument_list pos:line="524" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="524" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="527" pos:column="17">runtimePolicies</name> <op:operator pos:line="527" pos:column="33">=</op:operator> <name pos:line="527" pos:column="35">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="531" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="532" pos:column="9">/// Gets or sets the &lt;see cref="RuntimePolicy"/&gt; strategy.</comment>
        <comment type="line" pos:line="533" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="534" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="535" pos:column="9">/// The configured &lt;see cref="RuntimePolicy"/&gt;.</comment>
        <comment type="line" pos:line="536" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="537" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="538" pos:column="9">public</specifier> <name><name pos:line="538" pos:column="16">Func</name><argument_list pos:line="538" pos:column="20">&lt;<argument><name pos:line="538" pos:column="21">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="538" pos:column="36">RuntimePolicyStrategy</name>
        <block pos:line="539" pos:column="9">{
            <function><name pos:line="540" pos:column="13">get</name>
            <block pos:line="541" pos:column="13">{
                <return pos:line="542" pos:column="17">return <expr><name pos:line="542" pos:column="24">runtimePolicyStrategy</name></expr>;</return>
            }</block></function>

            <function><name pos:line="545" pos:column="13">set</name>
            <block pos:line="546" pos:column="13">{
                <if pos:line="547" pos:column="17">if <condition pos:line="547" pos:column="20">(<expr><name pos:line="547" pos:column="21">value</name> <op:operator pos:line="547" pos:column="27">==</op:operator> <name pos:line="547" pos:column="30">null</name></expr>)</condition><then pos:line="547" pos:column="35">
                <block pos:line="548" pos:column="17">{
                    <throw pos:line="549" pos:column="21">throw <expr><op:operator pos:line="549" pos:column="27">new</op:operator> <call><name pos:line="549" pos:column="31">ArgumentNullException</name><argument_list pos:line="549" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="549" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="552" pos:column="17">runtimePolicyStrategy</name> <op:operator pos:line="552" pos:column="39">=</op:operator> <name pos:line="552" pos:column="41">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="556" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="557" pos:column="9">/// Gets or sets the &lt;see cref="ISerializer"/&gt;.</comment>
        <comment type="line" pos:line="558" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="559" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="560" pos:column="9">/// The configured &lt;see cref="ISerializer"/&gt;.</comment>
        <comment type="line" pos:line="561" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="562" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="563" pos:column="9">public</specifier> <name pos:line="563" pos:column="16">ISerializer</name></type> <name pos:line="563" pos:column="28">Serializer</name>
        <block pos:line="564" pos:column="9">{
            <function><name pos:line="565" pos:column="13">get</name>
            <block pos:line="566" pos:column="13">{
                <return pos:line="567" pos:column="17">return <expr><name pos:line="567" pos:column="24">serializer</name></expr>;</return>
            }</block></function>

            <function><name pos:line="570" pos:column="13">set</name>
            <block pos:line="571" pos:column="13">{
                <if pos:line="572" pos:column="17">if <condition pos:line="572" pos:column="20">(<expr><name pos:line="572" pos:column="21">value</name> <op:operator pos:line="572" pos:column="27">==</op:operator> <name pos:line="572" pos:column="30">null</name></expr>)</condition><then pos:line="572" pos:column="35">
                <block pos:line="573" pos:column="17">{
                    <throw pos:line="574" pos:column="21">throw <expr><op:operator pos:line="574" pos:column="27">new</op:operator> <call><name pos:line="574" pos:column="31">ArgumentNullException</name><argument_list pos:line="574" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="574" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="577" pos:column="17">serializer</name> <op:operator pos:line="577" pos:column="28">=</op:operator> <name pos:line="577" pos:column="30">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="581" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="582" pos:column="9">/// Gets or sets the collection of &lt;see cref="ITab"/&gt;.</comment>
        <comment type="line" pos:line="583" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="584" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="585" pos:column="9">/// The configured &lt;see cref="ITab"/&gt;.</comment>
        <comment type="line" pos:line="586" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="587" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="588" pos:column="9">public</specifier> <name><name pos:line="588" pos:column="16">ICollection</name><argument_list pos:line="588" pos:column="27">&lt;<argument><name pos:line="588" pos:column="28">ITab</name></argument>&gt;</argument_list></name></type> <name pos:line="588" pos:column="34">Tabs</name>
        <block pos:line="589" pos:column="9">{
            <function><name pos:line="590" pos:column="13">get</name>
            <block pos:line="591" pos:column="13">{
                <return pos:line="592" pos:column="17">return <expr><name pos:line="592" pos:column="24">tabs</name></expr>;</return>
            }</block></function>

            <function><name pos:line="595" pos:column="13">set</name>
            <block pos:line="596" pos:column="13">{
                <if pos:line="597" pos:column="17">if <condition pos:line="597" pos:column="20">(<expr><name pos:line="597" pos:column="21">value</name> <op:operator pos:line="597" pos:column="27">==</op:operator> <name pos:line="597" pos:column="30">null</name></expr>)</condition><then pos:line="597" pos:column="35">
                <block pos:line="598" pos:column="17">{
                    <throw pos:line="599" pos:column="21">throw <expr><op:operator pos:line="599" pos:column="27">new</op:operator> <call><name pos:line="599" pos:column="31">ArgumentNullException</name><argument_list pos:line="599" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="599" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="602" pos:column="17">tabs</name> <op:operator pos:line="602" pos:column="22">=</op:operator> <name pos:line="602" pos:column="24">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="606" pos:column="9">public</specifier> <name><name pos:line="606" pos:column="16">ICollection</name><argument_list pos:line="606" pos:column="27">&lt;<argument><name pos:line="606" pos:column="28">IDisplay</name></argument>&gt;</argument_list></name></type> <name pos:line="606" pos:column="38">Displays</name>
        <block pos:line="607" pos:column="9">{
            <function><name pos:line="608" pos:column="13">get</name>
            <block pos:line="609" pos:column="13">{
                <return pos:line="610" pos:column="17">return <expr><name pos:line="610" pos:column="24">displays</name></expr>;</return>
            }</block></function>

            <function><name pos:line="613" pos:column="13">set</name>
            <block pos:line="614" pos:column="13">{
                <if pos:line="615" pos:column="17">if <condition pos:line="615" pos:column="20">(<expr><name pos:line="615" pos:column="21">value</name> <op:operator pos:line="615" pos:column="27">==</op:operator> <name pos:line="615" pos:column="30">null</name></expr>)</condition><then pos:line="615" pos:column="35">
                <block pos:line="616" pos:column="17">{
                    <throw pos:line="617" pos:column="21">throw <expr><op:operator pos:line="617" pos:column="27">new</op:operator> <call><name pos:line="617" pos:column="31">ArgumentNullException</name><argument_list pos:line="617" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="617" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="620" pos:column="17">displays</name> <op:operator pos:line="620" pos:column="26">=</op:operator> <name pos:line="620" pos:column="28">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <comment type="line" pos:line="624" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="625" pos:column="9">/// Gets or sets the &lt;see cref="IExecutionTimer"/&gt; strategy.</comment>
        <comment type="line" pos:line="626" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="627" pos:column="9">/// &lt;value&gt;</comment>
        <comment type="line" pos:line="628" pos:column="9">/// The configured &lt;see cref="IExecutionTimer"/&gt; strategy.</comment>
        <comment type="line" pos:line="629" pos:column="9">/// &lt;/value&gt;</comment>
        <comment type="line" pos:line="630" pos:column="9">/// &lt;exception cref="System.ArgumentNullException"&gt;An exception is thrown if the value is set to &lt;c&gt;null&lt;/c&gt;.&lt;/exception&gt;</comment>
        <decl_stmt><decl><type><specifier pos:line="631" pos:column="9">public</specifier> <name><name pos:line="631" pos:column="16">Func</name><argument_list pos:line="631" pos:column="20">&lt;<argument><name pos:line="631" pos:column="21">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="631" pos:column="38">TimerStrategy</name> 
        <block pos:line="632" pos:column="9">{ 
            <function><name pos:line="633" pos:column="13">get</name>
            <block pos:line="634" pos:column="13">{
                <return pos:line="635" pos:column="17">return <expr><name pos:line="635" pos:column="24">timerStrategy</name></expr>;</return>
            }</block></function>

            <function><name pos:line="638" pos:column="13">set</name>
            <block pos:line="639" pos:column="13">{
                <if pos:line="640" pos:column="17">if <condition pos:line="640" pos:column="20">(<expr><name pos:line="640" pos:column="21">value</name> <op:operator pos:line="640" pos:column="27">==</op:operator> <name pos:line="640" pos:column="30">null</name></expr>)</condition><then pos:line="640" pos:column="35">
                <block pos:line="641" pos:column="17">{
                    <throw pos:line="642" pos:column="21">throw <expr><op:operator pos:line="642" pos:column="27">new</op:operator> <call><name pos:line="642" pos:column="31">ArgumentNullException</name><argument_list pos:line="642" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="642" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
                }</block></then></if>

                <expr_stmt><expr><name pos:line="645" pos:column="17">timerStrategy</name> <op:operator pos:line="645" pos:column="31">=</op:operator> <name pos:line="645" pos:column="33">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="649" pos:column="9">public</specifier> <name pos:line="649" pos:column="16">string</name></type> <name pos:line="649" pos:column="23">Hash</name>
        <block pos:line="650" pos:column="9">{
            <function><name pos:line="651" pos:column="13">get</name>
            <block pos:line="652" pos:column="13">{
                <if pos:line="653" pos:column="17">if <condition pos:line="653" pos:column="20">(<expr><op:operator pos:line="653" pos:column="21">!</op:operator><call><name><name pos:line="653" pos:column="22">string</name><op:operator pos:line="653" pos:column="28">.</op:operator><name pos:line="653" pos:column="29">IsNullOrEmpty</name></name><argument_list pos:line="653" pos:column="42">(<argument><expr><name pos:line="653" pos:column="43">hash</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="653" pos:column="49">
                <block pos:line="654" pos:column="17">{
                    <return pos:line="655" pos:column="21">return <expr><name pos:line="655" pos:column="28">hash</name></expr>;</return>
                }</block></then></if>

                <decl_stmt><decl><type><name pos:line="658" pos:column="17">var</name></type> <name pos:line="658" pos:column="21">configuredTypes</name> <init pos:line="658" pos:column="37">= <expr><op:operator pos:line="658" pos:column="39">new</op:operator> <name><name pos:line="658" pos:column="43">List</name><argument_list pos:line="658" pos:column="47">&lt;<argument><name pos:line="658" pos:column="48">Type</name></argument>&gt;</argument_list></name> <block pos:line="658" pos:column="54">{ <expr><call><name pos:line="658" pos:column="56">GetType</name><argument_list pos:line="658" pos:column="63">()</argument_list></call></expr> }</block></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="659" pos:column="17">configuredTypes</name><op:operator pos:line="659" pos:column="32">.</op:operator><name pos:line="659" pos:column="33">AddRange</name></name><argument_list pos:line="659" pos:column="41">(<argument><expr><call><name><name pos:line="659" pos:column="42">Tabs</name><op:operator pos:line="659" pos:column="46">.</op:operator><name pos:line="659" pos:column="47">Select</name></name><argument_list pos:line="659" pos:column="53">(<argument><expr><lambda><name pos:line="659" pos:column="54">tab</name> <op:operator pos:line="659" pos:column="58">=&gt;</op:operator> <call><name><name pos:line="659" pos:column="61">tab</name><op:operator pos:line="659" pos:column="64">.</op:operator><name pos:line="659" pos:column="65">GetType</name></name><argument_list pos:line="659" pos:column="72">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="659" pos:column="75">.</op:operator><call><name pos:line="659" pos:column="76">OrderBy</name><argument_list pos:line="659" pos:column="83">(<argument><expr><lambda><name pos:line="659" pos:column="84">type</name> <op:operator pos:line="659" pos:column="89">=&gt;</op:operator> <name><name pos:line="659" pos:column="92">type</name><op:operator pos:line="659" pos:column="96">.</op:operator><name pos:line="659" pos:column="97">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="660" pos:column="17">configuredTypes</name><op:operator pos:line="660" pos:column="32">.</op:operator><name pos:line="660" pos:column="33">AddRange</name></name><argument_list pos:line="660" pos:column="41">(<argument><expr><call><name><name pos:line="660" pos:column="42">Inspectors</name><op:operator pos:line="660" pos:column="52">.</op:operator><name pos:line="660" pos:column="53">Select</name></name><argument_list pos:line="660" pos:column="59">(<argument><expr><lambda><name pos:line="660" pos:column="60">inspector</name> <op:operator pos:line="660" pos:column="70">=&gt;</op:operator> <call><name><name pos:line="660" pos:column="73">inspector</name><op:operator pos:line="660" pos:column="82">.</op:operator><name pos:line="660" pos:column="83">GetType</name></name><argument_list pos:line="660" pos:column="90">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="660" pos:column="93">.</op:operator><call><name pos:line="660" pos:column="94">OrderBy</name><argument_list pos:line="660" pos:column="101">(<argument><expr><lambda><name pos:line="660" pos:column="102">type</name> <op:operator pos:line="660" pos:column="107">=&gt;</op:operator> <name><name pos:line="660" pos:column="110">type</name><op:operator pos:line="660" pos:column="114">.</op:operator><name pos:line="660" pos:column="115">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="661" pos:column="17">configuredTypes</name><op:operator pos:line="661" pos:column="32">.</op:operator><name pos:line="661" pos:column="33">AddRange</name></name><argument_list pos:line="661" pos:column="41">(<argument><expr><call><name><name pos:line="661" pos:column="42">Resources</name><op:operator pos:line="661" pos:column="51">.</op:operator><name pos:line="661" pos:column="52">Select</name></name><argument_list pos:line="661" pos:column="58">(<argument><expr><lambda><name pos:line="661" pos:column="59">resource</name> <op:operator pos:line="661" pos:column="68">=&gt;</op:operator> <call><name><name pos:line="661" pos:column="71">resource</name><op:operator pos:line="661" pos:column="79">.</op:operator><name pos:line="661" pos:column="80">GetType</name></name><argument_list pos:line="661" pos:column="87">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="661" pos:column="90">.</op:operator><call><name pos:line="661" pos:column="91">OrderBy</name><argument_list pos:line="661" pos:column="98">(<argument><expr><lambda><name pos:line="661" pos:column="99">type</name> <op:operator pos:line="661" pos:column="104">=&gt;</op:operator> <name><name pos:line="661" pos:column="107">type</name><op:operator pos:line="661" pos:column="111">.</op:operator><name pos:line="661" pos:column="112">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="662" pos:column="17">configuredTypes</name><op:operator pos:line="662" pos:column="32">.</op:operator><name pos:line="662" pos:column="33">AddRange</name></name><argument_list pos:line="662" pos:column="41">(<argument><expr><call><name><name pos:line="662" pos:column="42">ClientScripts</name><op:operator pos:line="662" pos:column="55">.</op:operator><name pos:line="662" pos:column="56">Select</name></name><argument_list pos:line="662" pos:column="62">(<argument><expr><lambda><name pos:line="662" pos:column="63">clientScript</name> <op:operator pos:line="662" pos:column="76">=&gt;</op:operator> <call><name><name pos:line="662" pos:column="79">clientScript</name><op:operator pos:line="662" pos:column="91">.</op:operator><name pos:line="662" pos:column="92">GetType</name></name><argument_list pos:line="662" pos:column="99">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="662" pos:column="102">.</op:operator><call><name pos:line="662" pos:column="103">OrderBy</name><argument_list pos:line="662" pos:column="110">(<argument><expr><lambda><name pos:line="662" pos:column="111">type</name> <op:operator pos:line="662" pos:column="116">=&gt;</op:operator> <name><name pos:line="662" pos:column="119">type</name><op:operator pos:line="662" pos:column="123">.</op:operator><name pos:line="662" pos:column="124">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="663" pos:column="17">configuredTypes</name><op:operator pos:line="663" pos:column="32">.</op:operator><name pos:line="663" pos:column="33">AddRange</name></name><argument_list pos:line="663" pos:column="41">(<argument><expr><call><name><name pos:line="663" pos:column="42">RuntimePolicies</name><op:operator pos:line="663" pos:column="57">.</op:operator><name pos:line="663" pos:column="58">Select</name></name><argument_list pos:line="663" pos:column="64">(<argument><expr><lambda><name pos:line="663" pos:column="65">policy</name> <op:operator pos:line="663" pos:column="72">=&gt;</op:operator> <call><name><name pos:line="663" pos:column="75">policy</name><op:operator pos:line="663" pos:column="81">.</op:operator><name pos:line="663" pos:column="82">GetType</name></name><argument_list pos:line="663" pos:column="89">()</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="663" pos:column="92">.</op:operator><call><name pos:line="663" pos:column="93">OrderBy</name><argument_list pos:line="663" pos:column="100">(<argument><expr><lambda><name pos:line="663" pos:column="101">type</name> <op:operator pos:line="663" pos:column="106">=&gt;</op:operator> <name><name pos:line="663" pos:column="109">type</name><op:operator pos:line="663" pos:column="113">.</op:operator><name pos:line="663" pos:column="114">Name</name></name></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="665" pos:column="17">var</name></type> <name pos:line="665" pos:column="21">crc32</name> <init pos:line="665" pos:column="27">= <expr><op:operator pos:line="665" pos:column="29">new</op:operator> <call><name pos:line="665" pos:column="33">Crc32</name><argument_list pos:line="665" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="666" pos:column="17">var</name></type> <name pos:line="666" pos:column="21">sb</name> <init pos:line="666" pos:column="24">= <expr><op:operator pos:line="666" pos:column="26">new</op:operator> <call><name pos:line="666" pos:column="30">StringBuilder</name><argument_list pos:line="666" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <using pos:line="667" pos:column="17">using (<decl><type><name pos:line="667" pos:column="24">var</name></type> <name pos:line="667" pos:column="28">memoryStream</name> <init pos:line="667" pos:column="41">= <expr><op:operator pos:line="667" pos:column="43">new</op:operator> <call><name pos:line="667" pos:column="47">MemoryStream</name><argument_list pos:line="667" pos:column="59">()</argument_list></call></expr></init></decl>)
                <block pos:line="668" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="669" pos:column="21">var</name></type> <name pos:line="669" pos:column="25">binaryFormatter</name> <init pos:line="669" pos:column="41">= <expr><op:operator pos:line="669" pos:column="43">new</op:operator> <call><name pos:line="669" pos:column="47">BinaryFormatter</name><argument_list pos:line="669" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="670" pos:column="21">binaryFormatter</name><op:operator pos:line="670" pos:column="36">.</op:operator><name pos:line="670" pos:column="37">Serialize</name></name><argument_list pos:line="670" pos:column="46">(<argument><expr><name pos:line="670" pos:column="47">memoryStream</name></expr></argument>, <argument><expr><name pos:line="670" pos:column="61">configuredTypes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name><name pos:line="671" pos:column="21">memoryStream</name><op:operator pos:line="671" pos:column="33">.</op:operator><name pos:line="671" pos:column="34">Position</name></name> <op:operator pos:line="671" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="671" pos:column="45">0</lit:literal></expr>;</expr_stmt>

                    <decl_stmt><decl><type><name pos:line="673" pos:column="21">var</name></type> <name pos:line="673" pos:column="25">computeHash</name> <init pos:line="673" pos:column="37">= <expr><call><name><name pos:line="673" pos:column="39">crc32</name><op:operator pos:line="673" pos:column="44">.</op:operator><name pos:line="673" pos:column="45">ComputeHash</name></name><argument_list pos:line="673" pos:column="56">(<argument><expr><name pos:line="673" pos:column="57">memoryStream</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <foreach pos:line="675" pos:column="21">foreach (<init><decl><type><name pos:line="675" pos:column="30">var</name></type> <name pos:line="675" pos:column="34">b</name> <range pos:line="675" pos:column="36">in <expr><name pos:line="675" pos:column="39">computeHash</name></expr></range></decl></init>)
                    <block pos:line="676" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="677" pos:column="25">sb</name><op:operator pos:line="677" pos:column="27">.</op:operator><name pos:line="677" pos:column="28">Append</name></name><argument_list pos:line="677" pos:column="34">(<argument><expr><call><name><name pos:line="677" pos:column="35">b</name><op:operator pos:line="677" pos:column="36">.</op:operator><name pos:line="677" pos:column="37">ToString</name></name><argument_list pos:line="677" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="677" pos:column="46">"x2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></foreach>
                }</block></using>

                <expr_stmt><expr><name pos:line="681" pos:column="17">hash</name> <op:operator pos:line="681" pos:column="22">=</op:operator> <call><name><name pos:line="681" pos:column="24">sb</name><op:operator pos:line="681" pos:column="26">.</op:operator><name pos:line="681" pos:column="27">ToString</name></name><argument_list pos:line="681" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="682" pos:column="17">return <expr><name pos:line="682" pos:column="24">hash</name></expr>;</return>
            }</block></function>

            <function><name pos:line="685" pos:column="13">set</name>
            <block pos:line="686" pos:column="13">{
                <expr_stmt><expr><name pos:line="687" pos:column="17">hash</name> <op:operator pos:line="687" pos:column="22">=</op:operator> <name pos:line="687" pos:column="24">value</name></expr>;</expr_stmt>
            }</block></function>
        }</block></decl></decl_stmt>

        <function><type><attribute pos:line="691" pos:column="9">[<expr><call><name pos:line="691" pos:column="10">Obsolete</name><argument_list pos:line="691" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="691" pos:column="19">"HACK: To support TraceListener with TraceSource via web.config"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="692" pos:column="9">public</specifier> <specifier pos:line="692" pos:column="16">static</specifier> <name pos:line="692" pos:column="23">ILogger</name></type> <name pos:line="692" pos:column="31">GetLogger</name><parameter_list pos:line="692" pos:column="40">()</parameter_list>
        <block pos:line="693" pos:column="9">{
            <return pos:line="694" pos:column="13">return <expr><name pos:line="694" pos:column="20">logger</name></expr>;</return>
        }</block></function>

        <function><type><attribute pos:line="697" pos:column="9">[<expr><call><name pos:line="697" pos:column="10">Obsolete</name><argument_list pos:line="697" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="697" pos:column="19">"HACK: To support TraceListener with TraceSource via web.config"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="698" pos:column="9">public</specifier> <specifier pos:line="698" pos:column="16">static</specifier> <name><name pos:line="698" pos:column="23">Func</name><argument_list pos:line="698" pos:column="27">&lt;<argument><name pos:line="698" pos:column="28">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="698" pos:column="45">GetConfiguredTimerStrategy</name><parameter_list pos:line="698" pos:column="71">()</parameter_list>
        <block pos:line="699" pos:column="9">{
            <return pos:line="700" pos:column="13">return <expr><lambda><parameter_list pos:line="700" pos:column="20">()</parameter_list> <op:operator pos:line="700" pos:column="23">=&gt;</op:operator>
            <block pos:line="701" pos:column="13">{
                <try pos:line="702" pos:column="17">try
                <block pos:line="703" pos:column="17">{
                    <return pos:line="704" pos:column="21">return <expr><call><name pos:line="704" pos:column="28">timerStrategy</name><argument_list pos:line="704" pos:column="41">()</argument_list></call></expr>;</return>
                }</block>
                <catch pos:line="706" pos:column="17">catch
                <block pos:line="707" pos:column="17">{
                    <comment type="line" pos:line="708" pos:column="21">// Avoid exception being thrown from threads without access to request store</comment>
                    <return pos:line="709" pos:column="21">return <expr><name pos:line="709" pos:column="28">null</name></expr>;</return>
                }</block></catch></try>
            }</block></lambda></expr>;</return> 
        }</block></function>

        <function><type><attribute pos:line="714" pos:column="9">[<expr><call><name pos:line="714" pos:column="10">Obsolete</name><argument_list pos:line="714" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="714" pos:column="19">"HACK: To support TraceListener with TraceSource via web.config"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="715" pos:column="9">public</specifier> <specifier pos:line="715" pos:column="16">static</specifier> <name pos:line="715" pos:column="23">IMessageBroker</name></type> <name pos:line="715" pos:column="38">GetConfiguredMessageBroker</name><parameter_list pos:line="715" pos:column="64">()</parameter_list>
        <block pos:line="716" pos:column="9">{
            <return pos:line="717" pos:column="13">return <expr><name pos:line="717" pos:column="20">messageBroker</name></expr>;</return>
        }</block></function>

        <function><type><attribute pos:line="720" pos:column="9">[<expr><call><name pos:line="720" pos:column="10">Obsolete</name><argument_list pos:line="720" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="720" pos:column="19">"HACK: To prevent unnecessary wrapping of SQL connections, commands etc"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="721" pos:column="9">public</specifier> <specifier pos:line="721" pos:column="16">static</specifier> <name pos:line="721" pos:column="23">RuntimePolicy</name></type> <name pos:line="721" pos:column="37">GetDefaultRuntimePolicy</name><parameter_list pos:line="721" pos:column="60">()</parameter_list>
        <block pos:line="722" pos:column="9">{
            <return pos:line="723" pos:column="13">return <expr><name pos:line="723" pos:column="20">defaultRuntimePolicy</name></expr>;</return>
        }</block></function>

        <function><type><attribute pos:line="726" pos:column="9">[<expr><call><name pos:line="726" pos:column="10">Obsolete</name><argument_list pos:line="726" pos:column="18">(<argument><expr><lit:literal type="string" pos:line="726" pos:column="19">"HACK: To prevent unnecessary wrapping of SQL connections, commands etc"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
        <specifier pos:line="727" pos:column="9">public</specifier> <specifier pos:line="727" pos:column="16">static</specifier> <name><name pos:line="727" pos:column="23">Func</name><argument_list pos:line="727" pos:column="27">&lt;<argument><name pos:line="727" pos:column="28">RuntimePolicy</name></argument>&gt;</argument_list></name></type> <name pos:line="727" pos:column="43">GetRuntimePolicyStategy</name><parameter_list pos:line="727" pos:column="66">()</parameter_list>
        <block pos:line="728" pos:column="9">{
            <return pos:line="729" pos:column="13">return <expr><name pos:line="729" pos:column="20">runtimePolicyStrategy</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
