<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\Model\RequestModel.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Specialized</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Globalization</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Threading</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">AspNet</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">Model</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">RequestModel</name>
    <block pos:line="11" pos:column="5">{
        <constructor><specifier pos:line="12" pos:column="9">public</specifier> <name pos:line="12" pos:column="16">RequestModel</name><parameter_list pos:line="12" pos:column="28">(<param><decl><type><name pos:line="12" pos:column="29">HttpContextBase</name></type> <name pos:line="12" pos:column="45">context</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">request</name> <init pos:line="14" pos:column="25">= <expr><name><name pos:line="14" pos:column="27">context</name><op:operator pos:line="14" pos:column="34">.</op:operator><name pos:line="14" pos:column="35">Request</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><name pos:line="16" pos:column="13">Cookies</name> <op:operator pos:line="16" pos:column="21">=</op:operator> <call><name pos:line="16" pos:column="23">GetCookies</name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">request</name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">context</name><op:operator pos:line="16" pos:column="50">.</op:operator><name pos:line="16" pos:column="51">Server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">CurrentUiCulture</name> <op:operator pos:line="17" pos:column="30">=</op:operator> <name><name pos:line="17" pos:column="32">Thread</name><op:operator pos:line="17" pos:column="38">.</op:operator><name pos:line="17" pos:column="39">CurrentThread</name><op:operator pos:line="17" pos:column="52">.</op:operator><name pos:line="17" pos:column="53">CurrentUICulture</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">Files</name> <op:operator pos:line="18" pos:column="19">=</op:operator> <call><name pos:line="18" pos:column="21">GetPostedFiles</name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">FormVariables</name> <op:operator pos:line="19" pos:column="27">=</op:operator> <call><name pos:line="19" pos:column="29">GetFormVariables</name><argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">HeaderFields</name> <op:operator pos:line="20" pos:column="26">=</op:operator> <call><name pos:line="20" pos:column="28">GetHeaderFields</name><argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">QueryString</name> <op:operator pos:line="21" pos:column="25">=</op:operator> <call><name pos:line="21" pos:column="27">GetQueryString</name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">request</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">RawUrl</name> <op:operator pos:line="22" pos:column="20">=</op:operator> <name><name pos:line="22" pos:column="22">request</name><op:operator pos:line="22" pos:column="29">.</op:operator><name pos:line="22" pos:column="30">RawUrl</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">RequestType</name> <op:operator pos:line="23" pos:column="25">=</op:operator> <name><name pos:line="23" pos:column="27">request</name><op:operator pos:line="23" pos:column="34">.</op:operator><name pos:line="23" pos:column="35">RequestType</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">Url</name> <op:operator pos:line="24" pos:column="17">=</op:operator> <name><name pos:line="24" pos:column="19">request</name><op:operator pos:line="24" pos:column="26">.</op:operator><name pos:line="24" pos:column="27">Url</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="25" pos:column="13">UrlReferrer</name> <op:operator pos:line="25" pos:column="25">=</op:operator> <name><name pos:line="25" pos:column="27">request</name><op:operator pos:line="25" pos:column="34">.</op:operator><name pos:line="25" pos:column="35">UrlReferrer</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">UserAgent</name> <op:operator pos:line="26" pos:column="23">=</op:operator> <name><name pos:line="26" pos:column="25">request</name><op:operator pos:line="26" pos:column="32">.</op:operator><name pos:line="26" pos:column="33">UserAgent</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">UserHostAddress</name> <op:operator pos:line="27" pos:column="29">=</op:operator> <name><name pos:line="27" pos:column="31">request</name><op:operator pos:line="27" pos:column="38">.</op:operator><name pos:line="27" pos:column="39">UserHostAddress</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">UserHostName</name> <op:operator pos:line="28" pos:column="26">=</op:operator> <name><name pos:line="28" pos:column="28">request</name><op:operator pos:line="28" pos:column="35">.</op:operator><name pos:line="28" pos:column="36">UserHostName</name></name></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="30" pos:column="13">ApplicationPath</name> <op:operator pos:line="30" pos:column="29">=</op:operator> <name><name pos:line="30" pos:column="31">request</name><op:operator pos:line="30" pos:column="38">.</op:operator><name pos:line="30" pos:column="39">ApplicationPath</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">AppRelativeCurrentExecutionFilePath</name> <op:operator pos:line="31" pos:column="49">=</op:operator> <name><name pos:line="31" pos:column="51">request</name><op:operator pos:line="31" pos:column="58">.</op:operator><name pos:line="31" pos:column="59">AppRelativeCurrentExecutionFilePath</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">CurrentExecutionFilePath</name> <op:operator pos:line="32" pos:column="38">=</op:operator> <name><name pos:line="32" pos:column="40">request</name><op:operator pos:line="32" pos:column="47">.</op:operator><name pos:line="32" pos:column="48">CurrentExecutionFilePath</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">FilePath</name> <op:operator pos:line="33" pos:column="22">=</op:operator> <name><name pos:line="33" pos:column="24">request</name><op:operator pos:line="33" pos:column="31">.</op:operator><name pos:line="33" pos:column="32">FilePath</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">Path</name> <op:operator pos:line="34" pos:column="18">=</op:operator> <name><name pos:line="34" pos:column="20">request</name><op:operator pos:line="34" pos:column="27">.</op:operator><name pos:line="34" pos:column="28">Path</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">PathInfo</name> <op:operator pos:line="35" pos:column="22">=</op:operator> <name><name pos:line="35" pos:column="24">request</name><op:operator pos:line="35" pos:column="31">.</op:operator><name pos:line="35" pos:column="32">PathInfo</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">PhysicalApplicationPath</name> <op:operator pos:line="36" pos:column="37">=</op:operator> <name><name pos:line="36" pos:column="39">request</name><op:operator pos:line="36" pos:column="46">.</op:operator><name pos:line="36" pos:column="47">PhysicalApplicationPath</name></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">PhysicalPath</name> <op:operator pos:line="37" pos:column="26">=</op:operator> <name><name pos:line="37" pos:column="28">request</name><op:operator pos:line="37" pos:column="35">.</op:operator><name pos:line="37" pos:column="36">PhysicalPath</name></name></expr>;</expr_stmt>
        }</block></constructor>

        <comment type="line" pos:line="40" pos:column="9">//// TODO: Add InputStream</comment>

        <decl_stmt><decl><type><specifier pos:line="42" pos:column="9">public</specifier> <name><name pos:line="42" pos:column="16">IEnumerable</name><argument_list pos:line="42" pos:column="27">&lt;<argument><name pos:line="42" pos:column="28">Cookie</name></argument>&gt;</argument_list></name></type> <name pos:line="42" pos:column="36">Cookies</name> <block pos:line="42" pos:column="44">{ <function_decl><name pos:line="42" pos:column="46">get</name>;</function_decl> <function_decl><specifier pos:line="42" pos:column="51">private</specifier> <name pos:line="42" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">public</specifier> <name pos:line="44" pos:column="16">CultureInfo</name></type> <name pos:line="44" pos:column="28">CurrentUiCulture</name> <block pos:line="44" pos:column="45">{ <function_decl><name pos:line="44" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="44" pos:column="52">private</specifier> <name pos:line="44" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">public</specifier> <name><name pos:line="46" pos:column="16">IEnumerable</name><argument_list pos:line="46" pos:column="27">&lt;<argument><name pos:line="46" pos:column="28">PostedFile</name></argument>&gt;</argument_list></name></type> <name pos:line="46" pos:column="40">Files</name> <block pos:line="46" pos:column="46">{ <function_decl><name pos:line="46" pos:column="48">get</name>;</function_decl> <function_decl><specifier pos:line="46" pos:column="53">private</specifier> <name pos:line="46" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">public</specifier> <name><name pos:line="48" pos:column="16">IEnumerable</name><argument_list pos:line="48" pos:column="27">&lt;<argument><name pos:line="48" pos:column="28">FormVariable</name></argument>&gt;</argument_list></name></type> <name pos:line="48" pos:column="42">FormVariables</name> <block pos:line="48" pos:column="56">{ <function_decl><name pos:line="48" pos:column="58">get</name>;</function_decl> <function_decl><specifier pos:line="48" pos:column="63">private</specifier> <name pos:line="48" pos:column="71">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">public</specifier> <name><name pos:line="50" pos:column="16">IEnumerable</name><argument_list pos:line="50" pos:column="27">&lt;<argument><name pos:line="50" pos:column="28">HeaderField</name></argument>&gt;</argument_list></name></type> <name pos:line="50" pos:column="41">HeaderFields</name> <block pos:line="50" pos:column="54">{ <function_decl><name pos:line="50" pos:column="56">get</name>;</function_decl> <function_decl><specifier pos:line="50" pos:column="61">private</specifier> <name pos:line="50" pos:column="69">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="52" pos:column="9">public</specifier> <name><name pos:line="52" pos:column="16">IEnumerable</name><argument_list pos:line="52" pos:column="27">&lt;<argument><name pos:line="52" pos:column="28">QueryStringParameter</name></argument>&gt;</argument_list></name></type> <name pos:line="52" pos:column="50">QueryString</name> <block pos:line="52" pos:column="62">{ <function_decl><name pos:line="52" pos:column="64">get</name>;</function_decl> <function_decl><specifier pos:line="52" pos:column="69">private</specifier> <name pos:line="52" pos:column="77">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">string</name></type> <name pos:line="54" pos:column="23">RawUrl</name> <block pos:line="54" pos:column="30">{ <function_decl><name pos:line="54" pos:column="32">get</name>;</function_decl> <function_decl><specifier pos:line="54" pos:column="37">private</specifier> <name pos:line="54" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">string</name></type> <name pos:line="56" pos:column="23">RequestType</name> <block pos:line="56" pos:column="35">{ <function_decl><name pos:line="56" pos:column="37">get</name>;</function_decl> <function_decl><specifier pos:line="56" pos:column="42">private</specifier> <name pos:line="56" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">public</specifier> <name pos:line="58" pos:column="16">Uri</name></type> <name pos:line="58" pos:column="20">Url</name> <block pos:line="58" pos:column="24">{ <function_decl><name pos:line="58" pos:column="26">get</name>;</function_decl> <function_decl><specifier pos:line="58" pos:column="31">private</specifier> <name pos:line="58" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">public</specifier> <name pos:line="60" pos:column="16">Uri</name></type> <name pos:line="60" pos:column="20">UrlReferrer</name> <block pos:line="60" pos:column="32">{ <function_decl><name pos:line="60" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="60" pos:column="39">private</specifier> <name pos:line="60" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="62" pos:column="9">public</specifier> <name pos:line="62" pos:column="16">string</name></type> <name pos:line="62" pos:column="23">UserAgent</name> <block pos:line="62" pos:column="33">{ <function_decl><name pos:line="62" pos:column="35">get</name>;</function_decl> <function_decl><specifier pos:line="62" pos:column="40">private</specifier> <name pos:line="62" pos:column="48">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">string</name></type> <name pos:line="64" pos:column="23">UserHostAddress</name> <block pos:line="64" pos:column="39">{ <function_decl><name pos:line="64" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="64" pos:column="46">private</specifier> <name pos:line="64" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">public</specifier> <name pos:line="66" pos:column="16">string</name></type> <name pos:line="66" pos:column="23">UserHostName</name> <block pos:line="66" pos:column="36">{ <function_decl><name pos:line="66" pos:column="38">get</name>;</function_decl> <function_decl><specifier pos:line="66" pos:column="43">private</specifier> <name pos:line="66" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="68" pos:column="9">public</specifier> <name pos:line="68" pos:column="16">string</name></type> <name pos:line="68" pos:column="23">ApplicationPath</name> <block pos:line="68" pos:column="39">{ <function_decl><name pos:line="68" pos:column="41">get</name>;</function_decl> <function_decl><specifier pos:line="68" pos:column="46">private</specifier> <name pos:line="68" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="70" pos:column="9">public</specifier> <name pos:line="70" pos:column="16">string</name></type> <name pos:line="70" pos:column="23">AppRelativeCurrentExecutionFilePath</name> <block pos:line="70" pos:column="59">{ <function_decl><name pos:line="70" pos:column="61">get</name>;</function_decl> <function_decl><specifier pos:line="70" pos:column="66">private</specifier> <name pos:line="70" pos:column="74">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">public</specifier> <name pos:line="72" pos:column="16">string</name></type> <name pos:line="72" pos:column="23">CurrentExecutionFilePath</name> <block pos:line="72" pos:column="48">{ <function_decl><name pos:line="72" pos:column="50">get</name>;</function_decl> <function_decl><specifier pos:line="72" pos:column="55">private</specifier> <name pos:line="72" pos:column="63">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">string</name></type> <name pos:line="74" pos:column="23">FilePath</name> <block pos:line="74" pos:column="32">{ <function_decl><name pos:line="74" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="74" pos:column="39">private</specifier> <name pos:line="74" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="76" pos:column="9">public</specifier> <name pos:line="76" pos:column="16">string</name></type> <name pos:line="76" pos:column="23">Path</name> <block pos:line="76" pos:column="28">{ <function_decl><name pos:line="76" pos:column="30">get</name>;</function_decl> <function_decl><specifier pos:line="76" pos:column="35">private</specifier> <name pos:line="76" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="78" pos:column="9">public</specifier> <name pos:line="78" pos:column="16">string</name></type> <name pos:line="78" pos:column="23">PathInfo</name> <block pos:line="78" pos:column="32">{ <function_decl><name pos:line="78" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="78" pos:column="39">private</specifier> <name pos:line="78" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="80" pos:column="9">public</specifier> <name pos:line="80" pos:column="16">string</name></type> <name pos:line="80" pos:column="23">PhysicalApplicationPath</name> <block pos:line="80" pos:column="47">{ <function_decl><name pos:line="80" pos:column="49">get</name>;</function_decl> <function_decl><specifier pos:line="80" pos:column="54">private</specifier> <name pos:line="80" pos:column="62">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="82" pos:column="9">public</specifier> <name pos:line="82" pos:column="16">string</name></type> <name pos:line="82" pos:column="23">PhysicalPath</name> <block pos:line="82" pos:column="36">{ <function_decl><name pos:line="82" pos:column="38">get</name>;</function_decl> <function_decl><specifier pos:line="82" pos:column="43">private</specifier> <name pos:line="82" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="84" pos:column="9">private</specifier> <name><name pos:line="84" pos:column="17">IEnumerable</name><argument_list pos:line="84" pos:column="28">&lt;<argument><name pos:line="84" pos:column="29">Cookie</name></argument>&gt;</argument_list></name></type> <name pos:line="84" pos:column="37">GetCookies</name><parameter_list pos:line="84" pos:column="47">(<param><decl><type><name pos:line="84" pos:column="48">HttpRequestBase</name></type> <name pos:line="84" pos:column="64">httpRequest</name></decl></param>, <param><decl><type><name pos:line="84" pos:column="77">HttpServerUtilityBase</name></type> <name pos:line="84" pos:column="99">server</name></decl></param>)</parameter_list>
        <block pos:line="85" pos:column="9">{
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">httpRequest</name> <op:operator pos:line="86" pos:column="29">!=</op:operator> <name pos:line="86" pos:column="32">null</name></expr>)</condition><then pos:line="86" pos:column="37">
            <block pos:line="87" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="88" pos:column="17">var</name></type> <name pos:line="88" pos:column="21">cookies</name> <init pos:line="88" pos:column="29">= <expr><name><name pos:line="88" pos:column="31">httpRequest</name><op:operator pos:line="88" pos:column="42">.</op:operator><name pos:line="88" pos:column="43">Cookies</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">cookies</name> <op:operator pos:line="90" pos:column="29">!=</op:operator> <name pos:line="90" pos:column="32">null</name></expr>)</condition><then pos:line="90" pos:column="37">
                <block pos:line="91" pos:column="17">{
                    <foreach pos:line="92" pos:column="21">foreach (<init><decl><type><name pos:line="92" pos:column="30">var</name></type> <name pos:line="92" pos:column="34">key</name> <range pos:line="92" pos:column="38">in <expr><name><name pos:line="92" pos:column="41">cookies</name><op:operator pos:line="92" pos:column="48">.</op:operator><name pos:line="92" pos:column="49">AllKeys</name></name></expr></range></decl></init>)
                    <block pos:line="93" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="94" pos:column="25">var</name></type> <name pos:line="94" pos:column="29">cookie</name> <init pos:line="94" pos:column="36">= <expr><name><name pos:line="94" pos:column="38">cookies</name><index pos:line="94" pos:column="45">[<expr><name pos:line="94" pos:column="46">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name pos:line="96" pos:column="29">cookie</name> <op:operator pos:line="96" pos:column="36">!=</op:operator> <name pos:line="96" pos:column="39">null</name></expr>)</condition><then pos:line="96" pos:column="44">
                        <block pos:line="97" pos:column="25">{
                            <return><specifier pos:line="98" pos:column="29">yield</specifier> return <expr><op:operator pos:line="98" pos:column="42">new</op:operator> <name pos:line="98" pos:column="46">Cookie</name>
                                <block pos:line="99" pos:column="33">{
                                    <expr><name pos:line="100" pos:column="37">Name</name> <op:operator pos:line="100" pos:column="42">=</op:operator> <name><name pos:line="100" pos:column="44">cookie</name><op:operator pos:line="100" pos:column="50">.</op:operator><name pos:line="100" pos:column="51">Name</name></name></expr><op:operator pos:line="100" pos:column="55">,</op:operator>
                                    <expr><name pos:line="101" pos:column="37">Value</name> <op:operator pos:line="101" pos:column="43">=</op:operator> <call><name><name pos:line="101" pos:column="45">server</name><op:operator pos:line="101" pos:column="51">.</op:operator><name pos:line="101" pos:column="52">UrlDecode</name></name><argument_list pos:line="101" pos:column="61">(<argument><expr><name><name pos:line="101" pos:column="62">cookie</name><op:operator pos:line="101" pos:column="68">.</op:operator><name pos:line="101" pos:column="69">Value</name></name></expr></argument>)</argument_list></call></expr>
                                }</block></expr>;</return>
                        }</block></then></if>
                    }</block></foreach>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="109" pos:column="9">private</specifier> <name><name pos:line="109" pos:column="17">IEnumerable</name><argument_list pos:line="109" pos:column="28">&lt;<argument><name pos:line="109" pos:column="29">PostedFile</name></argument>&gt;</argument_list></name></type> <name pos:line="109" pos:column="41">GetPostedFiles</name><parameter_list pos:line="109" pos:column="55">(<param><decl><type><name pos:line="109" pos:column="56">HttpRequestBase</name></type> <name pos:line="109" pos:column="72">httpRequest</name></decl></param>)</parameter_list>
        <block pos:line="110" pos:column="9">{
            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">httpRequest</name> <op:operator pos:line="111" pos:column="29">!=</op:operator> <name pos:line="111" pos:column="32">null</name></expr>)</condition><then pos:line="111" pos:column="37">
            <block pos:line="112" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="113" pos:column="17">HttpFileCollectionBase</name></type> <name pos:line="113" pos:column="40">files</name> <init pos:line="113" pos:column="46">= <expr><name pos:line="113" pos:column="48">null</name></expr></init></decl>;</decl_stmt>

                <try pos:line="115" pos:column="17">try
                <block pos:line="116" pos:column="17">{
                    <expr_stmt><expr><name pos:line="117" pos:column="21">files</name> <op:operator pos:line="117" pos:column="27">=</op:operator> <name><name pos:line="117" pos:column="29">httpRequest</name><op:operator pos:line="117" pos:column="40">.</op:operator><name pos:line="117" pos:column="41">Files</name></name></expr>;</expr_stmt>
                }</block>
                <catch pos:line="119" pos:column="17">catch <parameter_list pos:line="119" pos:column="23">(<param><decl><type><name pos:line="119" pos:column="24">HttpException</name></type></decl></param>)</parameter_list>
                <block pos:line="120" pos:column="17">{
                }</block></catch></try>

                <if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name pos:line="123" pos:column="21">files</name> <op:operator pos:line="123" pos:column="27">!=</op:operator> <name pos:line="123" pos:column="30">null</name></expr>)</condition><then pos:line="123" pos:column="35">
                <block pos:line="124" pos:column="17">{
                    <foreach pos:line="125" pos:column="21">foreach (<init><decl><type><name pos:line="125" pos:column="30">var</name></type> <name pos:line="125" pos:column="34">key</name> <range pos:line="125" pos:column="38">in <expr><name><name pos:line="125" pos:column="41">files</name><op:operator pos:line="125" pos:column="46">.</op:operator><name pos:line="125" pos:column="47">AllKeys</name></name></expr></range></decl></init>)
                    <block pos:line="126" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="127" pos:column="25">var</name></type> <name pos:line="127" pos:column="29">httpPostedFileBase</name> <init pos:line="127" pos:column="48">= <expr><name><name pos:line="127" pos:column="50">files</name><index pos:line="127" pos:column="55">[<expr><name pos:line="127" pos:column="56">key</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if pos:line="129" pos:column="25">if <condition pos:line="129" pos:column="28">(<expr><name pos:line="129" pos:column="29">httpPostedFileBase</name> <op:operator pos:line="129" pos:column="48">!=</op:operator> <name pos:line="129" pos:column="51">null</name></expr>)</condition><then pos:line="129" pos:column="56">
                        <block pos:line="130" pos:column="25">{
                            <return><specifier pos:line="131" pos:column="29">yield</specifier> return <expr><op:operator pos:line="131" pos:column="42">new</op:operator> <name pos:line="131" pos:column="46">PostedFile</name>
                            <block pos:line="132" pos:column="29">{
                                <expr><name pos:line="133" pos:column="33">FileName</name> <op:operator pos:line="133" pos:column="42">=</op:operator> <name><name pos:line="133" pos:column="44">httpPostedFileBase</name><op:operator pos:line="133" pos:column="62">.</op:operator><name pos:line="133" pos:column="63">FileName</name></name></expr><op:operator pos:line="133" pos:column="71">,</op:operator>
                                <expr><name pos:line="134" pos:column="33">ContentType</name> <op:operator pos:line="134" pos:column="45">=</op:operator> <name><name pos:line="134" pos:column="47">httpPostedFileBase</name><op:operator pos:line="134" pos:column="65">.</op:operator><name pos:line="134" pos:column="66">ContentType</name></name></expr><op:operator pos:line="134" pos:column="77">,</op:operator>
                                <expr><name pos:line="135" pos:column="33">ContentLength</name> <op:operator pos:line="135" pos:column="47">=</op:operator> <name><name pos:line="135" pos:column="49">httpPostedFileBase</name><op:operator pos:line="135" pos:column="67">.</op:operator><name pos:line="135" pos:column="68">ContentLength</name></name></expr>
                            }</block></expr>;</return>
                        }</block></then></if>
                    }</block></foreach>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="143" pos:column="9">private</specifier> <name><name pos:line="143" pos:column="17">IEnumerable</name><argument_list pos:line="143" pos:column="28">&lt;<argument><name pos:line="143" pos:column="29">FormVariable</name></argument>&gt;</argument_list></name></type> <name pos:line="143" pos:column="43">GetFormVariables</name><parameter_list pos:line="143" pos:column="59">(<param><decl><type><name pos:line="143" pos:column="60">HttpRequestBase</name></type> <name pos:line="143" pos:column="76">httpRequest</name></decl></param>)</parameter_list>
        <block pos:line="144" pos:column="9">{
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><name pos:line="145" pos:column="17">httpRequest</name> <op:operator pos:line="145" pos:column="29">!=</op:operator> <name pos:line="145" pos:column="32">null</name></expr>)</condition><then pos:line="145" pos:column="37">
            <block pos:line="146" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="147" pos:column="17">var</name></type> <name pos:line="147" pos:column="21">formVariables</name> <init pos:line="147" pos:column="35">= <expr><name><name pos:line="147" pos:column="37">httpRequest</name><op:operator pos:line="147" pos:column="48">.</op:operator><name pos:line="147" pos:column="49">Form</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">formVariables</name> <op:operator pos:line="149" pos:column="35">!=</op:operator> <name pos:line="149" pos:column="38">null</name></expr>)</condition><then pos:line="149" pos:column="43">
                <block pos:line="150" pos:column="17">{
                    <foreach pos:line="151" pos:column="21">foreach (<init><decl><type><name pos:line="151" pos:column="30">var</name></type> <name pos:line="151" pos:column="34">key</name> <range pos:line="151" pos:column="38">in <expr><name><name pos:line="151" pos:column="41">formVariables</name><op:operator pos:line="151" pos:column="54">.</op:operator><name pos:line="151" pos:column="55">AllKeys</name></name></expr></range></decl></init>)
                    <block pos:line="152" pos:column="21">{
                        <return><specifier pos:line="153" pos:column="25">yield</specifier> return <expr><op:operator pos:line="153" pos:column="38">new</op:operator> <name pos:line="153" pos:column="42">FormVariable</name> <block pos:line="153" pos:column="55">{ <expr><name pos:line="153" pos:column="57">Key</name> <op:operator pos:line="153" pos:column="61">=</op:operator> <name pos:line="153" pos:column="63">key</name></expr><op:operator pos:line="153" pos:column="66">,</op:operator> <expr><name pos:line="153" pos:column="68">Value</name> <op:operator pos:line="153" pos:column="74">=</op:operator> <call><name pos:line="153" pos:column="76">SafeGetKeyValue</name><argument_list pos:line="153" pos:column="91">(<argument><expr><name pos:line="153" pos:column="92">formVariables</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="107">key</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
                    }</block></foreach>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="159" pos:column="9">private</specifier> <name><name pos:line="159" pos:column="17">IEnumerable</name><argument_list pos:line="159" pos:column="28">&lt;<argument><name pos:line="159" pos:column="29">HeaderField</name></argument>&gt;</argument_list></name></type> <name pos:line="159" pos:column="42">GetHeaderFields</name><parameter_list pos:line="159" pos:column="57">(<param><decl><type><name pos:line="159" pos:column="58">HttpRequestBase</name></type> <name pos:line="159" pos:column="74">httpRequest</name></decl></param>)</parameter_list>
        <block pos:line="160" pos:column="9">{
            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><name pos:line="161" pos:column="17">httpRequest</name> <op:operator pos:line="161" pos:column="29">!=</op:operator> <name pos:line="161" pos:column="32">null</name></expr>)</condition><then pos:line="161" pos:column="37">
            <block pos:line="162" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="163" pos:column="17">var</name></type> <name pos:line="163" pos:column="21">headerFields</name> <init pos:line="163" pos:column="34">= <expr><name><name pos:line="163" pos:column="36">httpRequest</name><op:operator pos:line="163" pos:column="47">.</op:operator><name pos:line="163" pos:column="48">Headers</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="165" pos:column="17">if <condition pos:line="165" pos:column="20">(<expr><name pos:line="165" pos:column="21">headerFields</name> <op:operator pos:line="165" pos:column="34">!=</op:operator> <name pos:line="165" pos:column="37">null</name></expr>)</condition><then pos:line="165" pos:column="42">
                <block pos:line="166" pos:column="17">{
                    <foreach pos:line="167" pos:column="21">foreach (<init><decl><type><name pos:line="167" pos:column="30">var</name></type> <name pos:line="167" pos:column="34">key</name> <range pos:line="167" pos:column="38">in <expr><name><name pos:line="167" pos:column="41">headerFields</name><op:operator pos:line="167" pos:column="53">.</op:operator><name pos:line="167" pos:column="54">AllKeys</name></name></expr></range></decl></init>)
                    <block pos:line="168" pos:column="21">{
                        <return><specifier pos:line="169" pos:column="25">yield</specifier> return <expr><op:operator pos:line="169" pos:column="38">new</op:operator> <name pos:line="169" pos:column="42">HeaderField</name> <block pos:line="169" pos:column="54">{ <expr><name pos:line="169" pos:column="56">Key</name> <op:operator pos:line="169" pos:column="60">=</op:operator> <name pos:line="169" pos:column="62">key</name></expr><op:operator pos:line="169" pos:column="65">,</op:operator> <expr><name pos:line="169" pos:column="67">Value</name> <op:operator pos:line="169" pos:column="73">=</op:operator> <call><name pos:line="169" pos:column="75">SafeGetKeyValue</name><argument_list pos:line="169" pos:column="90">(<argument><expr><name pos:line="169" pos:column="91">headerFields</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="105">key</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
                    }</block></foreach>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="175" pos:column="9">private</specifier> <name><name pos:line="175" pos:column="17">IEnumerable</name><argument_list pos:line="175" pos:column="28">&lt;<argument><name pos:line="175" pos:column="29">QueryStringParameter</name></argument>&gt;</argument_list></name></type> <name pos:line="175" pos:column="51">GetQueryString</name><parameter_list pos:line="175" pos:column="65">(<param><decl><type><name pos:line="175" pos:column="66">HttpRequestBase</name></type> <name pos:line="175" pos:column="82">httpRequest</name></decl></param>)</parameter_list>
        <block pos:line="176" pos:column="9">{
            <if pos:line="177" pos:column="13">if <condition pos:line="177" pos:column="16">(<expr><name pos:line="177" pos:column="17">httpRequest</name> <op:operator pos:line="177" pos:column="29">!=</op:operator> <name pos:line="177" pos:column="32">null</name></expr>)</condition><then pos:line="177" pos:column="37">
            <block pos:line="178" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="179" pos:column="17">var</name></type> <name pos:line="179" pos:column="21">queryString</name> <init pos:line="179" pos:column="33">= <expr><name><name pos:line="179" pos:column="35">httpRequest</name><op:operator pos:line="179" pos:column="46">.</op:operator><name pos:line="179" pos:column="47">QueryString</name></name></expr></init></decl>;</decl_stmt>

                <if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name pos:line="181" pos:column="21">queryString</name> <op:operator pos:line="181" pos:column="33">!=</op:operator> <name pos:line="181" pos:column="36">null</name></expr>)</condition><then pos:line="181" pos:column="41">
                <block pos:line="182" pos:column="17">{
                    <foreach pos:line="183" pos:column="21">foreach (<init><decl><type><name pos:line="183" pos:column="30">var</name></type> <name pos:line="183" pos:column="34">key</name> <range pos:line="183" pos:column="38">in <expr><name><name pos:line="183" pos:column="41">queryString</name><op:operator pos:line="183" pos:column="52">.</op:operator><name pos:line="183" pos:column="53">AllKeys</name></name></expr></range></decl></init>)
                    <block pos:line="184" pos:column="21">{
                        <return><specifier pos:line="185" pos:column="25">yield</specifier> return <expr><op:operator pos:line="185" pos:column="38">new</op:operator> <name pos:line="185" pos:column="42">QueryStringParameter</name> <block pos:line="185" pos:column="63">{ <expr><name pos:line="185" pos:column="65">Key</name> <op:operator pos:line="185" pos:column="69">=</op:operator> <name pos:line="185" pos:column="71">key</name></expr><op:operator pos:line="185" pos:column="74">,</op:operator> <expr><name pos:line="185" pos:column="76">Value</name> <op:operator pos:line="185" pos:column="82">=</op:operator> <call><name pos:line="185" pos:column="84">SafeGetKeyValue</name><argument_list pos:line="185" pos:column="99">(<argument><expr><name pos:line="185" pos:column="100">queryString</name></expr></argument>, <argument><expr><name pos:line="185" pos:column="113">key</name></expr></argument>)</argument_list></call></expr> }</block></expr>;</return>
                    }</block></foreach>
                }</block></then></if>
            }</block></then></if>
        }</block></function>

        <function><type><specifier pos:line="191" pos:column="9">private</specifier> <specifier pos:line="191" pos:column="17">static</specifier> <name pos:line="191" pos:column="24">string</name></type> <name pos:line="191" pos:column="31">SafeGetKeyValue</name><parameter_list pos:line="191" pos:column="46">(<param><decl><type><name pos:line="191" pos:column="47">NameValueCollection</name></type> <name pos:line="191" pos:column="67">collection</name></decl></param>, <param><decl><type><name pos:line="191" pos:column="79">string</name></type> <name pos:line="191" pos:column="86">key</name></decl></param>)</parameter_list>
        <block pos:line="192" pos:column="9">{
            <try pos:line="193" pos:column="13">try
            <block pos:line="194" pos:column="13">{
                <return pos:line="195" pos:column="17">return <expr><name><name pos:line="195" pos:column="24">collection</name><index pos:line="195" pos:column="34">[<expr><name pos:line="195" pos:column="35">key</name></expr>]</index></name></expr>;</return>
            }</block>
            <catch pos:line="197" pos:column="13">catch <parameter_list pos:line="197" pos:column="19">(<param><decl><type><name pos:line="197" pos:column="20">HttpRequestValidationException</name></type> <name pos:line="197" pos:column="51">httpRequestValidationException</name></decl></param>)</parameter_list>
            <block pos:line="198" pos:column="13">{
                <return pos:line="199" pos:column="17">return <expr><name><name pos:line="199" pos:column="24">httpRequestValidationException</name><op:operator pos:line="199" pos:column="54">.</op:operator><name pos:line="199" pos:column="55">Message</name></name></expr>;</return>
            }</block></catch></try>
        }</block></function>

        <class><specifier pos:line="203" pos:column="9">public</specifier> class <name pos:line="203" pos:column="22">Cookie</name>
        <block pos:line="204" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="205" pos:column="13">public</specifier> <name pos:line="205" pos:column="20">string</name></type> <name pos:line="205" pos:column="27">Name</name> <block pos:line="205" pos:column="32">{ <function_decl><name pos:line="205" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="205" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="207" pos:column="13">public</specifier> <name pos:line="207" pos:column="20">string</name></type> <name pos:line="207" pos:column="27">Value</name> <block pos:line="207" pos:column="33">{ <function_decl><name pos:line="207" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="207" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <class><specifier pos:line="210" pos:column="9">public</specifier> class <name pos:line="210" pos:column="22">FormVariable</name>
        <block pos:line="211" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="212" pos:column="13">public</specifier> <name pos:line="212" pos:column="20">string</name></type> <name pos:line="212" pos:column="27">Key</name> <block pos:line="212" pos:column="31">{ <function_decl><name pos:line="212" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="212" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="214" pos:column="13">public</specifier> <name pos:line="214" pos:column="20">string</name></type> <name pos:line="214" pos:column="27">Value</name> <block pos:line="214" pos:column="33">{ <function_decl><name pos:line="214" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="214" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <class><specifier pos:line="217" pos:column="9">public</specifier> class <name pos:line="217" pos:column="22">HeaderField</name>
        <block pos:line="218" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="219" pos:column="13">public</specifier> <name pos:line="219" pos:column="20">string</name></type> <name pos:line="219" pos:column="27">Key</name> <block pos:line="219" pos:column="31">{ <function_decl><name pos:line="219" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="219" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="221" pos:column="13">public</specifier> <name pos:line="221" pos:column="20">string</name></type> <name pos:line="221" pos:column="27">Value</name> <block pos:line="221" pos:column="33">{ <function_decl><name pos:line="221" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="221" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <class><specifier pos:line="224" pos:column="9">public</specifier> class <name pos:line="224" pos:column="22">PostedFile</name>
        <block pos:line="225" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="226" pos:column="13">public</specifier> <name pos:line="226" pos:column="20">string</name></type> <name pos:line="226" pos:column="27">FileName</name> <block pos:line="226" pos:column="36">{ <function_decl><name pos:line="226" pos:column="38">get</name>;</function_decl> <function_decl><name pos:line="226" pos:column="43">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="228" pos:column="13">public</specifier> <name pos:line="228" pos:column="20">string</name></type> <name pos:line="228" pos:column="27">ContentType</name> <block pos:line="228" pos:column="39">{ <function_decl><name pos:line="228" pos:column="41">get</name>;</function_decl> <function_decl><name pos:line="228" pos:column="46">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="230" pos:column="13">public</specifier> <name pos:line="230" pos:column="20">int</name></type> <name pos:line="230" pos:column="24">ContentLength</name> <block pos:line="230" pos:column="38">{ <function_decl><name pos:line="230" pos:column="40">get</name>;</function_decl> <function_decl><name pos:line="230" pos:column="45">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>

        <class><specifier pos:line="233" pos:column="9">public</specifier> class <name pos:line="233" pos:column="22">QueryStringParameter</name>
        <block pos:line="234" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="235" pos:column="13">public</specifier> <name pos:line="235" pos:column="20">string</name></type> <name pos:line="235" pos:column="27">Key</name> <block pos:line="235" pos:column="31">{ <function_decl><name pos:line="235" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="235" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="237" pos:column="13">public</specifier> <name pos:line="237" pos:column="20">string</name></type> <name pos:line="237" pos:column="27">Value</name> <block pos:line="237" pos:column="33">{ <function_decl><name pos:line="237" pos:column="35">get</name>;</function_decl> <function_decl><name pos:line="237" pos:column="40">set</name>;</function_decl> }</block></decl></decl_stmt>
        }</block></class>
    }</block></class>
}</block></namespace></unit>
