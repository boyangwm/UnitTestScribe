<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WindowsAzure.Caching\Infrastructure\DataCacheEventSubscriberFactory.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name><name pos:line="1" pos:column="11">Glimpse</name><op:operator pos:line="1" pos:column="18">.</op:operator><name pos:line="1" pos:column="19">WindowsAzure</name><op:operator pos:line="1" pos:column="31">.</op:operator><name pos:line="1" pos:column="32">Caching</name><op:operator pos:line="1" pos:column="39">.</op:operator><name pos:line="1" pos:column="40">Infrastructure</name></name>
<block pos:line="2" pos:column="1">{
    <class><specifier pos:line="3" pos:column="5">public</specifier> <specifier pos:line="3" pos:column="12">static</specifier> class <name pos:line="3" pos:column="25">DataCacheEventSubscriberFactory</name>
    <block pos:line="4" pos:column="5">{
        <constructor><specifier pos:line="5" pos:column="9">static</specifier> <name pos:line="5" pos:column="16">DataCacheEventSubscriberFactory</name><parameter_list pos:line="5" pos:column="47">()</parameter_list>
        <block pos:line="6" pos:column="9">{
            <expr_stmt><expr><name pos:line="7" pos:column="13">Current</name> <op:operator pos:line="7" pos:column="21">=</op:operator> <op:operator pos:line="7" pos:column="23">new</op:operator> <call><name pos:line="7" pos:column="27">DefaultCacheEventSubscriber</name><argument_list pos:line="7" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="10" pos:column="9">public</specifier> <specifier pos:line="10" pos:column="16">static</specifier> <name pos:line="10" pos:column="23">void</name></type> <name pos:line="10" pos:column="28">SetOperationContextFactory</name><parameter_list pos:line="10" pos:column="54">(<param><decl><type><name pos:line="10" pos:column="55">IDataCacheEventSubscriber</name></type> <name pos:line="10" pos:column="81">factory</name></decl></param>)</parameter_list>
        <block pos:line="11" pos:column="9">{
            <lock pos:line="12" pos:column="13">lock (<expr><name pos:line="12" pos:column="19">Current</name></expr>)
            <block pos:line="13" pos:column="13">{
                <expr_stmt><expr><name pos:line="14" pos:column="17">Current</name> <op:operator pos:line="14" pos:column="25">=</op:operator> <name pos:line="14" pos:column="27">factory</name></expr>;</expr_stmt>
            }</block></lock>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">public</specifier> <specifier pos:line="18" pos:column="16">static</specifier> <name pos:line="18" pos:column="23">IDataCacheEventSubscriber</name></type> <name pos:line="18" pos:column="49">Current</name> <block pos:line="18" pos:column="57">{ <function_decl><name pos:line="18" pos:column="59">get</name>;</function_decl> <function_decl><specifier pos:line="18" pos:column="64">private</specifier> <name pos:line="18" pos:column="72">set</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace>
</unit>
