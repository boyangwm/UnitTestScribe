<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\HttpHandlerEndpointConfiguration.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Linq</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Text</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Framework</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">AspNet</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">HttpHandlerEndpointConfiguration</name> <super pos:line="10" pos:column="51">: <name pos:line="10" pos:column="53">ResourceEndpointConfiguration</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <name pos:line="12" pos:column="17">string</name></type> <name pos:line="12" pos:column="24">applicationPath</name></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">string</name></type> <name pos:line="14" pos:column="23">ApplicationPath</name>
        <block pos:line="15" pos:column="9">{
            <function><name pos:line="16" pos:column="13">get</name> <block pos:line="16" pos:column="17">{ <return pos:line="16" pos:column="19">return <expr><name pos:line="16" pos:column="26">applicationPath</name> <op:operator pos:line="16" pos:column="42">??</op:operator> <name><name pos:line="16" pos:column="45">HttpRuntime</name><op:operator pos:line="16" pos:column="56">.</op:operator><name pos:line="16" pos:column="57">AppDomainAppVirtualPath</name></name></expr>;</return> }</block></function> <comment type="line" pos:line="16" pos:column="84">// HttpRuntime call based on http://mvolo.com/iis7-integrated-mode-request-is-not-available-in-this-context-exception-in-applicationstart/</comment>
            <function><name pos:line="17" pos:column="13">set</name> <block pos:line="17" pos:column="17">{ <expr_stmt><expr><name pos:line="17" pos:column="19">applicationPath</name> <op:operator pos:line="17" pos:column="35">=</op:operator> <name pos:line="17" pos:column="37">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="20" pos:column="9">protected</specifier> <specifier pos:line="20" pos:column="19">override</specifier> <name pos:line="20" pos:column="28">string</name></type> <name pos:line="20" pos:column="35">GenerateUriTemplate</name><parameter_list pos:line="20" pos:column="54">(<param><decl><type><name pos:line="20" pos:column="55">string</name></type> <name pos:line="20" pos:column="62">resourceName</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="76">string</name></type> <name pos:line="20" pos:column="83">baseUri</name></decl></param>, <param><decl><type><name><name pos:line="20" pos:column="92">IEnumerable</name><argument_list pos:line="20" pos:column="103">&lt;<argument><name pos:line="20" pos:column="104">ResourceParameterMetadata</name></argument>&gt;</argument_list></name></type> <name pos:line="20" pos:column="131">parameters</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="143">ILogger</name></type> <name pos:line="20" pos:column="151">logger</name></decl></param>)</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">root</name> <init pos:line="22" pos:column="22">= <expr><call><name><name pos:line="22" pos:column="24">VirtualPathUtility</name><op:operator pos:line="22" pos:column="42">.</op:operator><name pos:line="22" pos:column="43">ToAbsolute</name></name><argument_list pos:line="22" pos:column="53">(<argument><expr><name pos:line="22" pos:column="54">baseUri</name></expr></argument>, <argument><expr><name pos:line="22" pos:column="63">ApplicationPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">stringBuilder</name> <init pos:line="24" pos:column="31">= <expr><op:operator pos:line="24" pos:column="33">new</op:operator> <call><name pos:line="24" pos:column="37">StringBuilder</name><argument_list pos:line="24" pos:column="50">(<argument><expr><call><name><name pos:line="24" pos:column="51">string</name><op:operator pos:line="24" pos:column="57">.</op:operator><name pos:line="24" pos:column="58">Format</name></name><argument_list pos:line="24" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="65">@"{0}?n={1}"</lit:literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="79">root</name></expr></argument>, <argument><expr><name pos:line="24" pos:column="85">resourceName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="26" pos:column="13">var</name></type> <name pos:line="26" pos:column="17">requiredParams</name> <init pos:line="26" pos:column="32">= <expr><call><name><name pos:line="26" pos:column="34">parameters</name><op:operator pos:line="26" pos:column="44">.</op:operator><name pos:line="26" pos:column="45">Where</name></name><argument_list pos:line="26" pos:column="50">(<argument><expr><lambda><name pos:line="26" pos:column="51">p</name> <op:operator pos:line="26" pos:column="53">=&gt;</op:operator> <name><name pos:line="26" pos:column="56">p</name><op:operator pos:line="26" pos:column="57">.</op:operator><name pos:line="26" pos:column="58">IsRequired</name></name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="27" pos:column="13">foreach (<init><decl><type><name pos:line="27" pos:column="22">var</name></type> <name pos:line="27" pos:column="26">parameter</name> <range pos:line="27" pos:column="36">in <expr><name pos:line="27" pos:column="39">requiredParams</name></expr></range></decl></init>)
            <block pos:line="28" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="29" pos:column="17">stringBuilder</name><op:operator pos:line="29" pos:column="30">.</op:operator><name pos:line="29" pos:column="31">Append</name></name><argument_list pos:line="29" pos:column="37">(<argument><expr><call><name><name pos:line="29" pos:column="38">string</name><op:operator pos:line="29" pos:column="44">.</op:operator><name pos:line="29" pos:column="45">Format</name></name><argument_list pos:line="29" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="29" pos:column="52">"&amp;{0}={{{1}}}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="68">parameter</name><op:operator pos:line="29" pos:column="77">.</op:operator><name pos:line="29" pos:column="78">Name</name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="84">parameter</name><op:operator pos:line="29" pos:column="93">.</op:operator><name pos:line="29" pos:column="94">Name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <decl_stmt><decl><type><name pos:line="32" pos:column="13">var</name></type> <name pos:line="32" pos:column="17">optionalParams</name> <init pos:line="32" pos:column="32">= <expr><call><name><name pos:line="32" pos:column="34">parameters</name><op:operator pos:line="32" pos:column="44">.</op:operator><name pos:line="32" pos:column="45">Except</name></name><argument_list pos:line="32" pos:column="51">(<argument><expr><name pos:line="32" pos:column="52">requiredParams</name></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="67">.</op:operator><call><name pos:line="32" pos:column="68">Select</name><argument_list pos:line="32" pos:column="74">(<argument><expr><lambda><name pos:line="32" pos:column="75">p</name> <op:operator pos:line="32" pos:column="77">=&gt;</op:operator> <name><name pos:line="32" pos:column="80">p</name><op:operator pos:line="32" pos:column="81">.</op:operator><name pos:line="32" pos:column="82">Name</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="32" pos:column="87">.</op:operator><call><name pos:line="32" pos:column="88">ToArray</name><argument_list pos:line="32" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="34" pos:column="13">// Format based on Form-style query continuation from RFC6570: http://tools.ietf.org/html/rfc6570#section-3.2.9</comment>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><call><name><name pos:line="35" pos:column="17">optionalParams</name><op:operator pos:line="35" pos:column="31">.</op:operator><name pos:line="35" pos:column="32">Any</name></name><argument_list pos:line="35" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="35" pos:column="38">
            <block pos:line="36" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="37" pos:column="17">stringBuilder</name><op:operator pos:line="37" pos:column="30">.</op:operator><name pos:line="37" pos:column="31">Append</name></name><argument_list pos:line="37" pos:column="37">(<argument><expr><call><name><name pos:line="37" pos:column="38">string</name><op:operator pos:line="37" pos:column="44">.</op:operator><name pos:line="37" pos:column="45">Format</name></name><argument_list pos:line="37" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="52">"{{&amp;{0}}}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="64">string</name><op:operator pos:line="37" pos:column="70">.</op:operator><name pos:line="37" pos:column="71">Join</name></name><argument_list pos:line="37" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="76">","</lit:literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="81">optionalParams</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="40" pos:column="13">return <expr><call><name><name pos:line="40" pos:column="20">stringBuilder</name><op:operator pos:line="40" pos:column="33">.</op:operator><name pos:line="40" pos:column="34">ToString</name></name><argument_list pos:line="40" pos:column="42">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
