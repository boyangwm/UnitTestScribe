<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\AlternateType\Route.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">AspNet</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Message</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Message</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">AspNet</name><op:operator pos:line="10" pos:column="25">.</op:operator><name pos:line="10" pos:column="26">AlternateType</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">Route</name> <super pos:line="12" pos:column="24">: <name><name pos:line="12" pos:column="26">IAlternateType</name><argument_list pos:line="12" pos:column="40">&lt;<argument><name><name pos:line="12" pos:column="41">System</name><op:operator pos:line="12" pos:column="47">.</op:operator><name pos:line="12" pos:column="48">Web</name><op:operator pos:line="12" pos:column="51">.</op:operator><name pos:line="12" pos:column="52">Routing</name><op:operator pos:line="12" pos:column="59">.</op:operator><name pos:line="12" pos:column="60">Route</name></name></argument>&gt;</argument_list></name></super>
    <block pos:line="13" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">readonly</specifier> <name pos:line="14" pos:column="26">RouteConstraint</name></type> <name pos:line="14" pos:column="42">routeConstraintAlternate</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">private</specifier> <name><name pos:line="15" pos:column="17">IEnumerable</name><argument_list pos:line="15" pos:column="28">&lt;<argument><name pos:line="15" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="15" pos:column="47">allMethodsRouteBase</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">private</specifier> <name><name pos:line="16" pos:column="17">IEnumerable</name><argument_list pos:line="16" pos:column="28">&lt;<argument><name pos:line="16" pos:column="29">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="16" pos:column="47">allMethodsRoute</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="18" pos:column="9">public</specifier> <name pos:line="18" pos:column="16">Route</name><parameter_list pos:line="18" pos:column="21">(<param><decl><type><name pos:line="18" pos:column="22">IProxyFactory</name></type> <name pos:line="18" pos:column="36">proxyFactory</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="50">ILogger</name></type> <name pos:line="18" pos:column="58">logger</name></decl></param>)</parameter_list>
        <block pos:line="19" pos:column="9">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">ProxyFactory</name> <op:operator pos:line="20" pos:column="26">=</op:operator> <name pos:line="20" pos:column="28">proxyFactory</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">Logger</name> <op:operator pos:line="21" pos:column="20">=</op:operator> <name pos:line="21" pos:column="22">logger</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">routeConstraintAlternate</name> <op:operator pos:line="22" pos:column="38">=</op:operator> <op:operator pos:line="22" pos:column="40">new</op:operator> <call><name pos:line="22" pos:column="44">RouteConstraint</name><argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">proxyFactory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">public</specifier> <name><name pos:line="25" pos:column="16">IEnumerable</name><argument_list pos:line="25" pos:column="27">&lt;<argument><name pos:line="25" pos:column="28">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="25" pos:column="46">AllMethodsRouteBase</name>
        <block pos:line="26" pos:column="9">{
            <function><name pos:line="27" pos:column="13">get</name>
            <block pos:line="28" pos:column="13">{
                <return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">allMethodsRouteBase</name> <op:operator pos:line="29" pos:column="44">??</op:operator> <op:operator pos:line="29" pos:column="47">(</op:operator><name pos:line="29" pos:column="48">allMethodsRouteBase</name> <op:operator pos:line="29" pos:column="68">=</op:operator> <op:operator pos:line="29" pos:column="70">new</op:operator> <name><name pos:line="29" pos:column="74">List</name><argument_list pos:line="29" pos:column="78">&lt;<argument><name pos:line="29" pos:column="79">IAlternateMethod</name></argument>&gt;</argument_list></name>
                <block pos:line="30" pos:column="17">{
                    <expr><op:operator pos:line="31" pos:column="21">new</op:operator> <call><name pos:line="31" pos:column="25">GetRouteData</name><argument_list pos:line="31" pos:column="37">(<argument><expr><call><name pos:line="31" pos:column="38">typeof</name><argument_list pos:line="31" pos:column="44">(<argument><expr><name><name pos:line="31" pos:column="45">System</name><op:operator pos:line="31" pos:column="51">.</op:operator><name pos:line="31" pos:column="52">Web</name><op:operator pos:line="31" pos:column="55">.</op:operator><name pos:line="31" pos:column="56">Routing</name><op:operator pos:line="31" pos:column="63">.</op:operator><name pos:line="31" pos:column="64">RouteBase</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr><op:operator pos:line="31" pos:column="75">,</op:operator>
                    <expr><op:operator pos:line="32" pos:column="21">new</op:operator> <call><name pos:line="32" pos:column="25">GetVirtualPath</name><argument_list pos:line="32" pos:column="39">(<argument><expr><call><name pos:line="32" pos:column="40">typeof</name><argument_list pos:line="32" pos:column="46">(<argument><expr><name><name pos:line="32" pos:column="47">System</name><op:operator pos:line="32" pos:column="53">.</op:operator><name pos:line="32" pos:column="54">Web</name><op:operator pos:line="32" pos:column="57">.</op:operator><name pos:line="32" pos:column="58">Routing</name><op:operator pos:line="32" pos:column="65">.</op:operator><name pos:line="32" pos:column="66">RouteBase</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>
                }</block>)</expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">public</specifier> <name><name pos:line="37" pos:column="16">IEnumerable</name><argument_list pos:line="37" pos:column="27">&lt;<argument><name pos:line="37" pos:column="28">IAlternateMethod</name></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="46">AllMethodsRoute</name>
        <block pos:line="38" pos:column="9">{
            <function><name pos:line="39" pos:column="13">get</name>
            <block pos:line="40" pos:column="13">{
                <return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">allMethodsRoute</name> <op:operator pos:line="41" pos:column="40">??</op:operator> <op:operator pos:line="41" pos:column="43">(</op:operator><name pos:line="41" pos:column="44">allMethodsRoute</name> <op:operator pos:line="41" pos:column="60">=</op:operator> <op:operator pos:line="41" pos:column="62">new</op:operator> <name><name pos:line="41" pos:column="66">List</name><argument_list pos:line="41" pos:column="70">&lt;<argument><name pos:line="41" pos:column="71">IAlternateMethod</name></argument>&gt;</argument_list></name>
                <block pos:line="42" pos:column="17">{
                    <expr><op:operator pos:line="43" pos:column="21">new</op:operator> <call><name pos:line="43" pos:column="25">GetRouteData</name><argument_list pos:line="43" pos:column="37">(<argument><expr><call><name pos:line="43" pos:column="38">typeof</name><argument_list pos:line="43" pos:column="44">(<argument><expr><name><name pos:line="43" pos:column="45">System</name><op:operator pos:line="43" pos:column="51">.</op:operator><name pos:line="43" pos:column="52">Web</name><op:operator pos:line="43" pos:column="55">.</op:operator><name pos:line="43" pos:column="56">Routing</name><op:operator pos:line="43" pos:column="63">.</op:operator><name pos:line="43" pos:column="64">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr><op:operator pos:line="43" pos:column="71">,</op:operator>
                    <expr><op:operator pos:line="44" pos:column="21">new</op:operator> <call><name pos:line="44" pos:column="25">GetVirtualPath</name><argument_list pos:line="44" pos:column="39">(<argument><expr><call><name pos:line="44" pos:column="40">typeof</name><argument_list pos:line="44" pos:column="46">(<argument><expr><name><name pos:line="44" pos:column="47">System</name><op:operator pos:line="44" pos:column="53">.</op:operator><name pos:line="44" pos:column="54">Web</name><op:operator pos:line="44" pos:column="57">.</op:operator><name pos:line="44" pos:column="58">Routing</name><op:operator pos:line="44" pos:column="65">.</op:operator><name pos:line="44" pos:column="66">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr><op:operator pos:line="44" pos:column="73">,</op:operator>
                    <expr><op:operator pos:line="45" pos:column="21">new</op:operator> <call><name pos:line="45" pos:column="25">ProcessConstraint</name><argument_list pos:line="45" pos:column="42">()</argument_list></call></expr><op:operator pos:line="45" pos:column="44">,</op:operator>
                }</block>)</expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">private</specifier> <name pos:line="50" pos:column="17">IProxyFactory</name></type> <name pos:line="50" pos:column="31">ProxyFactory</name> <block pos:line="50" pos:column="44">{ <function_decl><name pos:line="50" pos:column="46">get</name>;</function_decl> <function_decl><name pos:line="50" pos:column="51">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="52" pos:column="9">private</specifier> <name pos:line="52" pos:column="17">ILogger</name></type> <name pos:line="52" pos:column="25">Logger</name> <block pos:line="52" pos:column="32">{ <function_decl><name pos:line="52" pos:column="34">get</name>;</function_decl> <function_decl><name pos:line="52" pos:column="39">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="54" pos:column="9">public</specifier> <name pos:line="54" pos:column="16">bool</name></type> <name pos:line="54" pos:column="21">TryCreate</name><parameter_list pos:line="54" pos:column="30">(<param><decl><type><name><name pos:line="54" pos:column="31">System</name><op:operator pos:line="54" pos:column="37">.</op:operator><name pos:line="54" pos:column="38">Web</name><op:operator pos:line="54" pos:column="41">.</op:operator><name pos:line="54" pos:column="42">Routing</name><op:operator pos:line="54" pos:column="49">.</op:operator><name pos:line="54" pos:column="50">Route</name></name></type> <name pos:line="54" pos:column="56">originalObj</name></decl></param>, <param><decl><type><specifier pos:line="54" pos:column="69">out</specifier> <name><name pos:line="54" pos:column="73">System</name><op:operator pos:line="54" pos:column="79">.</op:operator><name pos:line="54" pos:column="80">Web</name><op:operator pos:line="54" pos:column="83">.</op:operator><name pos:line="54" pos:column="84">Routing</name><op:operator pos:line="54" pos:column="91">.</op:operator><name pos:line="54" pos:column="92">Route</name></name></type> <name pos:line="54" pos:column="98">newObj</name></decl></param>)</parameter_list>
        <block pos:line="55" pos:column="9">{
            <return pos:line="56" pos:column="13">return <expr><call><name pos:line="56" pos:column="20">TryCreate</name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">originalObj</name></expr></argument>, <argument><expr pos:line="56" pos:column="43">out <name pos:line="56" pos:column="47">newObj</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">null</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="59" pos:column="9">public</specifier> <name pos:line="59" pos:column="16">bool</name></type> <name pos:line="59" pos:column="21">TryCreate</name><parameter_list pos:line="59" pos:column="30">(<param><decl><type><name><name pos:line="59" pos:column="31">System</name><op:operator pos:line="59" pos:column="37">.</op:operator><name pos:line="59" pos:column="38">Web</name><op:operator pos:line="59" pos:column="41">.</op:operator><name pos:line="59" pos:column="42">Routing</name><op:operator pos:line="59" pos:column="49">.</op:operator><name pos:line="59" pos:column="50">Route</name></name></type> <name pos:line="59" pos:column="56">originalObj</name></decl></param>, <param><decl><type><specifier pos:line="59" pos:column="69">out</specifier> <name><name pos:line="59" pos:column="73">System</name><op:operator pos:line="59" pos:column="79">.</op:operator><name pos:line="59" pos:column="80">Web</name><op:operator pos:line="59" pos:column="83">.</op:operator><name pos:line="59" pos:column="84">Routing</name><op:operator pos:line="59" pos:column="91">.</op:operator><name pos:line="59" pos:column="92">Route</name></name></type> <name pos:line="59" pos:column="98">newObj</name></decl></param>, <param><decl><type><name><name pos:line="59" pos:column="106">IEnumerable</name><argument_list pos:line="59" pos:column="117">&lt;<argument><name pos:line="59" pos:column="118">object</name></argument>&gt;</argument_list></name></type> <name pos:line="59" pos:column="126">mixins</name></decl></param>)</parameter_list>
        <block pos:line="60" pos:column="9">{
            <return pos:line="61" pos:column="13">return <expr><call><name pos:line="61" pos:column="20">TryCreate</name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">originalObj</name></expr></argument>, <argument><expr pos:line="61" pos:column="43">out <name pos:line="61" pos:column="47">newObj</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="55">mixins</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="63">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">bool</name></type> <name pos:line="64" pos:column="21">TryCreate</name><parameter_list pos:line="64" pos:column="30">(<param><decl><type><name><name pos:line="64" pos:column="31">System</name><op:operator pos:line="64" pos:column="37">.</op:operator><name pos:line="64" pos:column="38">Web</name><op:operator pos:line="64" pos:column="41">.</op:operator><name pos:line="64" pos:column="42">Routing</name><op:operator pos:line="64" pos:column="49">.</op:operator><name pos:line="64" pos:column="50">Route</name></name></type> <name pos:line="64" pos:column="56">originalObj</name></decl></param>, <param><decl><type><specifier pos:line="64" pos:column="69">out</specifier> <name><name pos:line="64" pos:column="73">System</name><op:operator pos:line="64" pos:column="79">.</op:operator><name pos:line="64" pos:column="80">Web</name><op:operator pos:line="64" pos:column="83">.</op:operator><name pos:line="64" pos:column="84">Routing</name><op:operator pos:line="64" pos:column="91">.</op:operator><name pos:line="64" pos:column="92">Route</name></name></type> <name pos:line="64" pos:column="98">newObj</name></decl></param>, <param><decl><type><name><name pos:line="64" pos:column="106">IEnumerable</name><argument_list pos:line="64" pos:column="117">&lt;<argument><name pos:line="64" pos:column="118">object</name></argument>&gt;</argument_list></name></type> <name pos:line="64" pos:column="126">mixins</name></decl></param>, <param><decl><type><name><name pos:line="64" pos:column="134">object</name><index pos:line="64" pos:column="140">[]</index></name></type> <name pos:line="64" pos:column="143">constructorArguments</name></decl></param>)</parameter_list>
        <block pos:line="65" pos:column="9">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">newObj</name> <op:operator pos:line="66" pos:column="20">=</op:operator> <name pos:line="66" pos:column="22">null</name></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="68" pos:column="13">var</name></type> <name pos:line="68" pos:column="17">route</name> <init pos:line="68" pos:column="23">= <expr><name pos:line="68" pos:column="25">originalObj</name> <op:operator pos:line="68" pos:column="37">as</op:operator> <name><name pos:line="68" pos:column="40">System</name><op:operator pos:line="68" pos:column="46">.</op:operator><name pos:line="68" pos:column="47">Web</name><op:operator pos:line="68" pos:column="50">.</op:operator><name pos:line="68" pos:column="51">Routing</name><op:operator pos:line="68" pos:column="58">.</op:operator><name pos:line="68" pos:column="59">Route</name></name></expr></init></decl>;</decl_stmt>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">route</name> <op:operator pos:line="69" pos:column="23">!=</op:operator> <name pos:line="69" pos:column="26">null</name></expr>)</condition><then pos:line="69" pos:column="31">
            <block pos:line="70" pos:column="13">{
                <if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><call><name><name pos:line="71" pos:column="21">originalObj</name><op:operator pos:line="71" pos:column="32">.</op:operator><name pos:line="71" pos:column="33">GetType</name></name><argument_list pos:line="71" pos:column="40">()</argument_list></call> <op:operator pos:line="71" pos:column="43">==</op:operator> <call><name pos:line="71" pos:column="46">typeof</name><argument_list pos:line="71" pos:column="52">(<argument><expr><name><name pos:line="71" pos:column="53">System</name><op:operator pos:line="71" pos:column="59">.</op:operator><name pos:line="71" pos:column="60">Web</name><op:operator pos:line="71" pos:column="63">.</op:operator><name pos:line="71" pos:column="64">Routing</name><op:operator pos:line="71" pos:column="71">.</op:operator><name pos:line="71" pos:column="72">Route</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="71" pos:column="79">
                <block pos:line="72" pos:column="17">{
                    <expr_stmt><expr><name pos:line="73" pos:column="21">newObj</name> <op:operator pos:line="73" pos:column="28">=</op:operator> <call><name><name pos:line="73" pos:column="30">ProxyFactory</name><op:operator pos:line="73" pos:column="42">.</op:operator><name><name pos:line="73" pos:column="43">ExtendClass</name><argument_list pos:line="73" pos:column="54">&lt;<argument><name><name pos:line="73" pos:column="55">System</name><op:operator pos:line="73" pos:column="61">.</op:operator><name pos:line="73" pos:column="62">Web</name><op:operator pos:line="73" pos:column="65">.</op:operator><name pos:line="73" pos:column="66">Routing</name><op:operator pos:line="73" pos:column="73">.</op:operator><name pos:line="73" pos:column="74">Route</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="73" pos:column="80">(<argument><expr><name pos:line="73" pos:column="81">AllMethodsRoute</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="98">mixins</name></expr></argument>, <argument><expr><op:operator pos:line="73" pos:column="106">new</op:operator> <name><name pos:line="73" pos:column="110">object</name><index pos:line="73" pos:column="116">[]</index></name> <block pos:line="73" pos:column="119">{ <expr><name><name pos:line="73" pos:column="121">route</name><op:operator pos:line="73" pos:column="126">.</op:operator><name pos:line="73" pos:column="127">Url</name></name></expr><op:operator pos:line="73" pos:column="130">,</op:operator> <expr><name><name pos:line="73" pos:column="132">route</name><op:operator pos:line="73" pos:column="137">.</op:operator><name pos:line="73" pos:column="138">Defaults</name></name></expr><op:operator pos:line="73" pos:column="146">,</op:operator> <expr><name><name pos:line="73" pos:column="148">route</name><op:operator pos:line="73" pos:column="153">.</op:operator><name pos:line="73" pos:column="154">Constraints</name></name></expr><op:operator pos:line="73" pos:column="165">,</op:operator> <expr><name><name pos:line="73" pos:column="167">route</name><op:operator pos:line="73" pos:column="172">.</op:operator><name pos:line="73" pos:column="173">DataTokens</name></name></expr><op:operator pos:line="73" pos:column="183">,</op:operator> <expr><name><name pos:line="73" pos:column="185">route</name><op:operator pos:line="73" pos:column="190">.</op:operator><name pos:line="73" pos:column="191">RouteHandler</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="75" pos:column="17">else <if pos:line="75" pos:column="22">if <condition pos:line="75" pos:column="25">(<expr><call><name><name pos:line="75" pos:column="26">ProxyFactory</name><op:operator pos:line="75" pos:column="38">.</op:operator><name pos:line="75" pos:column="39">IsWrapClassEligible</name></name><argument_list pos:line="75" pos:column="58">(<argument><expr><call><name pos:line="75" pos:column="59">typeof</name><argument_list pos:line="75" pos:column="65">(<argument><expr><name><name pos:line="75" pos:column="66">System</name><op:operator pos:line="75" pos:column="72">.</op:operator><name pos:line="75" pos:column="73">Web</name><op:operator pos:line="75" pos:column="76">.</op:operator><name pos:line="75" pos:column="77">Routing</name><op:operator pos:line="75" pos:column="84">.</op:operator><name pos:line="75" pos:column="85">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="75" pos:column="93">
                <block pos:line="76" pos:column="17">{
                    <expr_stmt><expr><name pos:line="77" pos:column="21">newObj</name> <op:operator pos:line="77" pos:column="28">=</op:operator> <call><name><name pos:line="77" pos:column="30">ProxyFactory</name><op:operator pos:line="77" pos:column="42">.</op:operator><name pos:line="77" pos:column="43">WrapClass</name></name><argument_list pos:line="77" pos:column="52">(<argument><expr><name pos:line="77" pos:column="53">route</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="60">AllMethodsRoute</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="77">mixins</name></expr></argument>, <argument><expr><op:operator pos:line="77" pos:column="85">new</op:operator> <name><name pos:line="77" pos:column="89">object</name><index pos:line="77" pos:column="95">[]</index></name> <block pos:line="77" pos:column="98">{ <expr><name><name pos:line="77" pos:column="100">route</name><op:operator pos:line="77" pos:column="105">.</op:operator><name pos:line="77" pos:column="106">Url</name></name></expr><op:operator pos:line="77" pos:column="109">,</op:operator> <expr><name><name pos:line="77" pos:column="111">route</name><op:operator pos:line="77" pos:column="116">.</op:operator><name pos:line="77" pos:column="117">Defaults</name></name></expr><op:operator pos:line="77" pos:column="125">,</op:operator> <expr><name><name pos:line="77" pos:column="127">route</name><op:operator pos:line="77" pos:column="132">.</op:operator><name pos:line="77" pos:column="133">Constraints</name></name></expr><op:operator pos:line="77" pos:column="144">,</op:operator> <expr><name><name pos:line="77" pos:column="146">route</name><op:operator pos:line="77" pos:column="151">.</op:operator><name pos:line="77" pos:column="152">DataTokens</name></name></expr><op:operator pos:line="77" pos:column="162">,</op:operator> <expr><name><name pos:line="77" pos:column="164">route</name><op:operator pos:line="77" pos:column="169">.</op:operator><name pos:line="77" pos:column="170">RouteHandler</name></name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="78" pos:column="21">SetupConstraints</name><argument_list pos:line="78" pos:column="37">(<argument><expr><name pos:line="78" pos:column="38">Logger</name></expr></argument>, <argument><expr><name pos:line="78" pos:column="46">ProxyFactory</name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="60">route</name><op:operator pos:line="78" pos:column="65">.</op:operator><name pos:line="78" pos:column="66">Constraints</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if></else></if>
            }</block></then></if>

            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name pos:line="82" pos:column="17">newObj</name> <op:operator pos:line="82" pos:column="24">==</op:operator> <name pos:line="82" pos:column="27">null</name></expr>)</condition><then pos:line="82" pos:column="32">
            <block pos:line="83" pos:column="13">{
                <if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name><name pos:line="84" pos:column="21">ProxyFactory</name><op:operator pos:line="84" pos:column="33">.</op:operator><name pos:line="84" pos:column="34">IsWrapClassEligible</name></name><argument_list pos:line="84" pos:column="53">(<argument><expr><call><name pos:line="84" pos:column="54">typeof</name><argument_list pos:line="84" pos:column="60">(<argument><expr><name><name pos:line="84" pos:column="61">System</name><op:operator pos:line="84" pos:column="67">.</op:operator><name pos:line="84" pos:column="68">Web</name><op:operator pos:line="84" pos:column="71">.</op:operator><name pos:line="84" pos:column="72">Routing</name><op:operator pos:line="84" pos:column="79">.</op:operator><name pos:line="84" pos:column="80">RouteBase</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="84" pos:column="92">
                <block pos:line="85" pos:column="17">{
                    <expr_stmt><expr><name pos:line="86" pos:column="21">newObj</name> <op:operator pos:line="86" pos:column="28">=</op:operator> <call><name><name pos:line="86" pos:column="30">ProxyFactory</name><op:operator pos:line="86" pos:column="42">.</op:operator><name pos:line="86" pos:column="43">WrapClass</name></name><argument_list pos:line="86" pos:column="52">(<argument><expr><name pos:line="86" pos:column="53">originalObj</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="66">AllMethodsRouteBase</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="87">mixins</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>

            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">newObj</name> <op:operator pos:line="90" pos:column="27">!=</op:operator> <name pos:line="90" pos:column="30">null</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="93" pos:column="9">private</specifier> <name pos:line="93" pos:column="17">void</name></type> <name pos:line="93" pos:column="22">SetupConstraints</name><parameter_list pos:line="93" pos:column="38">(<param><decl><type><name pos:line="93" pos:column="39">ILogger</name></type> <name pos:line="93" pos:column="47">logger</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="55">IProxyFactory</name></type> <name pos:line="93" pos:column="69">proxyFactory</name></decl></param>, <param><decl><type><name><name pos:line="93" pos:column="83">System</name><op:operator pos:line="93" pos:column="89">.</op:operator><name pos:line="93" pos:column="90">Web</name><op:operator pos:line="93" pos:column="93">.</op:operator><name pos:line="93" pos:column="94">Routing</name><op:operator pos:line="93" pos:column="101">.</op:operator><name pos:line="93" pos:column="102">RouteValueDictionary</name></name></type> <name pos:line="93" pos:column="123">constraints</name></decl></param>)</parameter_list>
        <block pos:line="94" pos:column="9">{
            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><name pos:line="95" pos:column="17">constraints</name> <op:operator pos:line="95" pos:column="29">!=</op:operator> <name pos:line="95" pos:column="32">null</name></expr>)</condition><then pos:line="95" pos:column="37">
            <block pos:line="96" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="97" pos:column="17">var</name></type> <name pos:line="97" pos:column="21">keys</name> <init pos:line="97" pos:column="26">= <expr><call><name><name pos:line="97" pos:column="28">constraints</name><op:operator pos:line="97" pos:column="39">.</op:operator><name pos:line="97" pos:column="40">Keys</name><op:operator pos:line="97" pos:column="44">.</op:operator><name pos:line="97" pos:column="45">ToList</name></name><argument_list pos:line="97" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <for pos:line="98" pos:column="17">for (<init><decl><type><name pos:line="98" pos:column="22">var</name></type> <name pos:line="98" pos:column="26">i</name> <init pos:line="98" pos:column="28">= <expr><lit:literal type="number" pos:line="98" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="98" pos:column="33">i</name> <op:operator pos:line="98" pos:column="35">&lt;</op:operator> <name><name pos:line="98" pos:column="37">keys</name><op:operator pos:line="98" pos:column="41">.</op:operator><name pos:line="98" pos:column="42">Count</name></name></expr>;</condition> <incr><expr><name pos:line="98" pos:column="49">i</name><op:operator pos:line="98" pos:column="50">++</op:operator></expr></incr>)
                <block pos:line="99" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="100" pos:column="21">var</name></type> <name pos:line="100" pos:column="25">constraintKey</name> <init pos:line="100" pos:column="39">= <expr><name><name pos:line="100" pos:column="41">keys</name><index pos:line="100" pos:column="45">[<expr><name pos:line="100" pos:column="46">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="101" pos:column="21">var</name></type> <name pos:line="101" pos:column="25">constraint</name> <init pos:line="101" pos:column="36">= <expr><name><name pos:line="101" pos:column="38">constraints</name><index pos:line="101" pos:column="49">[<expr><name pos:line="101" pos:column="50">constraintKey</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt><decl><type><name pos:line="103" pos:column="21">var</name></type> <name pos:line="103" pos:column="25">originalObj</name> <init pos:line="103" pos:column="37">= <expr><name pos:line="103" pos:column="39">constraint</name> <op:operator pos:line="103" pos:column="50">as</op:operator> <name><name pos:line="103" pos:column="53">System</name><op:operator pos:line="103" pos:column="59">.</op:operator><name pos:line="103" pos:column="60">Web</name><op:operator pos:line="103" pos:column="63">.</op:operator><name pos:line="103" pos:column="64">Routing</name><op:operator pos:line="103" pos:column="71">.</op:operator><name pos:line="103" pos:column="72">IRouteConstraint</name></name></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="104" pos:column="21">var</name></type> <name pos:line="104" pos:column="25">newObj</name> <init pos:line="104" pos:column="32">= <expr><op:operator pos:line="104" pos:column="34">(</op:operator><name><name pos:line="104" pos:column="35">System</name><op:operator pos:line="104" pos:column="41">.</op:operator><name pos:line="104" pos:column="42">Web</name><op:operator pos:line="104" pos:column="45">.</op:operator><name pos:line="104" pos:column="46">Routing</name><op:operator pos:line="104" pos:column="53">.</op:operator><name pos:line="104" pos:column="54">IRouteConstraint</name></name><op:operator pos:line="104" pos:column="70">)</op:operator><name pos:line="104" pos:column="71">null</name></expr></init></decl>;</decl_stmt>
                    <if pos:line="105" pos:column="21">if <condition pos:line="105" pos:column="24">(<expr><name pos:line="105" pos:column="25">originalObj</name> <op:operator pos:line="105" pos:column="37">==</op:operator> <name pos:line="105" pos:column="40">null</name></expr>)</condition><then pos:line="105" pos:column="45">
                    <block pos:line="106" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="107" pos:column="25">var</name></type> <name pos:line="107" pos:column="29">stringRouteConstraint</name> <init pos:line="107" pos:column="51">= <expr><name pos:line="107" pos:column="53">constraint</name> <op:operator pos:line="107" pos:column="64">as</op:operator> <name pos:line="107" pos:column="67">string</name></expr></init></decl>;</decl_stmt>
                        <if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><name pos:line="108" pos:column="29">stringRouteConstraint</name> <op:operator pos:line="108" pos:column="51">!=</op:operator> <name pos:line="108" pos:column="54">null</name></expr>)</condition><then pos:line="108" pos:column="59">
                        <block pos:line="109" pos:column="25">{
                            <expr_stmt><expr><name pos:line="110" pos:column="29">newObj</name> <op:operator pos:line="110" pos:column="36">=</op:operator> <op:operator pos:line="110" pos:column="38">new</op:operator> <call><name pos:line="110" pos:column="42">RouteConstraintRegex</name><argument_list pos:line="110" pos:column="62">(<argument><expr><name pos:line="110" pos:column="63">stringRouteConstraint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        }</block></then></if>
                    }</block></then>
                    <else pos:line="113" pos:column="21">else
                    <block pos:line="114" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="115" pos:column="25">routeConstraintAlternate</name><op:operator pos:line="115" pos:column="49">.</op:operator><name pos:line="115" pos:column="50">TryCreate</name></name><argument_list pos:line="115" pos:column="59">(<argument><expr><name pos:line="115" pos:column="60">originalObj</name></expr></argument>, <argument><expr pos:line="115" pos:column="73">out <name pos:line="115" pos:column="77">newObj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>

                    <if pos:line="118" pos:column="21">if <condition pos:line="118" pos:column="24">(<expr><name pos:line="118" pos:column="25">newObj</name> <op:operator pos:line="118" pos:column="32">!=</op:operator> <name pos:line="118" pos:column="35">null</name></expr>)</condition><then pos:line="118" pos:column="40">
                    <block pos:line="119" pos:column="21">{
                        <expr_stmt><expr><name><name pos:line="120" pos:column="25">constraints</name><index pos:line="120" pos:column="36">[<expr><name pos:line="120" pos:column="37">constraintKey</name></expr>]</index></name> <op:operator pos:line="120" pos:column="52">=</op:operator> <name pos:line="120" pos:column="54">newObj</name></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="121" pos:column="25">logger</name><op:operator pos:line="121" pos:column="31">.</op:operator><name pos:line="121" pos:column="32">Info</name></name><argument_list pos:line="121" pos:column="36">(<argument><expr><name><name pos:line="121" pos:column="37">Resources</name><op:operator pos:line="121" pos:column="46">.</op:operator><name pos:line="121" pos:column="47">RouteSetupReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="121" pos:column="72">constraint</name><op:operator pos:line="121" pos:column="82">.</op:operator><name pos:line="121" pos:column="83">GetType</name></name><argument_list pos:line="121" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="123" pos:column="21">else
                    <block pos:line="124" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="125" pos:column="25">logger</name><op:operator pos:line="125" pos:column="31">.</op:operator><name pos:line="125" pos:column="32">Info</name></name><argument_list pos:line="125" pos:column="36">(<argument><expr><name><name pos:line="125" pos:column="37">Resources</name><op:operator pos:line="125" pos:column="46">.</op:operator><name pos:line="125" pos:column="47">RouteSetupNotReplacedRoute</name></name></expr></argument>, <argument><expr><call><name><name pos:line="125" pos:column="75">constraint</name><op:operator pos:line="125" pos:column="85">.</op:operator><name pos:line="125" pos:column="86">GetType</name></name><argument_list pos:line="125" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                }</block></for>
            }</block></then></if>
        }</block></function>

        <class><specifier pos:line="131" pos:column="9">public</specifier> class <name pos:line="131" pos:column="22">GetRouteData</name> <super pos:line="131" pos:column="35">: <name pos:line="131" pos:column="37">AlternateMethod</name></super>
        <block pos:line="132" pos:column="9">{
            <constructor><specifier pos:line="133" pos:column="13">public</specifier> <name pos:line="133" pos:column="20">GetRouteData</name><parameter_list pos:line="133" pos:column="32">(<param><decl><type><name pos:line="133" pos:column="33">Type</name></type> <name pos:line="133" pos:column="38">type</name></decl></param>)</parameter_list>
                <member_list pos:line="134" pos:column="17">: <call><name pos:line="134" pos:column="19">base</name><argument_list pos:line="134" pos:column="23">(<argument><expr><name pos:line="134" pos:column="24">type</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="134" pos:column="30">"GetRouteData"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="46">BindingFlags</name><op:operator pos:line="134" pos:column="58">.</op:operator><name pos:line="134" pos:column="59">Public</name></name> <op:operator pos:line="134" pos:column="66">|</op:operator> <name><name pos:line="134" pos:column="68">BindingFlags</name><op:operator pos:line="134" pos:column="80">.</op:operator><name pos:line="134" pos:column="81">Instance</name></name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="135" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="138" pos:column="13">public</specifier> <specifier pos:line="138" pos:column="20">override</specifier> <name pos:line="138" pos:column="29">void</name></type> <name pos:line="138" pos:column="34">PostImplementation</name><parameter_list pos:line="138" pos:column="52">(<param><decl><type><name pos:line="138" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="138" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="138" pos:column="86">TimerResult</name></type> <name pos:line="138" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="139" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="140" pos:column="17">var</name></type> <name pos:line="140" pos:column="21">mixin</name> <init pos:line="140" pos:column="27">= <expr><op:operator pos:line="140" pos:column="29">(</op:operator><name pos:line="140" pos:column="30">IRouteNameMixin</name><op:operator pos:line="140" pos:column="45">)</op:operator><name><name pos:line="140" pos:column="46">context</name><op:operator pos:line="140" pos:column="53">.</op:operator><name pos:line="140" pos:column="54">Proxy</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="142" pos:column="17">context</name><op:operator pos:line="142" pos:column="24">.</op:operator><name pos:line="142" pos:column="25">MessageBroker</name><op:operator pos:line="142" pos:column="38">.</op:operator><name pos:line="142" pos:column="39">Publish</name></name><argument_list pos:line="142" pos:column="46">(
                    <argument><expr><op:operator pos:line="143" pos:column="21">new</op:operator> <call><name pos:line="143" pos:column="25">Message</name><argument_list pos:line="143" pos:column="32">(<argument><expr><call><name><name pos:line="143" pos:column="33">context</name><op:operator pos:line="143" pos:column="40">.</op:operator><name pos:line="143" pos:column="41">Proxy</name><op:operator pos:line="143" pos:column="46">.</op:operator><name pos:line="143" pos:column="47">GetHashCode</name></name><argument_list pos:line="143" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="143" pos:column="62">(</op:operator><name><name pos:line="143" pos:column="63">System</name><op:operator pos:line="143" pos:column="69">.</op:operator><name pos:line="143" pos:column="70">Web</name><op:operator pos:line="143" pos:column="73">.</op:operator><name pos:line="143" pos:column="74">Routing</name><op:operator pos:line="143" pos:column="81">.</op:operator><name pos:line="143" pos:column="82">RouteData</name></name><op:operator pos:line="143" pos:column="91">)</op:operator><name><name pos:line="143" pos:column="92">context</name><op:operator pos:line="143" pos:column="99">.</op:operator><name pos:line="143" pos:column="100">ReturnValue</name></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="113">mixin</name><op:operator pos:line="143" pos:column="118">.</op:operator><name pos:line="143" pos:column="119">Name</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="144" pos:column="21">.</op:operator><call><name pos:line="144" pos:column="22">AsTimedMessage</name><argument_list pos:line="144" pos:column="36">(<argument><expr><name pos:line="144" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="145" pos:column="21">.</op:operator><call><name pos:line="145" pos:column="22">AsSourceMessage</name><argument_list pos:line="145" pos:column="37">(<argument><expr><call><name><name pos:line="145" pos:column="38">context</name><op:operator pos:line="145" pos:column="45">.</op:operator><name pos:line="145" pos:column="46">InvocationTarget</name><op:operator pos:line="145" pos:column="62">.</op:operator><name pos:line="145" pos:column="63">GetType</name></name><argument_list pos:line="145" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="74">context</name><op:operator pos:line="145" pos:column="81">.</op:operator><name pos:line="145" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="148" pos:column="13">public</specifier> class <name pos:line="148" pos:column="26">Message</name> <super pos:line="148" pos:column="34">: <name pos:line="148" pos:column="36">RouteDataMessage</name></super>
            <block pos:line="149" pos:column="13">{
                <constructor><specifier pos:line="150" pos:column="17">public</specifier> <name pos:line="150" pos:column="24">Message</name><parameter_list pos:line="150" pos:column="31">(<param><decl><type><name pos:line="150" pos:column="32">int</name></type> <name pos:line="150" pos:column="36">routeHashCode</name></decl></param>, <param><decl><type><name><name pos:line="150" pos:column="51">System</name><op:operator pos:line="150" pos:column="57">.</op:operator><name pos:line="150" pos:column="58">Web</name><op:operator pos:line="150" pos:column="61">.</op:operator><name pos:line="150" pos:column="62">Routing</name><op:operator pos:line="150" pos:column="69">.</op:operator><name pos:line="150" pos:column="70">RouteData</name></name></type> <name pos:line="150" pos:column="80">routeData</name></decl></param>, <param><decl><type><name pos:line="150" pos:column="91">string</name></type> <name pos:line="150" pos:column="98">routeName</name></decl></param>)</parameter_list>
                    <member_list pos:line="151" pos:column="21">: <call><name pos:line="151" pos:column="23">base</name><argument_list pos:line="151" pos:column="27">(<argument><expr><name pos:line="151" pos:column="28">routeHashCode</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="43">routeData</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="54">routeName</name></expr></argument>)</argument_list></call>
                </member_list><block pos:line="152" pos:column="17">{
                }</block></constructor>
            }</block></class>
        }</block></class>

        <class><specifier pos:line="157" pos:column="9">public</specifier> class <name pos:line="157" pos:column="22">GetVirtualPath</name> <super pos:line="157" pos:column="37">: <name pos:line="157" pos:column="39">AlternateMethod</name></super>
        <block pos:line="158" pos:column="9">{
            <constructor><specifier pos:line="159" pos:column="13">public</specifier> <name pos:line="159" pos:column="20">GetVirtualPath</name><parameter_list pos:line="159" pos:column="34">(<param><decl><type><name pos:line="159" pos:column="35">Type</name></type> <name pos:line="159" pos:column="40">type</name></decl></param>)</parameter_list>
                <member_list pos:line="160" pos:column="17">: <call><name pos:line="160" pos:column="19">base</name><argument_list pos:line="160" pos:column="23">(<argument><expr><name pos:line="160" pos:column="24">type</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="160" pos:column="30">"GetVirtualPath"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="48">BindingFlags</name><op:operator pos:line="160" pos:column="60">.</op:operator><name pos:line="160" pos:column="61">Public</name></name> <op:operator pos:line="160" pos:column="68">|</op:operator> <name><name pos:line="160" pos:column="70">BindingFlags</name><op:operator pos:line="160" pos:column="82">.</op:operator><name pos:line="160" pos:column="83">Instance</name></name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="161" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="164" pos:column="13">public</specifier> <specifier pos:line="164" pos:column="20">override</specifier> <name pos:line="164" pos:column="29">void</name></type> <name pos:line="164" pos:column="34">PostImplementation</name><parameter_list pos:line="164" pos:column="52">(<param><decl><type><name pos:line="164" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="164" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="164" pos:column="86">TimerResult</name></type> <name pos:line="164" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="165" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="166" pos:column="17">context</name><op:operator pos:line="166" pos:column="24">.</op:operator><name pos:line="166" pos:column="25">MessageBroker</name><op:operator pos:line="166" pos:column="38">.</op:operator><name pos:line="166" pos:column="39">Publish</name></name><argument_list pos:line="166" pos:column="46">(<argument><expr><op:operator pos:line="166" pos:column="47">new</op:operator> <call><name pos:line="166" pos:column="51">Message</name><argument_list pos:line="166" pos:column="58">(
                    <argument><expr><op:operator pos:line="167" pos:column="21">new</op:operator> <call><name pos:line="167" pos:column="25">Arguments</name><argument_list pos:line="167" pos:column="34">(<argument><expr><name><name pos:line="167" pos:column="35">context</name><op:operator pos:line="167" pos:column="42">.</op:operator><name pos:line="167" pos:column="43">Arguments</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="167" pos:column="55">context</name><op:operator pos:line="167" pos:column="62">.</op:operator><name pos:line="167" pos:column="63">InvocationTarget</name></name></expr></argument>, <argument><expr><op:operator pos:line="167" pos:column="81">(</op:operator><name><name pos:line="167" pos:column="82">System</name><op:operator pos:line="167" pos:column="88">.</op:operator><name pos:line="167" pos:column="89">Web</name><op:operator pos:line="167" pos:column="92">.</op:operator><name pos:line="167" pos:column="93">Routing</name><op:operator pos:line="167" pos:column="100">.</op:operator><name pos:line="167" pos:column="101">VirtualPathData</name></name><op:operator pos:line="167" pos:column="116">)</op:operator><name><name pos:line="167" pos:column="117">context</name><op:operator pos:line="167" pos:column="124">.</op:operator><name pos:line="167" pos:column="125">ReturnValue</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="168" pos:column="21">.</op:operator><call><name pos:line="168" pos:column="22">AsTimedMessage</name><argument_list pos:line="168" pos:column="36">(<argument><expr><name pos:line="168" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="169" pos:column="21">.</op:operator><call><name pos:line="169" pos:column="22">AsSourceMessage</name><argument_list pos:line="169" pos:column="37">(<argument><expr><call><name><name pos:line="169" pos:column="38">context</name><op:operator pos:line="169" pos:column="45">.</op:operator><name pos:line="169" pos:column="46">InvocationTarget</name><op:operator pos:line="169" pos:column="62">.</op:operator><name pos:line="169" pos:column="63">GetType</name></name><argument_list pos:line="169" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="169" pos:column="74">context</name><op:operator pos:line="169" pos:column="81">.</op:operator><name pos:line="169" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="172" pos:column="13">public</specifier> class <name pos:line="172" pos:column="26">Arguments</name>
            <block pos:line="173" pos:column="13">{
                <constructor><specifier pos:line="174" pos:column="17">public</specifier> <name pos:line="174" pos:column="24">Arguments</name><parameter_list pos:line="174" pos:column="33">(<param><decl><type><specifier pos:line="174" pos:column="34">params</specifier> <name><name pos:line="174" pos:column="41">object</name><index pos:line="174" pos:column="47">[]</index></name></type> <name pos:line="174" pos:column="50">args</name></decl></param>)</parameter_list>
                <block pos:line="175" pos:column="17">{
                    <expr_stmt><expr><name pos:line="176" pos:column="21">RequestContext</name> <op:operator pos:line="176" pos:column="36">=</op:operator> <op:operator pos:line="176" pos:column="38">(</op:operator><name><name pos:line="176" pos:column="39">System</name><op:operator pos:line="176" pos:column="45">.</op:operator><name pos:line="176" pos:column="46">Web</name><op:operator pos:line="176" pos:column="49">.</op:operator><name pos:line="176" pos:column="50">Routing</name><op:operator pos:line="176" pos:column="57">.</op:operator><name pos:line="176" pos:column="58">RequestContext</name></name><op:operator pos:line="176" pos:column="72">)</op:operator><name><name pos:line="176" pos:column="73">args</name><index pos:line="176" pos:column="77">[<expr><lit:literal type="number" pos:line="176" pos:column="78">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="177" pos:column="21">Values</name> <op:operator pos:line="177" pos:column="28">=</op:operator> <op:operator pos:line="177" pos:column="30">(</op:operator><name><name pos:line="177" pos:column="31">System</name><op:operator pos:line="177" pos:column="37">.</op:operator><name pos:line="177" pos:column="38">Web</name><op:operator pos:line="177" pos:column="41">.</op:operator><name pos:line="177" pos:column="42">Routing</name><op:operator pos:line="177" pos:column="49">.</op:operator><name pos:line="177" pos:column="50">RouteValueDictionary</name></name><op:operator pos:line="177" pos:column="70">)</op:operator><name><name pos:line="177" pos:column="71">args</name><index pos:line="177" pos:column="75">[<expr><lit:literal type="number" pos:line="177" pos:column="76">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="180" pos:column="17">public</specifier> <name><name pos:line="180" pos:column="24">System</name><op:operator pos:line="180" pos:column="30">.</op:operator><name pos:line="180" pos:column="31">Web</name><op:operator pos:line="180" pos:column="34">.</op:operator><name pos:line="180" pos:column="35">Routing</name><op:operator pos:line="180" pos:column="42">.</op:operator><name pos:line="180" pos:column="43">RequestContext</name></name></type> <name pos:line="180" pos:column="58">RequestContext</name> <block pos:line="180" pos:column="73">{ <function_decl><name pos:line="180" pos:column="75">get</name>;</function_decl> <function_decl><specifier pos:line="180" pos:column="80">private</specifier> <name pos:line="180" pos:column="88">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="182" pos:column="17">public</specifier> <name><name pos:line="182" pos:column="24">System</name><op:operator pos:line="182" pos:column="30">.</op:operator><name pos:line="182" pos:column="31">Web</name><op:operator pos:line="182" pos:column="34">.</op:operator><name pos:line="182" pos:column="35">Routing</name><op:operator pos:line="182" pos:column="42">.</op:operator><name pos:line="182" pos:column="43">RouteValueDictionary</name></name></type> <name pos:line="182" pos:column="64">Values</name> <block pos:line="182" pos:column="71">{ <function_decl><name pos:line="182" pos:column="73">get</name>;</function_decl> <function_decl><specifier pos:line="182" pos:column="78">private</specifier> <name pos:line="182" pos:column="86">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="185" pos:column="13">public</specifier> class <name pos:line="185" pos:column="26">Message</name> <super pos:line="185" pos:column="34">: <name pos:line="185" pos:column="36">ITimedMessage</name>, <name pos:line="185" pos:column="51">ISourceMessage</name></super>
            <block pos:line="186" pos:column="13">{
                <constructor><specifier pos:line="187" pos:column="17">public</specifier> <name pos:line="187" pos:column="24">Message</name><parameter_list pos:line="187" pos:column="31">(<param><decl><type><name pos:line="187" pos:column="32">Arguments</name></type> <name pos:line="187" pos:column="42">args</name></decl></param>, <param><decl><type><name pos:line="187" pos:column="48">object</name></type> <name pos:line="187" pos:column="55">invocationTarget</name></decl></param>, <param><decl><type><name><name pos:line="187" pos:column="73">System</name><op:operator pos:line="187" pos:column="79">.</op:operator><name pos:line="187" pos:column="80">Web</name><op:operator pos:line="187" pos:column="83">.</op:operator><name pos:line="187" pos:column="84">Routing</name><op:operator pos:line="187" pos:column="91">.</op:operator><name pos:line="187" pos:column="92">VirtualPathData</name></name></type> <name pos:line="187" pos:column="108">virtualPathData</name></decl></param>)</parameter_list>
                <block pos:line="188" pos:column="17">{
                    <expr_stmt><expr><name pos:line="189" pos:column="21">IsMatch</name> <op:operator pos:line="189" pos:column="29">=</op:operator> <name pos:line="189" pos:column="31">virtualPathData</name> <op:operator pos:line="189" pos:column="47">!=</op:operator> <name pos:line="189" pos:column="50">null</name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="190" pos:column="21">RouteHashCode</name> <op:operator pos:line="190" pos:column="35">=</op:operator> <call><name><name pos:line="190" pos:column="37">invocationTarget</name><op:operator pos:line="190" pos:column="53">.</op:operator><name pos:line="190" pos:column="54">GetHashCode</name></name><argument_list pos:line="190" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="193" pos:column="17">public</specifier> <name pos:line="193" pos:column="24">int</name></type> <name pos:line="193" pos:column="28">RouteHashCode</name> <block pos:line="193" pos:column="42">{ <function_decl><name pos:line="193" pos:column="44">get</name>;</function_decl> <function_decl><specifier pos:line="193" pos:column="49">protected</specifier> <name pos:line="193" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="195" pos:column="17">public</specifier> <name pos:line="195" pos:column="24">bool</name></type> <name pos:line="195" pos:column="29">IsMatch</name> <block pos:line="195" pos:column="37">{ <function_decl><name pos:line="195" pos:column="39">get</name>;</function_decl> <function_decl><specifier pos:line="195" pos:column="44">protected</specifier> <name pos:line="195" pos:column="54">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="197" pos:column="17">public</specifier> <name pos:line="197" pos:column="24">Guid</name></type> <name pos:line="197" pos:column="29">Id</name> <block pos:line="197" pos:column="32">{ <function_decl><name pos:line="197" pos:column="34">get</name>;</function_decl> <function_decl><specifier pos:line="197" pos:column="39">private</specifier> <name pos:line="197" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="199" pos:column="17">public</specifier> <name pos:line="199" pos:column="24">TimeSpan</name></type> <name pos:line="199" pos:column="33">Offset</name> <block pos:line="199" pos:column="40">{ <function_decl><name pos:line="199" pos:column="42">get</name>;</function_decl> <function_decl><name pos:line="199" pos:column="47">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="201" pos:column="17">public</specifier> <name pos:line="201" pos:column="24">TimeSpan</name></type> <name pos:line="201" pos:column="33">Duration</name> <block pos:line="201" pos:column="42">{ <function_decl><name pos:line="201" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="201" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="203" pos:column="17">public</specifier> <name pos:line="203" pos:column="24">DateTime</name></type> <name pos:line="203" pos:column="33">StartTime</name> <block pos:line="203" pos:column="43">{ <function_decl><name pos:line="203" pos:column="45">get</name>;</function_decl> <function_decl><name pos:line="203" pos:column="50">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="205" pos:column="17">public</specifier> <name pos:line="205" pos:column="24">Type</name></type> <name pos:line="205" pos:column="29">ExecutedType</name> <block pos:line="205" pos:column="42">{ <function_decl><name pos:line="205" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="205" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="207" pos:column="17">public</specifier> <name pos:line="207" pos:column="24">MethodInfo</name></type> <name pos:line="207" pos:column="35">ExecutedMethod</name> <block pos:line="207" pos:column="50">{ <function_decl><name pos:line="207" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="207" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>
        }</block></class>

        <class><specifier pos:line="211" pos:column="9">public</specifier> class <name pos:line="211" pos:column="22">ProcessConstraint</name> <super pos:line="211" pos:column="40">: <name pos:line="211" pos:column="42">AlternateMethod</name></super>
        <block pos:line="212" pos:column="9">{
            <constructor><specifier pos:line="213" pos:column="13">public</specifier> <name pos:line="213" pos:column="20">ProcessConstraint</name><parameter_list pos:line="213" pos:column="37">()</parameter_list>
                <member_list pos:line="214" pos:column="17">: <call><name pos:line="214" pos:column="19">base</name><argument_list pos:line="214" pos:column="23">(<argument><expr><call><name pos:line="214" pos:column="24">typeof</name><argument_list pos:line="214" pos:column="30">(<argument><expr><name><name pos:line="214" pos:column="31">System</name><op:operator pos:line="214" pos:column="37">.</op:operator><name pos:line="214" pos:column="38">Web</name><op:operator pos:line="214" pos:column="41">.</op:operator><name pos:line="214" pos:column="42">Routing</name><op:operator pos:line="214" pos:column="49">.</op:operator><name pos:line="214" pos:column="50">Route</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="214" pos:column="58">"ProcessConstraint"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="79">BindingFlags</name><op:operator pos:line="214" pos:column="91">.</op:operator><name pos:line="214" pos:column="92">NonPublic</name></name> <op:operator pos:line="214" pos:column="102">|</op:operator> <name><name pos:line="214" pos:column="104">BindingFlags</name><op:operator pos:line="214" pos:column="116">.</op:operator><name pos:line="214" pos:column="117">Instance</name></name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="215" pos:column="13">{
            }</block></constructor>

            <function><type><specifier pos:line="218" pos:column="13">public</specifier> <specifier pos:line="218" pos:column="20">override</specifier> <name pos:line="218" pos:column="29">void</name></type> <name pos:line="218" pos:column="34">PostImplementation</name><parameter_list pos:line="218" pos:column="52">(<param><decl><type><name pos:line="218" pos:column="53">IAlternateMethodContext</name></type> <name pos:line="218" pos:column="77">context</name></decl></param>, <param><decl><type><name pos:line="218" pos:column="86">TimerResult</name></type> <name pos:line="218" pos:column="98">timerResult</name></decl></param>)</parameter_list>
            <block pos:line="219" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="220" pos:column="17">context</name><op:operator pos:line="220" pos:column="24">.</op:operator><name pos:line="220" pos:column="25">MessageBroker</name><op:operator pos:line="220" pos:column="38">.</op:operator><name pos:line="220" pos:column="39">Publish</name></name><argument_list pos:line="220" pos:column="46">(
                    <argument><expr><op:operator pos:line="221" pos:column="21">new</op:operator> <call><name pos:line="221" pos:column="25">Message</name><argument_list pos:line="221" pos:column="32">(<argument><expr><op:operator pos:line="221" pos:column="33">new</op:operator> <call><name pos:line="221" pos:column="37">Arguments</name><argument_list pos:line="221" pos:column="46">(<argument><expr><name><name pos:line="221" pos:column="47">context</name><op:operator pos:line="221" pos:column="54">.</op:operator><name pos:line="221" pos:column="55">Arguments</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="221" pos:column="67">context</name><op:operator pos:line="221" pos:column="74">.</op:operator><name pos:line="221" pos:column="75">InvocationTarget</name><op:operator pos:line="221" pos:column="91">.</op:operator><name pos:line="221" pos:column="92">GetHashCode</name></name><argument_list pos:line="221" pos:column="103">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="221" pos:column="107">(</op:operator><name pos:line="221" pos:column="108">bool</name><op:operator pos:line="221" pos:column="112">)</op:operator><name><name pos:line="221" pos:column="113">context</name><op:operator pos:line="221" pos:column="120">.</op:operator><name pos:line="221" pos:column="121">ReturnValue</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="222" pos:column="21">.</op:operator><call><name pos:line="222" pos:column="22">AsTimedMessage</name><argument_list pos:line="222" pos:column="36">(<argument><expr><name pos:line="222" pos:column="37">timerResult</name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="223" pos:column="21">.</op:operator><call><name pos:line="223" pos:column="22">AsSourceMessage</name><argument_list pos:line="223" pos:column="37">(<argument><expr><call><name><name pos:line="223" pos:column="38">context</name><op:operator pos:line="223" pos:column="45">.</op:operator><name pos:line="223" pos:column="46">InvocationTarget</name><op:operator pos:line="223" pos:column="62">.</op:operator><name pos:line="223" pos:column="63">GetType</name></name><argument_list pos:line="223" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="223" pos:column="74">context</name><op:operator pos:line="223" pos:column="81">.</op:operator><name pos:line="223" pos:column="82">MethodInvocationTarget</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>

            <class><specifier pos:line="226" pos:column="13">public</specifier> class <name pos:line="226" pos:column="26">Arguments</name>
            <block pos:line="227" pos:column="13">{
                <constructor><specifier pos:line="228" pos:column="17">public</specifier> <name pos:line="228" pos:column="24">Arguments</name><parameter_list pos:line="228" pos:column="33">(<param><decl><type><name><name pos:line="228" pos:column="34">object</name><index pos:line="228" pos:column="40">[]</index></name></type> <name pos:line="228" pos:column="43">args</name></decl></param>)</parameter_list>
                <block pos:line="229" pos:column="17">{
                    <expr_stmt><expr><name pos:line="230" pos:column="21">HttpContext</name> <op:operator pos:line="230" pos:column="33">=</op:operator> <op:operator pos:line="230" pos:column="35">(</op:operator><name pos:line="230" pos:column="36">HttpContextBase</name><op:operator pos:line="230" pos:column="51">)</op:operator><name><name pos:line="230" pos:column="52">args</name><index pos:line="230" pos:column="56">[<expr><lit:literal type="number" pos:line="230" pos:column="57">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="231" pos:column="21">Constraint</name> <op:operator pos:line="231" pos:column="32">=</op:operator> <name><name pos:line="231" pos:column="34">args</name><index pos:line="231" pos:column="38">[<expr><lit:literal type="number" pos:line="231" pos:column="39">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="232" pos:column="21">ParameterName</name> <op:operator pos:line="232" pos:column="35">=</op:operator> <op:operator pos:line="232" pos:column="37">(</op:operator><name pos:line="232" pos:column="38">string</name><op:operator pos:line="232" pos:column="44">)</op:operator><name><name pos:line="232" pos:column="45">args</name><index pos:line="232" pos:column="49">[<expr><lit:literal type="number" pos:line="232" pos:column="50">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="233" pos:column="21">Values</name> <op:operator pos:line="233" pos:column="28">=</op:operator> <op:operator pos:line="233" pos:column="30">(</op:operator><name><name pos:line="233" pos:column="31">System</name><op:operator pos:line="233" pos:column="37">.</op:operator><name pos:line="233" pos:column="38">Web</name><op:operator pos:line="233" pos:column="41">.</op:operator><name pos:line="233" pos:column="42">Routing</name><op:operator pos:line="233" pos:column="49">.</op:operator><name pos:line="233" pos:column="50">RouteValueDictionary</name></name><op:operator pos:line="233" pos:column="70">)</op:operator><name><name pos:line="233" pos:column="71">args</name><index pos:line="233" pos:column="75">[<expr><lit:literal type="number" pos:line="233" pos:column="76">3</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="234" pos:column="21">RouteDirection</name> <op:operator pos:line="234" pos:column="36">=</op:operator> <op:operator pos:line="234" pos:column="38">(</op:operator><name><name pos:line="234" pos:column="39">System</name><op:operator pos:line="234" pos:column="45">.</op:operator><name pos:line="234" pos:column="46">Web</name><op:operator pos:line="234" pos:column="49">.</op:operator><name pos:line="234" pos:column="50">Routing</name><op:operator pos:line="234" pos:column="57">.</op:operator><name pos:line="234" pos:column="58">RouteDirection</name></name><op:operator pos:line="234" pos:column="72">)</op:operator><name><name pos:line="234" pos:column="73">args</name><index pos:line="234" pos:column="77">[<expr><lit:literal type="number" pos:line="234" pos:column="78">4</lit:literal></expr>]</index></name></expr>;</expr_stmt>
                }</block></constructor>

                <decl_stmt><decl><type><specifier pos:line="237" pos:column="17">public</specifier> <name pos:line="237" pos:column="24">HttpContextBase</name></type> <name pos:line="237" pos:column="40">HttpContext</name> <block pos:line="237" pos:column="52">{ <function_decl><name pos:line="237" pos:column="54">get</name>;</function_decl> <function_decl><specifier pos:line="237" pos:column="59">private</specifier> <name pos:line="237" pos:column="67">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="239" pos:column="17">public</specifier> <name pos:line="239" pos:column="24">object</name></type> <name pos:line="239" pos:column="31">Constraint</name> <block pos:line="239" pos:column="42">{ <function_decl><name pos:line="239" pos:column="44">get</name>;</function_decl> <function_decl><specifier pos:line="239" pos:column="49">private</specifier> <name pos:line="239" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="241" pos:column="17">public</specifier> <name pos:line="241" pos:column="24">string</name></type> <name pos:line="241" pos:column="31">ParameterName</name> <block pos:line="241" pos:column="45">{ <function_decl><name pos:line="241" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="241" pos:column="52">private</specifier> <name pos:line="241" pos:column="60">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="243" pos:column="17">public</specifier> <name><name pos:line="243" pos:column="24">System</name><op:operator pos:line="243" pos:column="30">.</op:operator><name pos:line="243" pos:column="31">Web</name><op:operator pos:line="243" pos:column="34">.</op:operator><name pos:line="243" pos:column="35">Routing</name><op:operator pos:line="243" pos:column="42">.</op:operator><name pos:line="243" pos:column="43">RouteValueDictionary</name></name></type> <name pos:line="243" pos:column="64">Values</name> <block pos:line="243" pos:column="71">{ <function_decl><name pos:line="243" pos:column="73">get</name>;</function_decl> <function_decl><specifier pos:line="243" pos:column="78">private</specifier> <name pos:line="243" pos:column="86">set</name>;</function_decl> }</block></decl></decl_stmt>

                <decl_stmt><decl><type><specifier pos:line="245" pos:column="17">public</specifier> <name><name pos:line="245" pos:column="24">System</name><op:operator pos:line="245" pos:column="30">.</op:operator><name pos:line="245" pos:column="31">Web</name><op:operator pos:line="245" pos:column="34">.</op:operator><name pos:line="245" pos:column="35">Routing</name><op:operator pos:line="245" pos:column="42">.</op:operator><name pos:line="245" pos:column="43">RouteDirection</name></name></type> <name pos:line="245" pos:column="58">RouteDirection</name> <block pos:line="245" pos:column="73">{ <function_decl><name pos:line="245" pos:column="75">get</name>;</function_decl> <function_decl><specifier pos:line="245" pos:column="80">private</specifier> <name pos:line="245" pos:column="88">set</name>;</function_decl> }</block></decl></decl_stmt>
            }</block></class>

            <class><specifier pos:line="248" pos:column="13">public</specifier> class <name pos:line="248" pos:column="26">Message</name> <super pos:line="248" pos:column="34">: <name pos:line="248" pos:column="36">ProcessConstraintMessage</name></super>
            <block pos:line="249" pos:column="13">{
                <constructor><specifier pos:line="250" pos:column="17">public</specifier> <name pos:line="250" pos:column="24">Message</name><parameter_list pos:line="250" pos:column="31">(<param><decl><type><name pos:line="250" pos:column="32">Arguments</name></type> <name pos:line="250" pos:column="42">args</name></decl></param>, <param><decl><type><name pos:line="250" pos:column="48">int</name></type> <name pos:line="250" pos:column="52">routeHashCode</name></decl></param>, <param><decl><type><name pos:line="250" pos:column="67">bool</name></type> <name pos:line="250" pos:column="72">isMatch</name></decl></param>)</parameter_list>
                    <member_list pos:line="251" pos:column="21">: <call><name pos:line="251" pos:column="23">base</name><argument_list pos:line="251" pos:column="27">(<argument><expr><name pos:line="251" pos:column="28">routeHashCode</name></expr></argument>, <argument><expr><call><name><name pos:line="251" pos:column="43">args</name><op:operator pos:line="251" pos:column="47">.</op:operator><name pos:line="251" pos:column="48">Constraint</name><op:operator pos:line="251" pos:column="58">.</op:operator><name pos:line="251" pos:column="59">GetHashCode</name></name><argument_list pos:line="251" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="251" pos:column="74">isMatch</name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="83">args</name><op:operator pos:line="251" pos:column="87">.</op:operator><name pos:line="251" pos:column="88">ParameterName</name></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="103">args</name><op:operator pos:line="251" pos:column="107">.</op:operator><name pos:line="251" pos:column="108">Constraint</name></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="120">args</name><op:operator pos:line="251" pos:column="124">.</op:operator><name pos:line="251" pos:column="125">Values</name></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="133">args</name><op:operator pos:line="251" pos:column="137">.</op:operator><name pos:line="251" pos:column="138">RouteDirection</name></name></expr></argument>)</argument_list></call>
                </member_list><block pos:line="252" pos:column="17">{
                }</block></constructor>
            }</block></class>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
