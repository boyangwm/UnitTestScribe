<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\ApplicationPersistenceStoreShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Framework</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Test</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Core</name><op:operator pos:line="5" pos:column="24">.</op:operator><name pos:line="5" pos:column="25">Tester</name></name>;</using>
<using pos:line="6" pos:column="1">using <name pos:line="6" pos:column="7">Xunit</name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Test</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Core</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">ApplicationPersistenceStoreShould</name><super pos:line="10" pos:column="51">:<name pos:line="10" pos:column="52">IDisposable</name></super>
    <block pos:line="11" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">private</specifier> <name pos:line="12" pos:column="17">ApplicationPersistenceStoreTester</name></type> <name pos:line="12" pos:column="51">tester</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">ApplicationPersistenceStoreTester</name></type> <name pos:line="13" pos:column="50">Store</name>
        <block pos:line="14" pos:column="9">{
            <function><name pos:line="15" pos:column="13">get</name> <block pos:line="15" pos:column="17">{ <return pos:line="15" pos:column="19">return <expr><name pos:line="15" pos:column="26">tester</name> <op:operator pos:line="15" pos:column="33">??</op:operator> <op:operator pos:line="15" pos:column="36">(</op:operator><name pos:line="15" pos:column="37">tester</name> <op:operator pos:line="15" pos:column="44">=</op:operator> <call><name><name pos:line="15" pos:column="46">ApplicationPersistenceStoreTester</name><op:operator pos:line="15" pos:column="79">.</op:operator><name pos:line="15" pos:column="80">Create</name></name><argument_list pos:line="15" pos:column="86">()</argument_list></call><op:operator pos:line="15" pos:column="88">)</op:operator></expr>;</return> }</block></function>
            <function><name pos:line="16" pos:column="13">set</name> <block pos:line="16" pos:column="17">{ <expr_stmt><expr><name pos:line="16" pos:column="19">tester</name> <op:operator pos:line="16" pos:column="26">=</op:operator> <name pos:line="16" pos:column="28">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">void</name></type> <name pos:line="19" pos:column="21">Dispose</name><parameter_list pos:line="19" pos:column="28">()</parameter_list>
        <block pos:line="20" pos:column="9">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">Store</name> <op:operator pos:line="21" pos:column="19">=</op:operator> <name pos:line="21" pos:column="21">null</name></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="24" pos:column="9">[<expr><name pos:line="24" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="25" pos:column="9">public</specifier> <name pos:line="25" pos:column="16">void</name></type> <name pos:line="25" pos:column="21">Construct</name><parameter_list pos:line="25" pos:column="30">()</parameter_list>
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">Assert</name><op:operator pos:line="27" pos:column="19">.</op:operator><name pos:line="27" pos:column="20">NotNull</name></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">Store</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="30" pos:column="9">[<expr><name pos:line="30" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">void</name></type> <name pos:line="31" pos:column="21">Persist</name><parameter_list pos:line="31" pos:column="28">()</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">Assert</name><op:operator pos:line="33" pos:column="19">.</op:operator><name pos:line="33" pos:column="20">Equal</name></name><argument_list pos:line="33" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="33" pos:column="29">Store</name><op:operator pos:line="33" pos:column="34">.</op:operator><name pos:line="33" pos:column="35">GlimpseRequests</name><op:operator pos:line="33" pos:column="50">.</op:operator><name pos:line="33" pos:column="51">Count</name></name><argument_list pos:line="33" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="35" pos:column="13">var</name></type> <name pos:line="35" pos:column="17">pluginData</name> <init pos:line="35" pos:column="28">= <expr><op:operator pos:line="35" pos:column="30">new</op:operator> <call><name><name pos:line="35" pos:column="34">Dictionary</name><argument_list pos:line="35" pos:column="44">&lt;<argument><name pos:line="35" pos:column="45">string</name></argument>, <argument><name pos:line="35" pos:column="53">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="35" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">Store</name><op:operator pos:line="37" pos:column="18">.</op:operator><name pos:line="37" pos:column="19">Save</name></name><argument_list pos:line="37" pos:column="23">(<argument><expr><op:operator pos:line="37" pos:column="24">new</op:operator> <call><name pos:line="37" pos:column="28">GlimpseRequest</name><argument_list pos:line="37" pos:column="42">(<argument><expr><call><name><name pos:line="37" pos:column="43">Guid</name><op:operator pos:line="37" pos:column="47">.</op:operator><name pos:line="37" pos:column="48">NewGuid</name></name><argument_list pos:line="37" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="59">Store</name><op:operator pos:line="37" pos:column="64">.</op:operator><name pos:line="37" pos:column="65">RequestMetadataMock</name><op:operator pos:line="37" pos:column="84">.</op:operator><name pos:line="37" pos:column="85">Object</name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="93">pluginData</name></expr></argument>, <argument><expr><name pos:line="37" pos:column="105">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="117">TimeSpan</name><op:operator pos:line="37" pos:column="125">.</op:operator><name pos:line="37" pos:column="126">FromMilliseconds</name></name><argument_list pos:line="37" pos:column="142">(<argument><expr><lit:literal type="number" pos:line="37" pos:column="143">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">Assert</name><op:operator pos:line="39" pos:column="19">.</op:operator><name pos:line="39" pos:column="20">Equal</name></name><argument_list pos:line="39" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="39" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="39" pos:column="29">Store</name><op:operator pos:line="39" pos:column="34">.</op:operator><name pos:line="39" pos:column="35">GlimpseRequests</name><op:operator pos:line="39" pos:column="50">.</op:operator><name pos:line="39" pos:column="51">Count</name></name><argument_list pos:line="39" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="42" pos:column="9">[<expr><name pos:line="42" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="43" pos:column="9">public</specifier> <name pos:line="43" pos:column="16">void</name></type> <name pos:line="43" pos:column="21">GetGlimpseMetadataById</name><parameter_list pos:line="43" pos:column="43">()</parameter_list>
        <block pos:line="44" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">var</name></type> <name pos:line="45" pos:column="17">requestId</name> <init pos:line="45" pos:column="27">= <expr><call><name><name pos:line="45" pos:column="29">Guid</name><op:operator pos:line="45" pos:column="33">.</op:operator><name pos:line="45" pos:column="34">NewGuid</name></name><argument_list pos:line="45" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">metadata</name> <init pos:line="46" pos:column="26">= <expr><op:operator pos:line="46" pos:column="28">new</op:operator> <call><name pos:line="46" pos:column="32">GlimpseRequest</name><argument_list pos:line="46" pos:column="46">(<argument><expr><name pos:line="46" pos:column="47">requestId</name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="58">Store</name><op:operator pos:line="46" pos:column="63">.</op:operator><name pos:line="46" pos:column="64">RequestMetadataMock</name><op:operator pos:line="46" pos:column="83">.</op:operator><name pos:line="46" pos:column="84">Object</name></name></expr></argument>, <argument><expr><op:operator pos:line="46" pos:column="92">new</op:operator> <call><name><name pos:line="46" pos:column="96">Dictionary</name><argument_list pos:line="46" pos:column="106">&lt;<argument><name pos:line="46" pos:column="107">string</name></argument>, <argument><name pos:line="46" pos:column="115">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="125">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="46" pos:column="129">new</op:operator> <call><name><name pos:line="46" pos:column="133">Dictionary</name><argument_list pos:line="46" pos:column="143">&lt;<argument><name pos:line="46" pos:column="144">string</name></argument>, <argument><name pos:line="46" pos:column="152">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="46" pos:column="162">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="46" pos:column="166">TimeSpan</name><op:operator pos:line="46" pos:column="174">.</op:operator><name pos:line="46" pos:column="175">FromMilliseconds</name></name><argument_list pos:line="46" pos:column="191">(<argument><expr><lit:literal type="number" pos:line="46" pos:column="192">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Store</name><op:operator pos:line="48" pos:column="18">.</op:operator><name pos:line="48" pos:column="19">Save</name></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="50" pos:column="13">var</name></type> <name pos:line="50" pos:column="17">result</name> <init pos:line="50" pos:column="24">= <expr><call><name><name pos:line="50" pos:column="26">Store</name><op:operator pos:line="50" pos:column="31">.</op:operator><name pos:line="50" pos:column="32">GetByRequestId</name></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">requestId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="52" pos:column="13">Assert</name><op:operator pos:line="52" pos:column="19">.</op:operator><name pos:line="52" pos:column="20">Equal</name></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">metadata</name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="55" pos:column="9">[<expr><name pos:line="55" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="56" pos:column="9">public</specifier> <name pos:line="56" pos:column="16">void</name></type> <name pos:line="56" pos:column="21">GetGlimpseMetadataByIdWithMisMatch</name><parameter_list pos:line="56" pos:column="55">()</parameter_list>
        <block pos:line="57" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">var</name></type> <name pos:line="58" pos:column="17">requestId</name> <init pos:line="58" pos:column="27">= <expr><call><name><name pos:line="58" pos:column="29">Guid</name><op:operator pos:line="58" pos:column="33">.</op:operator><name pos:line="58" pos:column="34">Parse</name></name><argument_list pos:line="58" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="40">"00000000-0000-0000-0000-000000000000"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Store</name><op:operator pos:line="60" pos:column="18">.</op:operator><name pos:line="60" pos:column="19">Save</name></name><argument_list pos:line="60" pos:column="23">(<argument><expr><op:operator pos:line="60" pos:column="24">new</op:operator> <call><name pos:line="60" pos:column="28">GlimpseRequest</name><argument_list pos:line="60" pos:column="42">(<argument><expr><call><name><name pos:line="60" pos:column="43">Guid</name><op:operator pos:line="60" pos:column="47">.</op:operator><name pos:line="60" pos:column="48">NewGuid</name></name><argument_list pos:line="60" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="59">Store</name><op:operator pos:line="60" pos:column="64">.</op:operator><name pos:line="60" pos:column="65">RequestMetadataMock</name><op:operator pos:line="60" pos:column="84">.</op:operator><name pos:line="60" pos:column="85">Object</name></name></expr></argument>, <argument><expr><op:operator pos:line="60" pos:column="93">new</op:operator> <call><name><name pos:line="60" pos:column="97">Dictionary</name><argument_list pos:line="60" pos:column="107">&lt;<argument><name pos:line="60" pos:column="108">string</name></argument>, <argument><name pos:line="60" pos:column="116">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="60" pos:column="126">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="60" pos:column="130">new</op:operator> <call><name><name pos:line="60" pos:column="134">Dictionary</name><argument_list pos:line="60" pos:column="144">&lt;<argument><name pos:line="60" pos:column="145">string</name></argument>, <argument><name pos:line="60" pos:column="153">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="60" pos:column="163">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="60" pos:column="167">TimeSpan</name><op:operator pos:line="60" pos:column="175">.</op:operator><name pos:line="60" pos:column="176">FromMilliseconds</name></name><argument_list pos:line="60" pos:column="192">(<argument><expr><lit:literal type="number" pos:line="60" pos:column="193">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">Assert</name><op:operator pos:line="62" pos:column="19">.</op:operator><name pos:line="62" pos:column="20">Null</name></name><argument_list pos:line="62" pos:column="24">(<argument><expr><call><name><name pos:line="62" pos:column="25">Store</name><op:operator pos:line="62" pos:column="30">.</op:operator><name pos:line="62" pos:column="31">GetByRequestId</name></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">requestId</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="65" pos:column="9">[<expr><name pos:line="65" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="66" pos:column="9">public</specifier> <name pos:line="66" pos:column="16">void</name></type> <name pos:line="66" pos:column="21">GetGlimpseMetadataByParentRequestId</name><parameter_list pos:line="66" pos:column="56">()</parameter_list>
        <block pos:line="67" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">var</name></type> <name pos:line="68" pos:column="17">pluginData</name> <init pos:line="68" pos:column="28">= <expr><op:operator pos:line="68" pos:column="30">new</op:operator> <call><name><name pos:line="68" pos:column="34">Dictionary</name><argument_list pos:line="68" pos:column="44">&lt;<argument><name pos:line="68" pos:column="45">string</name></argument>, <argument><name pos:line="68" pos:column="53">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="68" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">Store</name><op:operator pos:line="70" pos:column="18">.</op:operator><name pos:line="70" pos:column="19">Save</name></name><argument_list pos:line="70" pos:column="23">(<argument><expr><op:operator pos:line="70" pos:column="24">new</op:operator> <call><name pos:line="70" pos:column="28">GlimpseRequest</name><argument_list pos:line="70" pos:column="42">(<argument><expr><call><name><name pos:line="70" pos:column="43">Guid</name><op:operator pos:line="70" pos:column="47">.</op:operator><name pos:line="70" pos:column="48">NewGuid</name></name><argument_list pos:line="70" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="59">Store</name><op:operator pos:line="70" pos:column="64">.</op:operator><name pos:line="70" pos:column="65">RequestMetadataMock</name><op:operator pos:line="70" pos:column="84">.</op:operator><name pos:line="70" pos:column="85">Object</name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="93">pluginData</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="105">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="70" pos:column="117">TimeSpan</name><op:operator pos:line="70" pos:column="125">.</op:operator><name pos:line="70" pos:column="126">FromMilliseconds</name></name><argument_list pos:line="70" pos:column="142">(<argument><expr><lit:literal type="number" pos:line="70" pos:column="143">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">Assert</name><op:operator pos:line="72" pos:column="19">.</op:operator><name pos:line="72" pos:column="20">Equal</name></name><argument_list pos:line="72" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="72" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="72" pos:column="29">Store</name><op:operator pos:line="72" pos:column="34">.</op:operator><name pos:line="72" pos:column="35">GetByRequestParentId</name></name><argument_list pos:line="72" pos:column="55">(<argument><expr><call><name><name pos:line="72" pos:column="56">Guid</name><op:operator pos:line="72" pos:column="60">.</op:operator><name pos:line="72" pos:column="61">Parse</name></name><argument_list pos:line="72" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="67">"936DA01F-9ABD-4d9d-80C7-02AF85C822A8"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="107">.</op:operator><call><name pos:line="72" pos:column="108">Count</name><argument_list pos:line="72" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="75" pos:column="9">[<expr><name pos:line="75" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="76" pos:column="9">public</specifier> <name pos:line="76" pos:column="16">void</name></type> <name pos:line="76" pos:column="21">GetGlimpseMetadataByParentRequestIdWithMisMatch</name><parameter_list pos:line="76" pos:column="68">()</parameter_list>
        <block pos:line="77" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="78" pos:column="13">var</name></type> <name pos:line="78" pos:column="17">pluginData</name> <init pos:line="78" pos:column="28">= <expr><op:operator pos:line="78" pos:column="30">new</op:operator> <call><name><name pos:line="78" pos:column="34">Dictionary</name><argument_list pos:line="78" pos:column="44">&lt;<argument><name pos:line="78" pos:column="45">string</name></argument>, <argument><name pos:line="78" pos:column="53">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="78" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">Store</name><op:operator pos:line="80" pos:column="18">.</op:operator><name pos:line="80" pos:column="19">Save</name></name><argument_list pos:line="80" pos:column="23">(<argument><expr><op:operator pos:line="80" pos:column="24">new</op:operator> <call><name pos:line="80" pos:column="28">GlimpseRequest</name><argument_list pos:line="80" pos:column="42">(<argument><expr><call><name><name pos:line="80" pos:column="43">Guid</name><op:operator pos:line="80" pos:column="47">.</op:operator><name pos:line="80" pos:column="48">NewGuid</name></name><argument_list pos:line="80" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="59">Store</name><op:operator pos:line="80" pos:column="64">.</op:operator><name pos:line="80" pos:column="65">RequestMetadataMock</name><op:operator pos:line="80" pos:column="84">.</op:operator><name pos:line="80" pos:column="85">Object</name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="93">pluginData</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="105">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="117">TimeSpan</name><op:operator pos:line="80" pos:column="125">.</op:operator><name pos:line="80" pos:column="126">FromMilliseconds</name></name><argument_list pos:line="80" pos:column="142">(<argument><expr><lit:literal type="number" pos:line="80" pos:column="143">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="82" pos:column="13">Assert</name><op:operator pos:line="82" pos:column="19">.</op:operator><name pos:line="82" pos:column="20">Equal</name></name><argument_list pos:line="82" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="82" pos:column="26">0</lit:literal></expr></argument>,<argument><expr><call><name><name pos:line="82" pos:column="28">Store</name><op:operator pos:line="82" pos:column="33">.</op:operator><name pos:line="82" pos:column="34">GetByRequestParentId</name></name><argument_list pos:line="82" pos:column="54">(<argument><expr><call><name><name pos:line="82" pos:column="55">Guid</name><op:operator pos:line="82" pos:column="59">.</op:operator><name pos:line="82" pos:column="60">Parse</name></name><argument_list pos:line="82" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="66">"00000000-0000-0000-0000-000000000000"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="82" pos:column="106">.</op:operator><call><name pos:line="82" pos:column="107">Count</name><argument_list pos:line="82" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="85" pos:column="9">[<expr><name pos:line="85" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="86" pos:column="9">public</specifier> <name pos:line="86" pos:column="16">void</name></type> <name pos:line="86" pos:column="21">GetTopWithFewerThanRequested</name><parameter_list pos:line="86" pos:column="49">()</parameter_list>
        <block pos:line="87" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="88" pos:column="13">var</name></type> <name pos:line="88" pos:column="17">pluginData</name> <init pos:line="88" pos:column="28">= <expr><op:operator pos:line="88" pos:column="30">new</op:operator> <call><name><name pos:line="88" pos:column="34">Dictionary</name><argument_list pos:line="88" pos:column="44">&lt;<argument><name pos:line="88" pos:column="45">string</name></argument>, <argument><name pos:line="88" pos:column="53">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="88" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>


            <decl_stmt><decl><type><name pos:line="91" pos:column="13">var</name></type> <name pos:line="91" pos:column="17">metadata1</name> <init pos:line="91" pos:column="27">= <expr><op:operator pos:line="91" pos:column="29">new</op:operator> <call><name pos:line="91" pos:column="33">GlimpseRequest</name><argument_list pos:line="91" pos:column="47">(<argument><expr><call><name><name pos:line="91" pos:column="48">Guid</name><op:operator pos:line="91" pos:column="52">.</op:operator><name pos:line="91" pos:column="53">NewGuid</name></name><argument_list pos:line="91" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="64">Store</name><op:operator pos:line="91" pos:column="69">.</op:operator><name pos:line="91" pos:column="70">RequestMetadataMock</name><op:operator pos:line="91" pos:column="89">.</op:operator><name pos:line="91" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="91" pos:column="122">TimeSpan</name><op:operator pos:line="91" pos:column="130">.</op:operator><name pos:line="91" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="91" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="91" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="92" pos:column="13">var</name></type> <name pos:line="92" pos:column="17">metadata2</name> <init pos:line="92" pos:column="27">= <expr><op:operator pos:line="92" pos:column="29">new</op:operator> <call><name pos:line="92" pos:column="33">GlimpseRequest</name><argument_list pos:line="92" pos:column="47">(<argument><expr><call><name><name pos:line="92" pos:column="48">Guid</name><op:operator pos:line="92" pos:column="52">.</op:operator><name pos:line="92" pos:column="53">NewGuid</name></name><argument_list pos:line="92" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="64">Store</name><op:operator pos:line="92" pos:column="69">.</op:operator><name pos:line="92" pos:column="70">RequestMetadataMock</name><op:operator pos:line="92" pos:column="89">.</op:operator><name pos:line="92" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="92" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="92" pos:column="122">TimeSpan</name><op:operator pos:line="92" pos:column="130">.</op:operator><name pos:line="92" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="92" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="92" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="93" pos:column="13">var</name></type> <name pos:line="93" pos:column="17">metadata3</name> <init pos:line="93" pos:column="27">= <expr><op:operator pos:line="93" pos:column="29">new</op:operator> <call><name pos:line="93" pos:column="33">GlimpseRequest</name><argument_list pos:line="93" pos:column="47">(<argument><expr><call><name><name pos:line="93" pos:column="48">Guid</name><op:operator pos:line="93" pos:column="52">.</op:operator><name pos:line="93" pos:column="53">NewGuid</name></name><argument_list pos:line="93" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="64">Store</name><op:operator pos:line="93" pos:column="69">.</op:operator><name pos:line="93" pos:column="70">RequestMetadataMock</name><op:operator pos:line="93" pos:column="89">.</op:operator><name pos:line="93" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="93" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="93" pos:column="122">TimeSpan</name><op:operator pos:line="93" pos:column="130">.</op:operator><name pos:line="93" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="93" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="93" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="94" pos:column="13">var</name></type> <name pos:line="94" pos:column="17">metadata4</name> <init pos:line="94" pos:column="27">= <expr><op:operator pos:line="94" pos:column="29">new</op:operator> <call><name pos:line="94" pos:column="33">GlimpseRequest</name><argument_list pos:line="94" pos:column="47">(<argument><expr><call><name><name pos:line="94" pos:column="48">Guid</name><op:operator pos:line="94" pos:column="52">.</op:operator><name pos:line="94" pos:column="53">NewGuid</name></name><argument_list pos:line="94" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="64">Store</name><op:operator pos:line="94" pos:column="69">.</op:operator><name pos:line="94" pos:column="70">RequestMetadataMock</name><op:operator pos:line="94" pos:column="89">.</op:operator><name pos:line="94" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="94" pos:column="122">TimeSpan</name><op:operator pos:line="94" pos:column="130">.</op:operator><name pos:line="94" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="94" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="94" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="95" pos:column="13">var</name></type> <name pos:line="95" pos:column="17">metadata5</name> <init pos:line="95" pos:column="27">= <expr><op:operator pos:line="95" pos:column="29">new</op:operator> <call><name pos:line="95" pos:column="33">GlimpseRequest</name><argument_list pos:line="95" pos:column="47">(<argument><expr><call><name><name pos:line="95" pos:column="48">Guid</name><op:operator pos:line="95" pos:column="52">.</op:operator><name pos:line="95" pos:column="53">NewGuid</name></name><argument_list pos:line="95" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="64">Store</name><op:operator pos:line="95" pos:column="69">.</op:operator><name pos:line="95" pos:column="70">RequestMetadataMock</name><op:operator pos:line="95" pos:column="89">.</op:operator><name pos:line="95" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="95" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="95" pos:column="122">TimeSpan</name><op:operator pos:line="95" pos:column="130">.</op:operator><name pos:line="95" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="95" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="95" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">Store</name><op:operator pos:line="97" pos:column="18">.</op:operator><name pos:line="97" pos:column="19">Save</name></name><argument_list pos:line="97" pos:column="23">(<argument><expr><name pos:line="97" pos:column="24">metadata1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="98" pos:column="13">Store</name><op:operator pos:line="98" pos:column="18">.</op:operator><name pos:line="98" pos:column="19">Save</name></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">metadata2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="99" pos:column="13">Store</name><op:operator pos:line="99" pos:column="18">.</op:operator><name pos:line="99" pos:column="19">Save</name></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">metadata3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">Store</name><op:operator pos:line="100" pos:column="18">.</op:operator><name pos:line="100" pos:column="19">Save</name></name><argument_list pos:line="100" pos:column="23">(<argument><expr><name pos:line="100" pos:column="24">metadata4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="101" pos:column="13">Store</name><op:operator pos:line="101" pos:column="18">.</op:operator><name pos:line="101" pos:column="19">Save</name></name><argument_list pos:line="101" pos:column="23">(<argument><expr><name pos:line="101" pos:column="24">metadata5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="103" pos:column="13">var</name></type> <name pos:line="103" pos:column="17">result</name> <init pos:line="103" pos:column="24">= <expr><call><name><name pos:line="103" pos:column="26">Store</name><op:operator pos:line="103" pos:column="31">.</op:operator><name pos:line="103" pos:column="32">GetTop</name></name><argument_list pos:line="103" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="103" pos:column="39">10</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="104" pos:column="13">Assert</name><op:operator pos:line="104" pos:column="19">.</op:operator><name pos:line="104" pos:column="20">Equal</name></name><argument_list pos:line="104" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="104" pos:column="26">5</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="104" pos:column="29">result</name><op:operator pos:line="104" pos:column="35">.</op:operator><name pos:line="104" pos:column="36">Count</name></name><argument_list pos:line="104" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">Assert</name><op:operator pos:line="105" pos:column="19">.</op:operator><name pos:line="105" pos:column="20">Equal</name></name><argument_list pos:line="105" pos:column="25">(<argument><expr><name pos:line="105" pos:column="26">metadata1</name></expr></argument>, <argument><expr><call><name><name pos:line="105" pos:column="37">result</name><op:operator pos:line="105" pos:column="43">.</op:operator><name pos:line="105" pos:column="44">First</name></name><argument_list pos:line="105" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="108" pos:column="9">[<expr><name pos:line="108" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="109" pos:column="9">public</specifier> <name pos:line="109" pos:column="16">void</name></type> <name pos:line="109" pos:column="21">GetTopWithMoreThanRequested</name><parameter_list pos:line="109" pos:column="48">()</parameter_list>
        <block pos:line="110" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">var</name></type> <name pos:line="111" pos:column="17">pluginData</name> <init pos:line="111" pos:column="28">= <expr><op:operator pos:line="111" pos:column="30">new</op:operator> <call><name><name pos:line="111" pos:column="34">Dictionary</name><argument_list pos:line="111" pos:column="44">&lt;<argument><name pos:line="111" pos:column="45">string</name></argument>, <argument><name pos:line="111" pos:column="53">TabResult</name></argument>&gt;</argument_list></name><argument_list pos:line="111" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>


            <decl_stmt><decl><type><name pos:line="114" pos:column="13">var</name></type> <name pos:line="114" pos:column="17">metadata1</name> <init pos:line="114" pos:column="27">= <expr><op:operator pos:line="114" pos:column="29">new</op:operator> <call><name pos:line="114" pos:column="33">GlimpseRequest</name><argument_list pos:line="114" pos:column="47">(<argument><expr><call><name><name pos:line="114" pos:column="48">Guid</name><op:operator pos:line="114" pos:column="52">.</op:operator><name pos:line="114" pos:column="53">NewGuid</name></name><argument_list pos:line="114" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="64">Store</name><op:operator pos:line="114" pos:column="69">.</op:operator><name pos:line="114" pos:column="70">RequestMetadataMock</name><op:operator pos:line="114" pos:column="89">.</op:operator><name pos:line="114" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="114" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="114" pos:column="122">TimeSpan</name><op:operator pos:line="114" pos:column="130">.</op:operator><name pos:line="114" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="114" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="114" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">var</name></type> <name pos:line="115" pos:column="17">metadata2</name> <init pos:line="115" pos:column="27">= <expr><op:operator pos:line="115" pos:column="29">new</op:operator> <call><name pos:line="115" pos:column="33">GlimpseRequest</name><argument_list pos:line="115" pos:column="47">(<argument><expr><call><name><name pos:line="115" pos:column="48">Guid</name><op:operator pos:line="115" pos:column="52">.</op:operator><name pos:line="115" pos:column="53">NewGuid</name></name><argument_list pos:line="115" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="64">Store</name><op:operator pos:line="115" pos:column="69">.</op:operator><name pos:line="115" pos:column="70">RequestMetadataMock</name><op:operator pos:line="115" pos:column="89">.</op:operator><name pos:line="115" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="115" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="115" pos:column="122">TimeSpan</name><op:operator pos:line="115" pos:column="130">.</op:operator><name pos:line="115" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="115" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="115" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="116" pos:column="13">var</name></type> <name pos:line="116" pos:column="17">metadata3</name> <init pos:line="116" pos:column="27">= <expr><op:operator pos:line="116" pos:column="29">new</op:operator> <call><name pos:line="116" pos:column="33">GlimpseRequest</name><argument_list pos:line="116" pos:column="47">(<argument><expr><call><name><name pos:line="116" pos:column="48">Guid</name><op:operator pos:line="116" pos:column="52">.</op:operator><name pos:line="116" pos:column="53">NewGuid</name></name><argument_list pos:line="116" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="64">Store</name><op:operator pos:line="116" pos:column="69">.</op:operator><name pos:line="116" pos:column="70">RequestMetadataMock</name><op:operator pos:line="116" pos:column="89">.</op:operator><name pos:line="116" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="116" pos:column="122">TimeSpan</name><op:operator pos:line="116" pos:column="130">.</op:operator><name pos:line="116" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="116" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="116" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">var</name></type> <name pos:line="117" pos:column="17">metadata4</name> <init pos:line="117" pos:column="27">= <expr><op:operator pos:line="117" pos:column="29">new</op:operator> <call><name pos:line="117" pos:column="33">GlimpseRequest</name><argument_list pos:line="117" pos:column="47">(<argument><expr><call><name><name pos:line="117" pos:column="48">Guid</name><op:operator pos:line="117" pos:column="52">.</op:operator><name pos:line="117" pos:column="53">NewGuid</name></name><argument_list pos:line="117" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="64">Store</name><op:operator pos:line="117" pos:column="69">.</op:operator><name pos:line="117" pos:column="70">RequestMetadataMock</name><op:operator pos:line="117" pos:column="89">.</op:operator><name pos:line="117" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="117" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="122">TimeSpan</name><op:operator pos:line="117" pos:column="130">.</op:operator><name pos:line="117" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="117" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="117" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="118" pos:column="13">var</name></type> <name pos:line="118" pos:column="17">metadata5</name> <init pos:line="118" pos:column="27">= <expr><op:operator pos:line="118" pos:column="29">new</op:operator> <call><name pos:line="118" pos:column="33">GlimpseRequest</name><argument_list pos:line="118" pos:column="47">(<argument><expr><call><name><name pos:line="118" pos:column="48">Guid</name><op:operator pos:line="118" pos:column="52">.</op:operator><name pos:line="118" pos:column="53">NewGuid</name></name><argument_list pos:line="118" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="64">Store</name><op:operator pos:line="118" pos:column="69">.</op:operator><name pos:line="118" pos:column="70">RequestMetadataMock</name><op:operator pos:line="118" pos:column="89">.</op:operator><name pos:line="118" pos:column="90">Object</name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="98">pluginData</name></expr></argument>, <argument><expr><name pos:line="118" pos:column="110">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="118" pos:column="122">TimeSpan</name><op:operator pos:line="118" pos:column="130">.</op:operator><name pos:line="118" pos:column="131">FromMilliseconds</name></name><argument_list pos:line="118" pos:column="147">(<argument><expr><lit:literal type="number" pos:line="118" pos:column="148">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="120" pos:column="13">Store</name><op:operator pos:line="120" pos:column="18">.</op:operator><name pos:line="120" pos:column="19">Save</name></name><argument_list pos:line="120" pos:column="23">(<argument><expr><name pos:line="120" pos:column="24">metadata1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="121" pos:column="13">Store</name><op:operator pos:line="121" pos:column="18">.</op:operator><name pos:line="121" pos:column="19">Save</name></name><argument_list pos:line="121" pos:column="23">(<argument><expr><name pos:line="121" pos:column="24">metadata2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="122" pos:column="13">Store</name><op:operator pos:line="122" pos:column="18">.</op:operator><name pos:line="122" pos:column="19">Save</name></name><argument_list pos:line="122" pos:column="23">(<argument><expr><name pos:line="122" pos:column="24">metadata3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="123" pos:column="13">Store</name><op:operator pos:line="123" pos:column="18">.</op:operator><name pos:line="123" pos:column="19">Save</name></name><argument_list pos:line="123" pos:column="23">(<argument><expr><name pos:line="123" pos:column="24">metadata4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="124" pos:column="13">Store</name><op:operator pos:line="124" pos:column="18">.</op:operator><name pos:line="124" pos:column="19">Save</name></name><argument_list pos:line="124" pos:column="23">(<argument><expr><name pos:line="124" pos:column="24">metadata5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="126" pos:column="13">var</name></type> <name pos:line="126" pos:column="17">result</name> <init pos:line="126" pos:column="24">= <expr><call><name><name pos:line="126" pos:column="26">Store</name><op:operator pos:line="126" pos:column="31">.</op:operator><name pos:line="126" pos:column="32">GetTop</name></name><argument_list pos:line="126" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="126" pos:column="39">3</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">Assert</name><op:operator pos:line="127" pos:column="19">.</op:operator><name pos:line="127" pos:column="20">Equal</name></name><argument_list pos:line="127" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="26">3</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="127" pos:column="29">result</name><op:operator pos:line="127" pos:column="35">.</op:operator><name pos:line="127" pos:column="36">Count</name></name><argument_list pos:line="127" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="128" pos:column="13">Assert</name><op:operator pos:line="128" pos:column="19">.</op:operator><name pos:line="128" pos:column="20">Equal</name></name><argument_list pos:line="128" pos:column="25">(<argument><expr><name pos:line="128" pos:column="26">metadata1</name></expr></argument>, <argument><expr><call><name><name pos:line="128" pos:column="37">result</name><op:operator pos:line="128" pos:column="43">.</op:operator><name pos:line="128" pos:column="44">First</name></name><argument_list pos:line="128" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="131" pos:column="9">[<expr><name pos:line="131" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="132" pos:column="9">public</specifier> <name pos:line="132" pos:column="16">void</name></type> <name pos:line="132" pos:column="21">GetTopWithNoResults</name><parameter_list pos:line="132" pos:column="40">()</parameter_list>
        <block pos:line="133" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="134" pos:column="13">var</name></type> <name pos:line="134" pos:column="17">result</name> <init pos:line="134" pos:column="24">= <expr><call><name><name pos:line="134" pos:column="26">Store</name><op:operator pos:line="134" pos:column="31">.</op:operator><name pos:line="134" pos:column="32">GetTop</name></name><argument_list pos:line="134" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="134" pos:column="39">3</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">Assert</name><op:operator pos:line="135" pos:column="19">.</op:operator><name pos:line="135" pos:column="20">Equal</name></name><argument_list pos:line="135" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="135" pos:column="26">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="135" pos:column="29">result</name><op:operator pos:line="135" pos:column="35">.</op:operator><name pos:line="135" pos:column="36">Count</name></name><argument_list pos:line="135" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="138" pos:column="9">[<expr><name pos:line="138" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="139" pos:column="9">public</specifier> <name pos:line="139" pos:column="16">void</name></type> <name pos:line="139" pos:column="21">ThrowWithEmptyTabKey</name><parameter_list pos:line="139" pos:column="41">()</parameter_list>
        <block pos:line="140" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="141" pos:column="13">Assert</name><op:operator pos:line="141" pos:column="19">.</op:operator><name><name pos:line="141" pos:column="20">Throws</name><argument_list pos:line="141" pos:column="26">&lt;<argument><name pos:line="141" pos:column="27">ArgumentException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="141" pos:column="45">(<argument><expr><lambda><parameter_list pos:line="141" pos:column="46">()</parameter_list><op:operator pos:line="141" pos:column="48">=&gt;</op:operator><call><name><name pos:line="141" pos:column="50">Store</name><op:operator pos:line="141" pos:column="55">.</op:operator><name pos:line="141" pos:column="56">GetByRequestIdAndTabKey</name></name><argument_list pos:line="141" pos:column="79">(<argument><expr><call><name><name pos:line="141" pos:column="80">Guid</name><op:operator pos:line="141" pos:column="84">.</op:operator><name pos:line="141" pos:column="85">NewGuid</name></name><argument_list pos:line="141" pos:column="92">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="96">string</name><op:operator pos:line="141" pos:column="102">.</op:operator><name pos:line="141" pos:column="103">Empty</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="144" pos:column="9">[<expr><name pos:line="144" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="145" pos:column="9">public</specifier> <name pos:line="145" pos:column="16">void</name></type> <name pos:line="145" pos:column="21">GetOnePluginsData</name><parameter_list pos:line="145" pos:column="38">()</parameter_list>
        <block pos:line="146" pos:column="9">{

            <decl_stmt><decl><type><name pos:line="148" pos:column="13">var</name></type> <name pos:line="148" pos:column="17">key</name> <init pos:line="148" pos:column="21">= <expr><lit:literal type="string" pos:line="148" pos:column="23">"theKey"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="149" pos:column="13">var</name></type> <name pos:line="149" pos:column="17">value</name> <init pos:line="149" pos:column="23">= <expr><op:operator pos:line="149" pos:column="25">new</op:operator> <call><name pos:line="149" pos:column="29">TabResult</name><argument_list pos:line="149" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="39">"A Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="49">5</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="150" pos:column="13">var</name></type> <name pos:line="150" pos:column="17">pluginData</name> <init pos:line="150" pos:column="28">= <expr><op:operator pos:line="150" pos:column="30">new</op:operator> <name><name pos:line="150" pos:column="34">Dictionary</name><argument_list pos:line="150" pos:column="44">&lt;<argument><name pos:line="150" pos:column="45">string</name></argument>, <argument><name pos:line="150" pos:column="53">TabResult</name></argument>&gt;</argument_list></name>
                                 <block pos:line="151" pos:column="34">{
                                     <expr><block pos:line="152" pos:column="38">{<expr><name pos:line="152" pos:column="39">key</name></expr>, <expr><name pos:line="152" pos:column="44">value</name></expr>}</block></expr>
                                 }</block></expr></init></decl>;</decl_stmt>


            <decl_stmt><decl><type><name pos:line="156" pos:column="13">var</name></type> <name pos:line="156" pos:column="17">id</name> <init pos:line="156" pos:column="20">= <expr><call><name><name pos:line="156" pos:column="22">Guid</name><op:operator pos:line="156" pos:column="26">.</op:operator><name pos:line="156" pos:column="27">NewGuid</name></name><argument_list pos:line="156" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="157" pos:column="13">var</name></type> <name pos:line="157" pos:column="17">metadata</name> <init pos:line="157" pos:column="26">= <expr><op:operator pos:line="157" pos:column="28">new</op:operator> <call><name pos:line="157" pos:column="32">GlimpseRequest</name><argument_list pos:line="157" pos:column="46">(<argument><expr><name pos:line="157" pos:column="47">id</name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="51">Store</name><op:operator pos:line="157" pos:column="56">.</op:operator><name pos:line="157" pos:column="57">RequestMetadataMock</name><op:operator pos:line="157" pos:column="76">.</op:operator><name pos:line="157" pos:column="77">Object</name></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="85">pluginData</name></expr></argument>, <argument><expr><name pos:line="157" pos:column="97">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="157" pos:column="109">TimeSpan</name><op:operator pos:line="157" pos:column="117">.</op:operator><name pos:line="157" pos:column="118">FromMilliseconds</name></name><argument_list pos:line="157" pos:column="134">(<argument><expr><lit:literal type="number" pos:line="157" pos:column="135">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="159" pos:column="13">Store</name><op:operator pos:line="159" pos:column="18">.</op:operator><name pos:line="159" pos:column="19">Save</name></name><argument_list pos:line="159" pos:column="23">(<argument><expr><name pos:line="159" pos:column="24">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="161" pos:column="13">var</name></type> <name pos:line="161" pos:column="17">result</name> <init pos:line="161" pos:column="24">= <expr><call><name><name pos:line="161" pos:column="26">Store</name><op:operator pos:line="161" pos:column="31">.</op:operator><name pos:line="161" pos:column="32">GetByRequestIdAndTabKey</name></name><argument_list pos:line="161" pos:column="55">(<argument><expr><name pos:line="161" pos:column="56">id</name></expr></argument>, <argument><expr><name pos:line="161" pos:column="60">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="162" pos:column="13">Assert</name><op:operator pos:line="162" pos:column="19">.</op:operator><name pos:line="162" pos:column="20">Equal</name></name><argument_list pos:line="162" pos:column="25">(<argument><expr><name pos:line="162" pos:column="26">value</name></expr></argument>, <argument><expr><name pos:line="162" pos:column="33">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="165" pos:column="9">[<expr><name pos:line="165" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="166" pos:column="9">public</specifier> <name pos:line="166" pos:column="16">void</name></type> <name pos:line="166" pos:column="21">GetOnePluginsDataReturnsNullWithMisMatchKey</name><parameter_list pos:line="166" pos:column="64">()</parameter_list>
        <block pos:line="167" pos:column="9">{

            <decl_stmt><decl><type><name pos:line="169" pos:column="13">var</name></type> <name pos:line="169" pos:column="17">key</name> <init pos:line="169" pos:column="21">= <expr><lit:literal type="string" pos:line="169" pos:column="23">"theKey"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="170" pos:column="13">var</name></type> <name pos:line="170" pos:column="17">value</name> <init pos:line="170" pos:column="23">= <expr><op:operator pos:line="170" pos:column="25">new</op:operator> <call><name pos:line="170" pos:column="29">TabResult</name><argument_list pos:line="170" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="39">"A Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="170" pos:column="49">5</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="171" pos:column="13">var</name></type> <name pos:line="171" pos:column="17">pluginData</name> <init pos:line="171" pos:column="28">= <expr><op:operator pos:line="171" pos:column="30">new</op:operator> <name><name pos:line="171" pos:column="34">Dictionary</name><argument_list pos:line="171" pos:column="44">&lt;<argument><name pos:line="171" pos:column="45">string</name></argument>, <argument><name pos:line="171" pos:column="53">TabResult</name></argument>&gt;</argument_list></name>
                                 <block pos:line="172" pos:column="34">{
                                     <expr><block pos:line="173" pos:column="38">{<expr><name pos:line="173" pos:column="39">key</name></expr>,<expr><name pos:line="173" pos:column="43">value</name></expr>}</block></expr>
                                 }</block></expr></init></decl>;</decl_stmt>


            <decl_stmt><decl><type><name pos:line="177" pos:column="13">var</name></type> <name pos:line="177" pos:column="17">id</name> <init pos:line="177" pos:column="20">= <expr><call><name><name pos:line="177" pos:column="22">Guid</name><op:operator pos:line="177" pos:column="26">.</op:operator><name pos:line="177" pos:column="27">NewGuid</name></name><argument_list pos:line="177" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="178" pos:column="13">var</name></type> <name pos:line="178" pos:column="17">metadata</name> <init pos:line="178" pos:column="26">= <expr><op:operator pos:line="178" pos:column="28">new</op:operator> <call><name pos:line="178" pos:column="32">GlimpseRequest</name><argument_list pos:line="178" pos:column="46">(<argument><expr><name pos:line="178" pos:column="47">id</name></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="51">Store</name><op:operator pos:line="178" pos:column="56">.</op:operator><name pos:line="178" pos:column="57">RequestMetadataMock</name><op:operator pos:line="178" pos:column="76">.</op:operator><name pos:line="178" pos:column="77">Object</name></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="85">pluginData</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="97">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="178" pos:column="109">TimeSpan</name><op:operator pos:line="178" pos:column="117">.</op:operator><name pos:line="178" pos:column="118">FromMilliseconds</name></name><argument_list pos:line="178" pos:column="134">(<argument><expr><lit:literal type="number" pos:line="178" pos:column="135">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="180" pos:column="13">Store</name><op:operator pos:line="180" pos:column="18">.</op:operator><name pos:line="180" pos:column="19">Save</name></name><argument_list pos:line="180" pos:column="23">(<argument><expr><name pos:line="180" pos:column="24">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="182" pos:column="13">var</name></type> <name pos:line="182" pos:column="17">result</name> <init pos:line="182" pos:column="24">= <expr><call><name><name pos:line="182" pos:column="26">Store</name><op:operator pos:line="182" pos:column="31">.</op:operator><name pos:line="182" pos:column="32">GetByRequestIdAndTabKey</name></name><argument_list pos:line="182" pos:column="55">(<argument><expr><name pos:line="182" pos:column="56">id</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="182" pos:column="60">"wrongKey"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="183" pos:column="13">Assert</name><op:operator pos:line="183" pos:column="19">.</op:operator><name pos:line="183" pos:column="20">Null</name></name><argument_list pos:line="183" pos:column="24">(<argument><expr><name pos:line="183" pos:column="25">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="186" pos:column="9">[<expr><name pos:line="186" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="187" pos:column="9">public</specifier> <name pos:line="187" pos:column="16">void</name></type> <name pos:line="187" pos:column="21">GetOnePluginsDataReturnsNullWithMisMatchId</name><parameter_list pos:line="187" pos:column="63">()</parameter_list>
        <block pos:line="188" pos:column="9">{

            <decl_stmt><decl><type><name pos:line="190" pos:column="13">var</name></type> <name pos:line="190" pos:column="17">key</name> <init pos:line="190" pos:column="21">= <expr><lit:literal type="string" pos:line="190" pos:column="23">"theKey"</lit:literal></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="191" pos:column="13">var</name></type> <name pos:line="191" pos:column="17">value</name> <init pos:line="191" pos:column="23">= <expr><op:operator pos:line="191" pos:column="25">new</op:operator> <call><name pos:line="191" pos:column="29">TabResult</name><argument_list pos:line="191" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="191" pos:column="39">"A Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="191" pos:column="49">5</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="192" pos:column="13">var</name></type> <name pos:line="192" pos:column="17">pluginData</name> <init pos:line="192" pos:column="28">= <expr><op:operator pos:line="192" pos:column="30">new</op:operator> <name><name pos:line="192" pos:column="34">Dictionary</name><argument_list pos:line="192" pos:column="44">&lt;<argument><name pos:line="192" pos:column="45">string</name></argument>, <argument><name pos:line="192" pos:column="53">TabResult</name></argument>&gt;</argument_list></name>
                                 <block pos:line="193" pos:column="34">{
                                     <expr><block pos:line="194" pos:column="38">{<expr><name pos:line="194" pos:column="39">key</name></expr>,<expr><name pos:line="194" pos:column="43">value</name></expr>}</block></expr>
                                 }</block></expr></init></decl>;</decl_stmt>


            <decl_stmt><decl><type><name pos:line="198" pos:column="13">var</name></type> <name pos:line="198" pos:column="17">id</name> <init pos:line="198" pos:column="20">= <expr><call><name><name pos:line="198" pos:column="22">Guid</name><op:operator pos:line="198" pos:column="26">.</op:operator><name pos:line="198" pos:column="27">NewGuid</name></name><argument_list pos:line="198" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="199" pos:column="13">var</name></type> <name pos:line="199" pos:column="17">metadata</name> <init pos:line="199" pos:column="26">= <expr><op:operator pos:line="199" pos:column="28">new</op:operator> <call><name pos:line="199" pos:column="32">GlimpseRequest</name><argument_list pos:line="199" pos:column="46">(<argument><expr><name pos:line="199" pos:column="47">id</name></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="51">Store</name><op:operator pos:line="199" pos:column="56">.</op:operator><name pos:line="199" pos:column="57">RequestMetadataMock</name><op:operator pos:line="199" pos:column="76">.</op:operator><name pos:line="199" pos:column="77">Object</name></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="85">pluginData</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="97">pluginData</name></expr></argument>, <argument><expr><call><name><name pos:line="199" pos:column="109">TimeSpan</name><op:operator pos:line="199" pos:column="117">.</op:operator><name pos:line="199" pos:column="118">FromMilliseconds</name></name><argument_list pos:line="199" pos:column="134">(<argument><expr><lit:literal type="number" pos:line="199" pos:column="135">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="201" pos:column="13">Store</name><op:operator pos:line="201" pos:column="18">.</op:operator><name pos:line="201" pos:column="19">Save</name></name><argument_list pos:line="201" pos:column="23">(<argument><expr><name pos:line="201" pos:column="24">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="203" pos:column="13">var</name></type> <name pos:line="203" pos:column="17">result</name> <init pos:line="203" pos:column="24">= <expr><call><name><name pos:line="203" pos:column="26">Store</name><op:operator pos:line="203" pos:column="31">.</op:operator><name pos:line="203" pos:column="32">GetByRequestIdAndTabKey</name></name><argument_list pos:line="203" pos:column="55">(<argument><expr><call><name><name pos:line="203" pos:column="56">Guid</name><op:operator pos:line="203" pos:column="60">.</op:operator><name pos:line="203" pos:column="61">Parse</name></name><argument_list pos:line="203" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="203" pos:column="67">"00000000-0000-0000-0000-000000000000"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="203" pos:column="108">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="204" pos:column="13">Assert</name><op:operator pos:line="204" pos:column="19">.</op:operator><name pos:line="204" pos:column="20">Null</name></name><argument_list pos:line="204" pos:column="24">(<argument><expr><name pos:line="204" pos:column="25">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
