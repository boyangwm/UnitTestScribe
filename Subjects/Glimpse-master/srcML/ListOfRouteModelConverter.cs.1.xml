<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\SerializationConverter\ListOfRouteModelConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">AspNet</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">Model</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Tab</name><op:operator pos:line="6" pos:column="23">.</op:operator><name pos:line="6" pos:column="24">Assist</name></name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">AspNet</name><op:operator pos:line="8" pos:column="25">.</op:operator><name pos:line="8" pos:column="26">SerializationConverter</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">ListOfRouteModelConverter</name> <super pos:line="10" pos:column="44">: <name><name pos:line="10" pos:column="46">SerializationConverter</name><argument_list pos:line="10" pos:column="68">&lt;<argument><name><name pos:line="10" pos:column="69">List</name><argument_list pos:line="10" pos:column="73">&lt;<argument><name pos:line="10" pos:column="74">RouteModel</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super>
    <block pos:line="11" pos:column="5">{
        <function><type><specifier pos:line="12" pos:column="9">public</specifier> <specifier pos:line="12" pos:column="16">override</specifier> <name pos:line="12" pos:column="25">object</name></type> <name pos:line="12" pos:column="32">Convert</name><parameter_list pos:line="12" pos:column="39">(<param><decl><type><name><name pos:line="12" pos:column="40">List</name><argument_list pos:line="12" pos:column="44">&lt;<argument><name pos:line="12" pos:column="45">RouteModel</name></argument>&gt;</argument_list></name></type> <name pos:line="12" pos:column="57">routes</name></decl></param>)</parameter_list>
        <block pos:line="13" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">var</name></type> <name pos:line="14" pos:column="17">section</name> <init pos:line="14" pos:column="25">= <expr><op:operator pos:line="14" pos:column="27">new</op:operator> <call><name pos:line="14" pos:column="31">TabSection</name><argument_list pos:line="14" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="14" pos:column="42">"Area"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="50">"Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="58">"Url"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="65">"Data"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="73">"Constraints"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="88">"DataTokens"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="14" pos:column="102">"Duration"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="15" pos:column="13">foreach (<init><decl><type><name pos:line="15" pos:column="22">var</name></type> <name pos:line="15" pos:column="26">item</name> <range pos:line="15" pos:column="31">in <expr><name pos:line="15" pos:column="34">routes</name></expr></range></decl></init>)
            <block pos:line="16" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="17" pos:column="17">section</name><op:operator pos:line="17" pos:column="24">.</op:operator><name pos:line="17" pos:column="25">AddRow</name></name><argument_list pos:line="17" pos:column="31">()</argument_list></call><op:operator pos:line="17" pos:column="33">.</op:operator><call><name pos:line="17" pos:column="34">Column</name><argument_list pos:line="17" pos:column="40">(<argument><expr><name><name pos:line="17" pos:column="41">item</name><op:operator pos:line="17" pos:column="45">.</op:operator><name pos:line="17" pos:column="46">Area</name></name></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="51">.</op:operator><call><name pos:line="17" pos:column="52">Column</name><argument_list pos:line="17" pos:column="58">(<argument><expr><name><name pos:line="17" pos:column="59">item</name><op:operator pos:line="17" pos:column="63">.</op:operator><name pos:line="17" pos:column="64">Name</name></name></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="69">.</op:operator><call><name pos:line="17" pos:column="70">Column</name><argument_list pos:line="17" pos:column="76">(<argument><expr><name><name pos:line="17" pos:column="77">item</name><op:operator pos:line="17" pos:column="81">.</op:operator><name pos:line="17" pos:column="82">Url</name></name></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="86">.</op:operator><call><name pos:line="17" pos:column="87">Column</name><argument_list pos:line="17" pos:column="93">(<argument><expr><call><name pos:line="17" pos:column="94">GetRouteData</name><argument_list pos:line="17" pos:column="106">(<argument><expr><name><name pos:line="17" pos:column="107">item</name><op:operator pos:line="17" pos:column="111">.</op:operator><name pos:line="17" pos:column="112">RouteData</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="123">.</op:operator><call><name pos:line="17" pos:column="124">Column</name><argument_list pos:line="17" pos:column="130">(<argument><expr><call><name pos:line="17" pos:column="131">GetConstraintData</name><argument_list pos:line="17" pos:column="148">(<argument><expr><name><name pos:line="17" pos:column="149">item</name><op:operator pos:line="17" pos:column="153">.</op:operator><name pos:line="17" pos:column="154">Constraints</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="167">.</op:operator><call><name pos:line="17" pos:column="168">Column</name><argument_list pos:line="17" pos:column="174">(<argument><expr><call><name pos:line="17" pos:column="175">GetDataTokens</name><argument_list pos:line="17" pos:column="188">(<argument><expr><name><name pos:line="17" pos:column="189">item</name><op:operator pos:line="17" pos:column="193">.</op:operator><name pos:line="17" pos:column="194">DataTokens</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="206">.</op:operator><call><name pos:line="17" pos:column="207">Column</name><argument_list pos:line="17" pos:column="213">(<argument><expr><name><name pos:line="17" pos:column="214">item</name><op:operator pos:line="17" pos:column="218">.</op:operator><name pos:line="17" pos:column="219">Duration</name></name></expr></argument>)</argument_list></call><op:operator pos:line="17" pos:column="228">.</op:operator><call><name pos:line="17" pos:column="229">SelectedIf</name><argument_list pos:line="17" pos:column="239">(<argument><expr><name><name pos:line="17" pos:column="240">item</name><op:operator pos:line="17" pos:column="244">.</op:operator><name pos:line="17" pos:column="245">IsMatch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="20" pos:column="13">return <expr><call><name><name pos:line="20" pos:column="20">section</name><op:operator pos:line="20" pos:column="27">.</op:operator><name pos:line="20" pos:column="28">Build</name></name><argument_list pos:line="20" pos:column="33">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="23" pos:column="9">private</specifier> <specifier pos:line="23" pos:column="17">static</specifier> <name pos:line="23" pos:column="24">object</name></type> <name pos:line="23" pos:column="31">GetDataTokens</name><parameter_list pos:line="23" pos:column="44">(<param><decl><type><name><name pos:line="23" pos:column="45">IDictionary</name><argument_list pos:line="23" pos:column="56">&lt;<argument><name pos:line="23" pos:column="57">string</name></argument>, <argument><name pos:line="23" pos:column="65">object</name></argument>&gt;</argument_list></name></type> <name pos:line="23" pos:column="73">dataTokens</name></decl></param>)</parameter_list>
        <block pos:line="24" pos:column="9">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">dataTokens</name> <op:operator pos:line="25" pos:column="28">==</op:operator> <name pos:line="25" pos:column="31">null</name></expr>)</condition><then pos:line="25" pos:column="36">
            <block pos:line="26" pos:column="13">{
                <return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="30" pos:column="13">var</name></type> <name pos:line="30" pos:column="17">section</name> <init pos:line="30" pos:column="25">= <expr><op:operator pos:line="30" pos:column="27">new</op:operator> <call><name pos:line="30" pos:column="31">TabSection</name><argument_list pos:line="30" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="42">"Data"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="30" pos:column="50">"Value"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="31" pos:column="13">foreach (<init><decl><type><name pos:line="31" pos:column="22">var</name></type> <name pos:line="31" pos:column="26">item</name> <range pos:line="31" pos:column="31">in <expr><name pos:line="31" pos:column="34">dataTokens</name></expr></range></decl></init>)
            <block pos:line="32" pos:column="13">{ 
                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">section</name><op:operator pos:line="33" pos:column="24">.</op:operator><name pos:line="33" pos:column="25">AddRow</name></name><argument_list pos:line="33" pos:column="31">()</argument_list></call><op:operator pos:line="33" pos:column="33">.</op:operator><call><name pos:line="33" pos:column="34">Column</name><argument_list pos:line="33" pos:column="40">(<argument><expr><name><name pos:line="33" pos:column="41">item</name><op:operator pos:line="33" pos:column="45">.</op:operator><name pos:line="33" pos:column="46">Key</name></name></expr></argument>)</argument_list></call><op:operator pos:line="33" pos:column="50">.</op:operator><call><name pos:line="33" pos:column="51">Column</name><argument_list pos:line="33" pos:column="57">(<argument><expr><name><name pos:line="33" pos:column="58">item</name><op:operator pos:line="33" pos:column="62">.</op:operator><name pos:line="33" pos:column="63">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="39" pos:column="9">private</specifier> <specifier pos:line="39" pos:column="17">static</specifier> <name pos:line="39" pos:column="24">object</name></type> <name pos:line="39" pos:column="31">GetRouteData</name><parameter_list pos:line="39" pos:column="43">(<param><decl><type><name><name pos:line="39" pos:column="44">IEnumerable</name><argument_list pos:line="39" pos:column="55">&lt;<argument><name pos:line="39" pos:column="56">RouteDataItemModel</name></argument>&gt;</argument_list></name></type> <name pos:line="39" pos:column="76">routeData</name></decl></param>)</parameter_list>
        <block pos:line="40" pos:column="9">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">routeData</name> <op:operator pos:line="41" pos:column="27">==</op:operator> <name pos:line="41" pos:column="30">null</name></expr>)</condition><then pos:line="41" pos:column="35">
            <block pos:line="42" pos:column="13">{
                <return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="46" pos:column="13">var</name></type> <name pos:line="46" pos:column="17">section</name> <init pos:line="46" pos:column="25">= <expr><op:operator pos:line="46" pos:column="27">new</op:operator> <call><name pos:line="46" pos:column="31">TabSection</name><argument_list pos:line="46" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="42">"Placeholder"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="46" pos:column="57">"Default"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="46" pos:column="68">"Actual"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="47" pos:column="13">foreach (<init><decl><type><name pos:line="47" pos:column="22">var</name></type> <name pos:line="47" pos:column="26">item</name> <range pos:line="47" pos:column="31">in <expr><name pos:line="47" pos:column="34">routeData</name></expr></range></decl></init>)
            <block pos:line="48" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="49" pos:column="17">var</name></type> <name pos:line="49" pos:column="21">value</name> <init pos:line="49" pos:column="27">= <expr><name><name pos:line="49" pos:column="29">item</name><op:operator pos:line="49" pos:column="33">.</op:operator><name pos:line="49" pos:column="34">DefaultValue</name></name> <op:operator pos:line="49" pos:column="47">==</op:operator> <name pos:line="49" pos:column="50">null</name> <op:operator pos:line="49" pos:column="55">?</op:operator> <name pos:line="49" pos:column="57">null</name> <op:operator pos:line="49" pos:column="62">:</op:operator> <call><name><name pos:line="49" pos:column="64">item</name><op:operator pos:line="49" pos:column="68">.</op:operator><name pos:line="49" pos:column="69">DefaultValue</name><op:operator pos:line="49" pos:column="81">.</op:operator><name pos:line="49" pos:column="82">ToString</name></name><argument_list pos:line="49" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">value</name> <op:operator pos:line="51" pos:column="27">==</op:operator> <name><name pos:line="51" pos:column="30">string</name><op:operator pos:line="51" pos:column="36">.</op:operator><name pos:line="51" pos:column="37">Empty</name></name></expr>)</condition><then pos:line="51" pos:column="43">
                <block pos:line="52" pos:column="17">{
                    <expr_stmt><expr><name pos:line="53" pos:column="21">value</name> <op:operator pos:line="53" pos:column="27">=</op:operator> <lit:literal type="string" pos:line="53" pos:column="29">"\"\""</lit:literal></expr>;</expr_stmt>
                }</block></then></if>

                <expr_stmt><expr><call><name><name pos:line="56" pos:column="17">section</name><op:operator pos:line="56" pos:column="24">.</op:operator><name pos:line="56" pos:column="25">AddRow</name></name><argument_list pos:line="56" pos:column="31">()</argument_list></call><op:operator pos:line="56" pos:column="33">.</op:operator><call><name pos:line="56" pos:column="34">Column</name><argument_list pos:line="56" pos:column="40">(<argument><expr><name><name pos:line="56" pos:column="41">item</name><op:operator pos:line="56" pos:column="45">.</op:operator><name pos:line="56" pos:column="46">PlaceHolder</name></name></expr></argument>)</argument_list></call><op:operator pos:line="56" pos:column="58">.</op:operator><call><name pos:line="56" pos:column="59">Column</name><argument_list pos:line="56" pos:column="65">(<argument><expr><name pos:line="56" pos:column="66">value</name></expr></argument>)</argument_list></call><op:operator pos:line="56" pos:column="72">.</op:operator><call><name pos:line="56" pos:column="73">Column</name><argument_list pos:line="56" pos:column="79">(<argument><expr><name><name pos:line="56" pos:column="80">item</name><op:operator pos:line="56" pos:column="84">.</op:operator><name pos:line="56" pos:column="85">ActualValue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">section</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="62" pos:column="9">private</specifier> <specifier pos:line="62" pos:column="17">static</specifier> <name pos:line="62" pos:column="24">object</name></type> <name pos:line="62" pos:column="31">GetConstraintData</name><parameter_list pos:line="62" pos:column="48">(<param><decl><type><name><name pos:line="62" pos:column="49">IEnumerable</name><argument_list pos:line="62" pos:column="60">&lt;<argument><name pos:line="62" pos:column="61">RouteConstraintModel</name></argument>&gt;</argument_list></name></type> <name pos:line="62" pos:column="83">routeData</name></decl></param>)</parameter_list>
        <block pos:line="63" pos:column="9">{
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><name pos:line="64" pos:column="17">routeData</name> <op:operator pos:line="64" pos:column="27">==</op:operator> <name pos:line="64" pos:column="30">null</name></expr>)</condition><then pos:line="64" pos:column="35">
            <block pos:line="65" pos:column="13">{
                <return pos:line="66" pos:column="17">return <expr><name pos:line="66" pos:column="24">null</name></expr>;</return>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="69" pos:column="13">var</name></type> <name pos:line="69" pos:column="17">section</name> <init pos:line="69" pos:column="25">= <expr><op:operator pos:line="69" pos:column="27">new</op:operator> <call><name pos:line="69" pos:column="31">TabSection</name><argument_list pos:line="69" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="42">"Parameter Name"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="69" pos:column="60">"Constraint"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="69" pos:column="74">"Is Match"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <foreach pos:line="70" pos:column="13">foreach (<init><decl><type><name pos:line="70" pos:column="22">var</name></type> <name pos:line="70" pos:column="26">item</name> <range pos:line="70" pos:column="31">in <expr><name pos:line="70" pos:column="34">routeData</name></expr></range></decl></init>)
            <block pos:line="71" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">section</name><op:operator pos:line="72" pos:column="24">.</op:operator><name pos:line="72" pos:column="25">AddRow</name></name><argument_list pos:line="72" pos:column="31">()</argument_list></call><op:operator pos:line="72" pos:column="33">.</op:operator><call><name pos:line="72" pos:column="34">Column</name><argument_list pos:line="72" pos:column="40">(<argument><expr><name><name pos:line="72" pos:column="41">item</name><op:operator pos:line="72" pos:column="45">.</op:operator><name pos:line="72" pos:column="46">ParameterName</name></name></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="60">.</op:operator><call><name pos:line="72" pos:column="61">Column</name><argument_list pos:line="72" pos:column="67">(<argument><expr><name><name pos:line="72" pos:column="68">item</name><op:operator pos:line="72" pos:column="72">.</op:operator><name pos:line="72" pos:column="73">Constraint</name></name></expr></argument>)</argument_list></call><op:operator pos:line="72" pos:column="84">.</op:operator><call><name pos:line="72" pos:column="85">Column</name><argument_list pos:line="72" pos:column="91">(<argument><expr><name><name pos:line="72" pos:column="92">item</name><op:operator pos:line="72" pos:column="96">.</op:operator><name pos:line="72" pos:column="97">IsMatch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <return pos:line="75" pos:column="13">return <expr><name pos:line="75" pos:column="20">section</name></expr>;</return>
        }</block></function> 
    }</block></class>
}</block></namespace>
</unit>
