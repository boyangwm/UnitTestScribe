<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\Extensibility\TabContextShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">Glimpse</name><op:operator pos:line="2" pos:column="14">.</op:operator><name pos:line="2" pos:column="15">Core</name><op:operator pos:line="2" pos:column="19">.</op:operator><name pos:line="2" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Framework</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Test</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Core</name><op:operator pos:line="4" pos:column="24">.</op:operator><name pos:line="4" pos:column="25">TestDoubles</name></name>;</using>
<using pos:line="5" pos:column="1">using <name pos:line="5" pos:column="7">Moq</name>;</using>
<using pos:line="6" pos:column="1">using <name pos:line="6" pos:column="7">Xunit</name>;</using>

<namespace pos:line="8" pos:column="1">namespace <name><name pos:line="8" pos:column="11">Glimpse</name><op:operator pos:line="8" pos:column="18">.</op:operator><name pos:line="8" pos:column="19">Test</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Core</name><op:operator pos:line="8" pos:column="28">.</op:operator><name pos:line="8" pos:column="29">Extensibility</name></name>
<block pos:line="9" pos:column="1">{
    <class><specifier pos:line="10" pos:column="5">public</specifier> class <name pos:line="10" pos:column="18">TabContextShould</name><super pos:line="10" pos:column="34">:<name pos:line="10" pos:column="35">IDisposable</name></super>
    <block pos:line="11" pos:column="5">{

        <constructor><specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">TabContextShould</name><parameter_list pos:line="13" pos:column="32">()</parameter_list>
        <block pos:line="14" pos:column="9">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">RequestContext</name> <op:operator pos:line="15" pos:column="28">=</op:operator> <op:operator pos:line="15" pos:column="30">new</op:operator> <call><name pos:line="15" pos:column="34">DummyObjectContext</name><argument_list pos:line="15" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">PluginStoreMock</name> <op:operator pos:line="16" pos:column="29">=</op:operator> <op:operator pos:line="16" pos:column="31">new</op:operator> <call><name><name pos:line="16" pos:column="35">Mock</name><argument_list pos:line="16" pos:column="39">&lt;<argument><name pos:line="16" pos:column="40">IDataStore</name></argument>&gt;</argument_list></name><argument_list pos:line="16" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">LoggerMock</name> <op:operator pos:line="17" pos:column="24">=</op:operator> <op:operator pos:line="17" pos:column="26">new</op:operator> <call><name><name pos:line="17" pos:column="30">Mock</name><argument_list pos:line="17" pos:column="34">&lt;<argument><name pos:line="17" pos:column="35">ILogger</name></argument>&gt;</argument_list></name><argument_list pos:line="17" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">MessageBroker</name> <op:operator pos:line="18" pos:column="27">=</op:operator> <op:operator pos:line="18" pos:column="29">new</op:operator> <call><name><name pos:line="18" pos:column="33">Mock</name><argument_list pos:line="18" pos:column="37">&lt;<argument><name pos:line="18" pos:column="38">IMessageBroker</name></argument>&gt;</argument_list></name><argument_list pos:line="18" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">Inspectors</name> <op:operator pos:line="19" pos:column="24">=</op:operator> <op:operator pos:line="19" pos:column="26">new</op:operator> <call><name><name pos:line="19" pos:column="30">ReflectionDiscoverableCollection</name><argument_list pos:line="19" pos:column="62">&lt;<argument><name pos:line="19" pos:column="63">IInspector</name></argument>&gt;</argument_list></name><argument_list pos:line="19" pos:column="74">(<argument><expr><name><name pos:line="19" pos:column="75">LoggerMock</name><op:operator pos:line="19" pos:column="85">.</op:operator><name pos:line="19" pos:column="86">Object</name></name></expr></argument>)</argument_list></call>
                                     <block pos:line="20" pos:column="38">{
                                         <expr><op:operator pos:line="21" pos:column="42">new</op:operator> <call><name pos:line="21" pos:column="46">DummyInspector1</name><argument_list pos:line="21" pos:column="61">()</argument_list></call></expr>
                                     }</block></expr>;</expr_stmt>
        }</block></constructor>



        <decl_stmt><decl><type><specifier pos:line="27" pos:column="9">private</specifier> <name><name pos:line="27" pos:column="17">IDiscoverableCollection</name><argument_list pos:line="27" pos:column="40">&lt;<argument><name pos:line="27" pos:column="41">IInspector</name></argument>&gt;</argument_list></name></type> <name pos:line="27" pos:column="53">Inspectors</name> <block pos:line="27" pos:column="64">{ <function_decl><name pos:line="27" pos:column="66">get</name>;</function_decl> <function_decl><name pos:line="27" pos:column="71">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">private</specifier> <name><name pos:line="29" pos:column="17">Mock</name><argument_list pos:line="29" pos:column="21">&lt;<argument><name pos:line="29" pos:column="22">IDataStore</name></argument>&gt;</argument_list></name></type> <name pos:line="29" pos:column="34">PluginStoreMock</name> <block pos:line="29" pos:column="50">{ <function_decl><name pos:line="29" pos:column="52">get</name>;</function_decl> <function_decl><name pos:line="29" pos:column="57">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">private</specifier> <name><name pos:line="31" pos:column="17">Mock</name><argument_list pos:line="31" pos:column="21">&lt;<argument><name pos:line="31" pos:column="22">ILogger</name></argument>&gt;</argument_list></name></type> <name pos:line="31" pos:column="31">LoggerMock</name> <block pos:line="31" pos:column="42">{ <function_decl><name pos:line="31" pos:column="44">get</name>;</function_decl> <function_decl><name pos:line="31" pos:column="49">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">private</specifier> <name><name pos:line="33" pos:column="17">Mock</name><argument_list pos:line="33" pos:column="21">&lt;<argument><name pos:line="33" pos:column="22">IMessageBroker</name></argument>&gt;</argument_list></name></type> <name pos:line="33" pos:column="38">MessageBroker</name> <block pos:line="33" pos:column="52">{ <function_decl><name pos:line="33" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="33" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">private</specifier> <name pos:line="35" pos:column="17">DummyObjectContext</name></type> <name pos:line="35" pos:column="36">RequestContext</name> <block pos:line="35" pos:column="51">{ <function_decl><name pos:line="35" pos:column="53">get</name>;</function_decl> <function_decl><name pos:line="35" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">private</specifier> <name pos:line="37" pos:column="17">TabContext</name></type> <name pos:line="37" pos:column="28">tabContext</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">private</specifier> <name pos:line="38" pos:column="17">TabContext</name></type> <name pos:line="38" pos:column="28">TabContext</name>
        <block pos:line="39" pos:column="9">{
            <function><name pos:line="40" pos:column="13">get</name> <block pos:line="40" pos:column="17">{ <return pos:line="40" pos:column="19">return <expr><name pos:line="40" pos:column="26">tabContext</name> <op:operator pos:line="40" pos:column="37">??</op:operator> <op:operator pos:line="40" pos:column="40">(</op:operator><name pos:line="40" pos:column="41">tabContext</name> <op:operator pos:line="40" pos:column="52">=</op:operator> <op:operator pos:line="40" pos:column="54">new</op:operator> <call><name pos:line="40" pos:column="58">TabContext</name><argument_list pos:line="40" pos:column="68">(<argument><expr><name pos:line="40" pos:column="69">RequestContext</name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="85">PluginStoreMock</name><op:operator pos:line="40" pos:column="100">.</op:operator><name pos:line="40" pos:column="101">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="109">LoggerMock</name><op:operator pos:line="40" pos:column="119">.</op:operator><name pos:line="40" pos:column="120">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="128">MessageBroker</name><op:operator pos:line="40" pos:column="141">.</op:operator><name pos:line="40" pos:column="142">Object</name></name></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="149">)</op:operator></expr>;</return> }</block></function>
            <function><name pos:line="41" pos:column="13">set</name> <block pos:line="41" pos:column="17">{ <expr_stmt><expr><name pos:line="41" pos:column="19">tabContext</name> <op:operator pos:line="41" pos:column="30">=</op:operator> <name pos:line="41" pos:column="32">value</name></expr>;</expr_stmt> }</block></function>
        }</block></decl></decl_stmt>




        <function><type><attribute pos:line="47" pos:column="9">[<expr><name pos:line="47" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="48" pos:column="9">public</specifier> <name pos:line="48" pos:column="16">void</name></type> <name pos:line="48" pos:column="21">Construct</name><parameter_list pos:line="48" pos:column="30">()</parameter_list>
        <block pos:line="49" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">var</name></type> <name pos:line="50" pos:column="17">pluginStoreObj</name> <init pos:line="50" pos:column="32">= <expr><name><name pos:line="50" pos:column="34">PluginStoreMock</name><op:operator pos:line="50" pos:column="49">.</op:operator><name pos:line="50" pos:column="50">Object</name></name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="51" pos:column="13">var</name></type> <name pos:line="51" pos:column="17">locator</name> <init pos:line="51" pos:column="25">= <expr><op:operator pos:line="51" pos:column="27">new</op:operator> <call><name pos:line="51" pos:column="31">TabContext</name><argument_list pos:line="51" pos:column="41">(<argument><expr><name pos:line="51" pos:column="42">RequestContext</name></expr></argument>, <argument><expr><name pos:line="51" pos:column="58">pluginStoreObj</name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="74">LoggerMock</name><op:operator pos:line="51" pos:column="84">.</op:operator><name pos:line="51" pos:column="85">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="93">MessageBroker</name><op:operator pos:line="51" pos:column="106">.</op:operator><name pos:line="51" pos:column="107">Object</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="53" pos:column="13">Assert</name><op:operator pos:line="53" pos:column="19">.</op:operator><name pos:line="53" pos:column="20">Equal</name></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">RequestContext</name></expr></argument>, <argument><expr><call><name><name pos:line="53" pos:column="42">locator</name><op:operator pos:line="53" pos:column="49">.</op:operator><name><name pos:line="53" pos:column="50">GetRequestContext</name><argument_list pos:line="53" pos:column="67">&lt;<argument><name pos:line="53" pos:column="68">DummyObjectContext</name></argument>&gt;</argument_list></name></name><argument_list pos:line="53" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="54" pos:column="13">Assert</name><op:operator pos:line="54" pos:column="19">.</op:operator><name pos:line="54" pos:column="20">Equal</name></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">pluginStoreObj</name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="42">locator</name><op:operator pos:line="54" pos:column="49">.</op:operator><name pos:line="54" pos:column="50">TabStore</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="57" pos:column="9">[<expr><name pos:line="57" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="58" pos:column="9">public</specifier> <name pos:line="58" pos:column="16">void</name></type> <name pos:line="58" pos:column="21">ThrowWithNullMessageBroker</name><parameter_list pos:line="58" pos:column="47">()</parameter_list>
        <block pos:line="59" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">Assert</name><op:operator pos:line="60" pos:column="19">.</op:operator><name><name pos:line="60" pos:column="20">Throws</name><argument_list pos:line="60" pos:column="26">&lt;<argument><name pos:line="60" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="60" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="60" pos:column="50">()</parameter_list> <op:operator pos:line="60" pos:column="53">=&gt;</op:operator> <op:operator pos:line="60" pos:column="56">new</op:operator> <call><name pos:line="60" pos:column="60">TabContext</name><argument_list pos:line="60" pos:column="70">(<argument><expr><name pos:line="60" pos:column="71">RequestContext</name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="87">PluginStoreMock</name><op:operator pos:line="60" pos:column="102">.</op:operator><name pos:line="60" pos:column="103">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="111">LoggerMock</name><op:operator pos:line="60" pos:column="121">.</op:operator><name pos:line="60" pos:column="122">Object</name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="130">null</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="63" pos:column="9">[<expr><name pos:line="63" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="64" pos:column="9">public</specifier> <name pos:line="64" pos:column="16">void</name></type> <name pos:line="64" pos:column="21">ThrowWithNullPluginStore</name><parameter_list pos:line="64" pos:column="45">()</parameter_list>
        <block pos:line="65" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="66" pos:column="13">Assert</name><op:operator pos:line="66" pos:column="19">.</op:operator><name><name pos:line="66" pos:column="20">Throws</name><argument_list pos:line="66" pos:column="26">&lt;<argument><name pos:line="66" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="66" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="66" pos:column="50">()</parameter_list> <op:operator pos:line="66" pos:column="53">=&gt;</op:operator> <op:operator pos:line="66" pos:column="56">new</op:operator> <call><name pos:line="66" pos:column="60">TabContext</name><argument_list pos:line="66" pos:column="70">(<argument><expr><name pos:line="66" pos:column="71">RequestContext</name></expr></argument>, <argument><expr><name pos:line="66" pos:column="87">null</name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="93">LoggerMock</name><op:operator pos:line="66" pos:column="103">.</op:operator><name pos:line="66" pos:column="104">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="112">MessageBroker</name><op:operator pos:line="66" pos:column="125">.</op:operator><name pos:line="66" pos:column="126">Object</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="69" pos:column="9">[<expr><name pos:line="69" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="70" pos:column="9">public</specifier> <name pos:line="70" pos:column="16">void</name></type> <name pos:line="70" pos:column="21">ThrowWithNullRequestContext</name><parameter_list pos:line="70" pos:column="48">()</parameter_list>
        <block pos:line="71" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="72" pos:column="13">Assert</name><op:operator pos:line="72" pos:column="19">.</op:operator><name><name pos:line="72" pos:column="20">Throws</name><argument_list pos:line="72" pos:column="26">&lt;<argument><name pos:line="72" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="72" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="72" pos:column="50">()</parameter_list><op:operator pos:line="72" pos:column="52">=&gt;</op:operator><op:operator pos:line="72" pos:column="54">new</op:operator> <call><name pos:line="72" pos:column="58">TabContext</name><argument_list pos:line="72" pos:column="68">(<argument><expr><name pos:line="72" pos:column="69">null</name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="75">PluginStoreMock</name><op:operator pos:line="72" pos:column="90">.</op:operator><name pos:line="72" pos:column="91">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="99">LoggerMock</name><op:operator pos:line="72" pos:column="109">.</op:operator><name pos:line="72" pos:column="110">Object</name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="118">MessageBroker</name><op:operator pos:line="72" pos:column="131">.</op:operator><name pos:line="72" pos:column="132">Object</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="75" pos:column="9">[<expr><name pos:line="75" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="76" pos:column="9">public</specifier> <name pos:line="76" pos:column="16">void</name></type> <name pos:line="76" pos:column="21">ThrowWithNullLogger</name><parameter_list pos:line="76" pos:column="40">()</parameter_list>
        <block pos:line="77" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="78" pos:column="13">Assert</name><op:operator pos:line="78" pos:column="19">.</op:operator><name><name pos:line="78" pos:column="20">Throws</name><argument_list pos:line="78" pos:column="26">&lt;<argument><name pos:line="78" pos:column="27">ArgumentNullException</name></argument>&gt;</argument_list></name></name><argument_list pos:line="78" pos:column="49">(<argument><expr><lambda><parameter_list pos:line="78" pos:column="50">()</parameter_list> <op:operator pos:line="78" pos:column="53">=&gt;</op:operator> <op:operator pos:line="78" pos:column="56">new</op:operator> <call><name pos:line="78" pos:column="60">TabContext</name><argument_list pos:line="78" pos:column="70">(<argument><expr><name pos:line="78" pos:column="71">RequestContext</name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="87">PluginStoreMock</name><op:operator pos:line="78" pos:column="102">.</op:operator><name pos:line="78" pos:column="103">Object</name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="111">null</name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="117">MessageBroker</name><op:operator pos:line="78" pos:column="130">.</op:operator><name pos:line="78" pos:column="131">Object</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="81" pos:column="9">public</specifier> <name pos:line="81" pos:column="16">void</name></type> <name pos:line="81" pos:column="21">Dispose</name><parameter_list pos:line="81" pos:column="28">()</parameter_list>
        <block pos:line="82" pos:column="9">{
            <expr_stmt><expr><name pos:line="83" pos:column="13">RequestContext</name> <op:operator pos:line="83" pos:column="28">=</op:operator> <name pos:line="83" pos:column="30">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="84" pos:column="13">PluginStoreMock</name> <op:operator pos:line="84" pos:column="29">=</op:operator> <name pos:line="84" pos:column="31">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="85" pos:column="13">TabContext</name> <op:operator pos:line="85" pos:column="24">=</op:operator> <name pos:line="85" pos:column="26">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="86" pos:column="13">Inspectors</name> <op:operator pos:line="86" pos:column="24">=</op:operator> <name pos:line="86" pos:column="26">null</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="87" pos:column="13">LoggerMock</name> <op:operator pos:line="87" pos:column="24">=</op:operator> <name pos:line="87" pos:column="26">null</name></expr>;</expr_stmt>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
