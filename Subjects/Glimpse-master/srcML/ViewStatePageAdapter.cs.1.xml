<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms\Inspector\ViewStatePageAdapter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Collections</name><op:operator pos:line="3" pos:column="25">.</op:operator><name pos:line="3" pos:column="26">Specialized</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Reflection</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">System</name><op:operator pos:line="6" pos:column="13">.</op:operator><name pos:line="6" pos:column="14">Web</name><op:operator pos:line="6" pos:column="17">.</op:operator><name pos:line="6" pos:column="18">UI</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">System</name><op:operator pos:line="7" pos:column="13">.</op:operator><name pos:line="7" pos:column="14">Web</name><op:operator pos:line="7" pos:column="17">.</op:operator><name pos:line="7" pos:column="18">UI</name><op:operator pos:line="7" pos:column="20">.</op:operator><name pos:line="7" pos:column="21">WebControls</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">WebForms</name><op:operator pos:line="8" pos:column="23">.</op:operator><name pos:line="8" pos:column="24">Tab</name></name>;</using>

<namespace pos:line="10" pos:column="1">namespace <name><name pos:line="10" pos:column="11">Glimpse</name><op:operator pos:line="10" pos:column="18">.</op:operator><name pos:line="10" pos:column="19">WebForms</name><op:operator pos:line="10" pos:column="27">.</op:operator><name pos:line="10" pos:column="28">Inspector</name></name>
<block pos:line="11" pos:column="1">{
    <class><specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">ViewStatePageAdapter</name> <super pos:line="12" pos:column="39">: <name><name pos:line="12" pos:column="41">System</name><op:operator pos:line="12" pos:column="47">.</op:operator><name pos:line="12" pos:column="48">Web</name><op:operator pos:line="12" pos:column="51">.</op:operator><name pos:line="12" pos:column="52">UI</name><op:operator pos:line="12" pos:column="54">.</op:operator><name pos:line="12" pos:column="55">Adapters</name><op:operator pos:line="12" pos:column="63">.</op:operator><name pos:line="12" pos:column="64">PageAdapter</name></name></super>
    <block pos:line="13" pos:column="5">{
        <function><type><specifier pos:line="14" pos:column="9">public</specifier> <specifier pos:line="14" pos:column="16">override</specifier> <name pos:line="14" pos:column="25">PageStatePersister</name></type> <name pos:line="14" pos:column="44">GetStatePersister</name><parameter_list pos:line="14" pos:column="61">()</parameter_list>
        <block pos:line="15" pos:column="9">{
            <return pos:line="16" pos:column="13">return <expr><op:operator pos:line="16" pos:column="20">new</op:operator> <call><name pos:line="16" pos:column="24">ViewStatePageStatePersister</name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">Page</name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>

    <class><specifier pos:line="20" pos:column="5">public</specifier> class <name><name pos:line="20" pos:column="18">ViewStatePageAdapter</name><argument_list pos:line="20" pos:column="38">&lt;<argument><name pos:line="20" pos:column="39">TPageAdapter</name></argument>&gt;</argument_list></name> <super pos:line="20" pos:column="53">: <name><name pos:line="20" pos:column="55">System</name><op:operator pos:line="20" pos:column="61">.</op:operator><name pos:line="20" pos:column="62">Web</name><op:operator pos:line="20" pos:column="65">.</op:operator><name pos:line="20" pos:column="66">UI</name><op:operator pos:line="20" pos:column="68">.</op:operator><name pos:line="20" pos:column="69">Adapters</name><op:operator pos:line="20" pos:column="77">.</op:operator><name pos:line="20" pos:column="78">PageAdapter</name></name></super>
        <where pos:line="21" pos:column="9">where <name pos:line="21" pos:column="15">TPageAdapter</name> : <name><name pos:line="21" pos:column="30">System</name><op:operator pos:line="21" pos:column="36">.</op:operator><name pos:line="21" pos:column="37">Web</name><op:operator pos:line="21" pos:column="40">.</op:operator><name pos:line="21" pos:column="41">UI</name><op:operator pos:line="21" pos:column="43">.</op:operator><name pos:line="21" pos:column="44">Adapters</name><op:operator pos:line="21" pos:column="52">.</op:operator><name pos:line="21" pos:column="53">PageAdapter</name></name></where>
    <block pos:line="22" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">private</specifier> <specifier pos:line="23" pos:column="17">static</specifier> <specifier pos:line="23" pos:column="24">readonly</specifier> <name pos:line="23" pos:column="33">FieldInfo</name></type> <name pos:line="23" pos:column="43">browserField</name> <init pos:line="23" pos:column="56">= <expr><call><name pos:line="23" pos:column="58">typeof</name><argument_list pos:line="23" pos:column="64">(<argument><expr><name><name pos:line="23" pos:column="65">System</name><op:operator pos:line="23" pos:column="71">.</op:operator><name pos:line="23" pos:column="72">Web</name><op:operator pos:line="23" pos:column="75">.</op:operator><name pos:line="23" pos:column="76">UI</name><op:operator pos:line="23" pos:column="78">.</op:operator><name pos:line="23" pos:column="79">Adapters</name><op:operator pos:line="23" pos:column="87">.</op:operator><name pos:line="23" pos:column="88">ControlAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="23" pos:column="103">.</op:operator><call><name pos:line="23" pos:column="104">GetField</name><argument_list pos:line="23" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="23" pos:column="113">"_browser"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="125">BindingFlags</name><op:operator pos:line="23" pos:column="137">.</op:operator><name pos:line="23" pos:column="138">Instance</name></name> <op:operator pos:line="23" pos:column="147">|</op:operator> <name><name pos:line="23" pos:column="149">BindingFlags</name><op:operator pos:line="23" pos:column="161">.</op:operator><name pos:line="23" pos:column="162">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">private</specifier> <specifier pos:line="24" pos:column="17">static</specifier> <specifier pos:line="24" pos:column="24">readonly</specifier> <name pos:line="24" pos:column="33">FieldInfo</name></type> <name pos:line="24" pos:column="43">controlField</name> <init pos:line="24" pos:column="56">= <expr><call><name pos:line="24" pos:column="58">typeof</name><argument_list pos:line="24" pos:column="64">(<argument><expr><name><name pos:line="24" pos:column="65">System</name><op:operator pos:line="24" pos:column="71">.</op:operator><name pos:line="24" pos:column="72">Web</name><op:operator pos:line="24" pos:column="75">.</op:operator><name pos:line="24" pos:column="76">UI</name><op:operator pos:line="24" pos:column="78">.</op:operator><name pos:line="24" pos:column="79">Adapters</name><op:operator pos:line="24" pos:column="87">.</op:operator><name pos:line="24" pos:column="88">ControlAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="24" pos:column="103">.</op:operator><call><name pos:line="24" pos:column="104">GetField</name><argument_list pos:line="24" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="24" pos:column="113">"_control"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="125">BindingFlags</name><op:operator pos:line="24" pos:column="137">.</op:operator><name pos:line="24" pos:column="138">Instance</name></name> <op:operator pos:line="24" pos:column="147">|</op:operator> <name><name pos:line="24" pos:column="149">BindingFlags</name><op:operator pos:line="24" pos:column="161">.</op:operator><name pos:line="24" pos:column="162">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="26" pos:column="9">public</specifier> <name pos:line="26" pos:column="16">ViewStatePageAdapter</name><parameter_list pos:line="26" pos:column="36">()</parameter_list>
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">InnerAdapter</name> <op:operator pos:line="28" pos:column="26">=</op:operator> <call><name><name pos:line="28" pos:column="28">Activator</name><op:operator pos:line="28" pos:column="37">.</op:operator><name><name pos:line="28" pos:column="38">CreateInstance</name><argument_list pos:line="28" pos:column="52">&lt;<argument><name pos:line="28" pos:column="53">TPageAdapter</name></argument>&gt;</argument_list></name></name><argument_list pos:line="28" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <specifier pos:line="31" pos:column="16">override</specifier> <name pos:line="31" pos:column="25">PageStatePersister</name></type> <name pos:line="31" pos:column="44">GetStatePersister</name><parameter_list pos:line="31" pos:column="61">()</parameter_list>
        <block pos:line="32" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">CopyAccessState</name><argument_list pos:line="33" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><op:operator pos:line="34" pos:column="20">new</op:operator> <call><name pos:line="34" pos:column="24">ViewStatePageStatePersister</name><argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">Page</name></expr></argument>, <argument><expr><call><name><name pos:line="34" pos:column="58">InnerAdapter</name><op:operator pos:line="34" pos:column="70">.</op:operator><name pos:line="34" pos:column="71">GetStatePersister</name></name><argument_list pos:line="34" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="37" pos:column="9">public</specifier> <specifier pos:line="37" pos:column="16">override</specifier> <name pos:line="37" pos:column="25">StringCollection</name></type> <name pos:line="37" pos:column="42">CacheVaryByHeaders</name>
        <block pos:line="38" pos:column="9">{
            <function><name pos:line="39" pos:column="13">get</name>
            <block pos:line="40" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">CopyAccessState</name><argument_list pos:line="41" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="42" pos:column="17">return <expr><name><name pos:line="42" pos:column="24">InnerAdapter</name><op:operator pos:line="42" pos:column="36">.</op:operator><name pos:line="42" pos:column="37">CacheVaryByHeaders</name></name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">public</specifier> <specifier pos:line="46" pos:column="16">override</specifier> <name pos:line="46" pos:column="25">StringCollection</name></type> <name pos:line="46" pos:column="42">CacheVaryByParams</name>
        <block pos:line="47" pos:column="9">{
            <function><name pos:line="48" pos:column="13">get</name>
            <block pos:line="49" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">CopyAccessState</name><argument_list pos:line="50" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="51" pos:column="17">return <expr><name><name pos:line="51" pos:column="24">InnerAdapter</name><op:operator pos:line="51" pos:column="36">.</op:operator><name pos:line="51" pos:column="37">CacheVaryByParams</name></name></expr>;</return>
            }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">private</specifier> <name><name pos:line="55" pos:column="17">System</name><op:operator pos:line="55" pos:column="23">.</op:operator><name pos:line="55" pos:column="24">Web</name><op:operator pos:line="55" pos:column="27">.</op:operator><name pos:line="55" pos:column="28">UI</name><op:operator pos:line="55" pos:column="30">.</op:operator><name pos:line="55" pos:column="31">Adapters</name><op:operator pos:line="55" pos:column="39">.</op:operator><name pos:line="55" pos:column="40">PageAdapter</name></name></type> <name pos:line="55" pos:column="52">InnerAdapter</name> <block pos:line="55" pos:column="65">{ <function_decl><name pos:line="55" pos:column="67">get</name>;</function_decl> <function_decl><name pos:line="55" pos:column="72">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="57" pos:column="9">private</specifier> <name pos:line="57" pos:column="17">bool</name></type> <name pos:line="57" pos:column="22">PageAdapterStateCopied</name> <block pos:line="57" pos:column="45">{ <function_decl><name pos:line="57" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="57" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="59" pos:column="9">public</specifier> <specifier pos:line="59" pos:column="16">override</specifier> <name pos:line="59" pos:column="25">NameValueCollection</name></type> <name pos:line="59" pos:column="45">DeterminePostBackMode</name><parameter_list pos:line="59" pos:column="66">()</parameter_list>
        <block pos:line="60" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">CopyAccessState</name><argument_list pos:line="61" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="62" pos:column="13">return <expr><call><name><name pos:line="62" pos:column="20">InnerAdapter</name><op:operator pos:line="62" pos:column="32">.</op:operator><name pos:line="62" pos:column="33">DeterminePostBackMode</name></name><argument_list pos:line="62" pos:column="54">()</argument_list></call></expr>;</return>
        }</block></function>

<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if</cpp:directive> <expr><name pos:line="65" pos:column="5">NET45Plus</name></expr></cpp:if>
        <function><type><specifier pos:line="66" pos:column="9">public</specifier> <specifier pos:line="66" pos:column="16">override</specifier> <name pos:line="66" pos:column="25">NameValueCollection</name></type> <name pos:line="66" pos:column="45">DeterminePostBackModeUnvalidated</name><parameter_list pos:line="66" pos:column="77">()</parameter_list>
        <block pos:line="67" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">CopyAccessState</name><argument_list pos:line="68" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="69" pos:column="13">return <expr><call><name><name pos:line="69" pos:column="20">InnerAdapter</name><op:operator pos:line="69" pos:column="32">.</op:operator><name pos:line="69" pos:column="33">DeterminePostBackModeUnvalidated</name></name><argument_list pos:line="69" pos:column="65">()</argument_list></call></expr>;</return>
        }</block></function>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif</cpp:directive></cpp:endif>

        <function><type><specifier pos:line="73" pos:column="9">public</specifier> <specifier pos:line="73" pos:column="16">override</specifier> <name pos:line="73" pos:column="25">ICollection</name></type> <name pos:line="73" pos:column="37">GetRadioButtonsByGroup</name><parameter_list pos:line="73" pos:column="59">(<param><decl><type><name pos:line="73" pos:column="60">string</name></type> <name pos:line="73" pos:column="67">groupName</name></decl></param>)</parameter_list>
        <block pos:line="74" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">CopyAccessState</name><argument_list pos:line="75" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="76" pos:column="13">return <expr><call><name><name pos:line="76" pos:column="20">InnerAdapter</name><op:operator pos:line="76" pos:column="32">.</op:operator><name pos:line="76" pos:column="33">GetRadioButtonsByGroup</name></name><argument_list pos:line="76" pos:column="55">(<argument><expr><name pos:line="76" pos:column="56">groupName</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="79" pos:column="9">public</specifier> <specifier pos:line="79" pos:column="16">override</specifier> <name pos:line="79" pos:column="25">void</name></type> <name pos:line="79" pos:column="30">RegisterRadioButton</name><parameter_list pos:line="79" pos:column="49">(<param><decl><type><name pos:line="79" pos:column="50">RadioButton</name></type> <name pos:line="79" pos:column="62">radioButton</name></decl></param>)</parameter_list>
        <block pos:line="80" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">CopyAccessState</name><argument_list pos:line="81" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="82" pos:column="13">InnerAdapter</name><op:operator pos:line="82" pos:column="25">.</op:operator><name pos:line="82" pos:column="26">RegisterRadioButton</name></name><argument_list pos:line="82" pos:column="45">(<argument><expr><name pos:line="82" pos:column="46">radioButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="85" pos:column="9">public</specifier> <specifier pos:line="85" pos:column="16">override</specifier> <name pos:line="85" pos:column="25">void</name></type> <name pos:line="85" pos:column="30">RenderBeginHyperlink</name><parameter_list pos:line="85" pos:column="50">(<param><decl><type><name pos:line="85" pos:column="51">HtmlTextWriter</name></type> <name pos:line="85" pos:column="66">writer</name></decl></param>, <param><decl><type><name pos:line="85" pos:column="74">string</name></type> <name pos:line="85" pos:column="81">targetUrl</name></decl></param>, <param><decl><type><name pos:line="85" pos:column="92">bool</name></type> <name pos:line="85" pos:column="97">encodeUrl</name></decl></param>, <param><decl><type><name pos:line="85" pos:column="108">string</name></type> <name pos:line="85" pos:column="115">softkeyLabel</name></decl></param>)</parameter_list>
        <block pos:line="86" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">CopyAccessState</name><argument_list pos:line="87" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="88" pos:column="13">InnerAdapter</name><op:operator pos:line="88" pos:column="25">.</op:operator><name pos:line="88" pos:column="26">RenderBeginHyperlink</name></name><argument_list pos:line="88" pos:column="46">(<argument><expr><name pos:line="88" pos:column="47">writer</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="55">targetUrl</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="66">encodeUrl</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="77">softkeyLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="91" pos:column="9">public</specifier> <specifier pos:line="91" pos:column="16">override</specifier> <name pos:line="91" pos:column="25">void</name></type> <name pos:line="91" pos:column="30">RenderBeginHyperlink</name><parameter_list pos:line="91" pos:column="50">(<param><decl><type><name pos:line="91" pos:column="51">HtmlTextWriter</name></type> <name pos:line="91" pos:column="66">writer</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="74">string</name></type> <name pos:line="91" pos:column="81">targetUrl</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="92">bool</name></type> <name pos:line="91" pos:column="97">encodeUrl</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="108">string</name></type> <name pos:line="91" pos:column="115">softkeyLabel</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="129">string</name></type> <name pos:line="91" pos:column="136">accessKey</name></decl></param>)</parameter_list>
        <block pos:line="92" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">CopyAccessState</name><argument_list pos:line="93" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">InnerAdapter</name><op:operator pos:line="94" pos:column="25">.</op:operator><name pos:line="94" pos:column="26">RenderBeginHyperlink</name></name><argument_list pos:line="94" pos:column="46">(<argument><expr><name pos:line="94" pos:column="47">writer</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="55">targetUrl</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="66">encodeUrl</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="77">softkeyLabel</name></expr></argument>, <argument><expr><name pos:line="94" pos:column="91">accessKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="97" pos:column="9">public</specifier> <specifier pos:line="97" pos:column="16">override</specifier> <name pos:line="97" pos:column="25">void</name></type> <name pos:line="97" pos:column="30">RenderEndHyperlink</name><parameter_list pos:line="97" pos:column="48">(<param><decl><type><name pos:line="97" pos:column="49">HtmlTextWriter</name></type> <name pos:line="97" pos:column="64">writer</name></decl></param>)</parameter_list>
        <block pos:line="98" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">CopyAccessState</name><argument_list pos:line="99" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">InnerAdapter</name><op:operator pos:line="100" pos:column="25">.</op:operator><name pos:line="100" pos:column="26">RenderEndHyperlink</name></name><argument_list pos:line="100" pos:column="44">(<argument><expr><name pos:line="100" pos:column="45">writer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="103" pos:column="9">public</specifier> <specifier pos:line="103" pos:column="16">override</specifier> <name pos:line="103" pos:column="25">void</name></type> <name pos:line="103" pos:column="30">RenderPostBackEvent</name><parameter_list pos:line="103" pos:column="49">(<param><decl><type><name pos:line="103" pos:column="50">HtmlTextWriter</name></type> <name pos:line="103" pos:column="65">writer</name></decl></param>, <param><decl><type><name pos:line="103" pos:column="73">string</name></type> <name pos:line="103" pos:column="80">target</name></decl></param>, <param><decl><type><name pos:line="103" pos:column="88">string</name></type> <name pos:line="103" pos:column="95">argument</name></decl></param>, <param><decl><type><name pos:line="103" pos:column="105">string</name></type> <name pos:line="103" pos:column="112">softkeyLabel</name></decl></param>, <param><decl><type><name pos:line="103" pos:column="126">string</name></type> <name pos:line="103" pos:column="133">text</name></decl></param>)</parameter_list>
        <block pos:line="104" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">CopyAccessState</name><argument_list pos:line="105" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="106" pos:column="13">InnerAdapter</name><op:operator pos:line="106" pos:column="25">.</op:operator><name pos:line="106" pos:column="26">RenderPostBackEvent</name></name><argument_list pos:line="106" pos:column="45">(<argument><expr><name pos:line="106" pos:column="46">writer</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="54">target</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="62">argument</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="72">softkeyLabel</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="86">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="109" pos:column="9">public</specifier> <specifier pos:line="109" pos:column="16">override</specifier> <name pos:line="109" pos:column="25">void</name></type> <name pos:line="109" pos:column="30">RenderPostBackEvent</name><parameter_list pos:line="109" pos:column="49">(<param><decl><type><name pos:line="109" pos:column="50">HtmlTextWriter</name></type> <name pos:line="109" pos:column="65">writer</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="73">string</name></type> <name pos:line="109" pos:column="80">target</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="88">string</name></type> <name pos:line="109" pos:column="95">argument</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="105">string</name></type> <name pos:line="109" pos:column="112">softkeyLabel</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="126">string</name></type> <name pos:line="109" pos:column="133">text</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="139">string</name></type> <name pos:line="109" pos:column="146">postUrl</name></decl></param>, <param><decl><type><name pos:line="109" pos:column="155">string</name></type> <name pos:line="109" pos:column="162">accessKey</name></decl></param>)</parameter_list>
        <block pos:line="110" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">CopyAccessState</name><argument_list pos:line="111" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">InnerAdapter</name><op:operator pos:line="112" pos:column="25">.</op:operator><name pos:line="112" pos:column="26">RenderPostBackEvent</name></name><argument_list pos:line="112" pos:column="45">(<argument><expr><name pos:line="112" pos:column="46">writer</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="54">target</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="62">argument</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="72">softkeyLabel</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="86">text</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="92">postUrl</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="101">accessKey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="115" pos:column="9">public</specifier> <specifier pos:line="115" pos:column="16">override</specifier> <name pos:line="115" pos:column="25">string</name></type> <name pos:line="115" pos:column="32">TransformText</name><parameter_list pos:line="115" pos:column="45">(<param><decl><type><name pos:line="115" pos:column="46">string</name></type> <name pos:line="115" pos:column="53">text</name></decl></param>)</parameter_list>
        <block pos:line="116" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">CopyAccessState</name><argument_list pos:line="117" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="118" pos:column="13">return <expr><call><name><name pos:line="118" pos:column="20">InnerAdapter</name><op:operator pos:line="118" pos:column="32">.</op:operator><name pos:line="118" pos:column="33">TransformText</name></name><argument_list pos:line="118" pos:column="46">(<argument><expr><name pos:line="118" pos:column="47">text</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="121" pos:column="9">private</specifier> <specifier pos:line="121" pos:column="17">static</specifier> <specifier pos:line="121" pos:column="24">readonly</specifier> <name pos:line="121" pos:column="33">MethodInfo</name></type> <name pos:line="121" pos:column="44">BeginRenderInfo</name> <init pos:line="121" pos:column="60">= <expr><call><name pos:line="121" pos:column="62">typeof</name><argument_list pos:line="121" pos:column="68">(<argument><expr><name><name pos:line="121" pos:column="69">System</name><op:operator pos:line="121" pos:column="75">.</op:operator><name pos:line="121" pos:column="76">Web</name><op:operator pos:line="121" pos:column="79">.</op:operator><name pos:line="121" pos:column="80">UI</name><op:operator pos:line="121" pos:column="82">.</op:operator><name pos:line="121" pos:column="83">Adapters</name><op:operator pos:line="121" pos:column="91">.</op:operator><name pos:line="121" pos:column="92">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="121" pos:column="104">.</op:operator><call><name pos:line="121" pos:column="105">GetMethod</name><argument_list pos:line="121" pos:column="114">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="115">"BeginRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="130">BindingFlags</name><op:operator pos:line="121" pos:column="142">.</op:operator><name pos:line="121" pos:column="143">Instance</name></name> <op:operator pos:line="121" pos:column="152">|</op:operator> <name><name pos:line="121" pos:column="154">BindingFlags</name><op:operator pos:line="121" pos:column="166">.</op:operator><name pos:line="121" pos:column="167">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="123" pos:column="9">protected</specifier> <specifier pos:line="123" pos:column="19">override</specifier> <name pos:line="123" pos:column="28">void</name></type> <name pos:line="123" pos:column="33">BeginRender</name><parameter_list pos:line="123" pos:column="44">(<param><decl><type><name pos:line="123" pos:column="45">HtmlTextWriter</name></type> <name pos:line="123" pos:column="60">writer</name></decl></param>)</parameter_list>
        <block pos:line="124" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="125" pos:column="13">CopyAccessState</name><argument_list pos:line="125" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">BeginRenderInfo</name><op:operator pos:line="126" pos:column="28">.</op:operator><name pos:line="126" pos:column="29">Invoke</name></name><argument_list pos:line="126" pos:column="35">(<argument><expr><name pos:line="126" pos:column="36">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="126" pos:column="50">new</op:operator> <name><name pos:line="126" pos:column="54">object</name><index pos:line="126" pos:column="60">[]</index></name> <block pos:line="126" pos:column="63">{ <expr><name pos:line="126" pos:column="65">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="129" pos:column="9">private</specifier> <specifier pos:line="129" pos:column="17">static</specifier> <specifier pos:line="129" pos:column="24">readonly</specifier> <name pos:line="129" pos:column="33">MethodInfo</name></type> <name pos:line="129" pos:column="44">CreateChildControlsInfo</name> <init pos:line="129" pos:column="68">= <expr><call><name pos:line="129" pos:column="70">typeof</name><argument_list pos:line="129" pos:column="76">(<argument><expr><name><name pos:line="129" pos:column="77">System</name><op:operator pos:line="129" pos:column="83">.</op:operator><name pos:line="129" pos:column="84">Web</name><op:operator pos:line="129" pos:column="87">.</op:operator><name pos:line="129" pos:column="88">UI</name><op:operator pos:line="129" pos:column="90">.</op:operator><name pos:line="129" pos:column="91">Adapters</name><op:operator pos:line="129" pos:column="99">.</op:operator><name pos:line="129" pos:column="100">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="112">.</op:operator><call><name pos:line="129" pos:column="113">GetMethod</name><argument_list pos:line="129" pos:column="122">(<argument><expr><lit:literal type="string" pos:line="129" pos:column="123">"CreateChildControls"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="146">BindingFlags</name><op:operator pos:line="129" pos:column="158">.</op:operator><name pos:line="129" pos:column="159">Instance</name></name> <op:operator pos:line="129" pos:column="168">|</op:operator> <name><name pos:line="129" pos:column="170">BindingFlags</name><op:operator pos:line="129" pos:column="182">.</op:operator><name pos:line="129" pos:column="183">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="131" pos:column="9">protected</specifier> <specifier pos:line="131" pos:column="19">override</specifier> <name pos:line="131" pos:column="28">void</name></type> <name pos:line="131" pos:column="33">CreateChildControls</name><parameter_list pos:line="131" pos:column="52">()</parameter_list>
        <block pos:line="132" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">CopyAccessState</name><argument_list pos:line="133" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="134" pos:column="13">CreateChildControlsInfo</name><op:operator pos:line="134" pos:column="36">.</op:operator><name pos:line="134" pos:column="37">Invoke</name></name><argument_list pos:line="134" pos:column="43">(<argument><expr><name pos:line="134" pos:column="44">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="58">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="137" pos:column="9">private</specifier> <specifier pos:line="137" pos:column="17">static</specifier> <specifier pos:line="137" pos:column="24">readonly</specifier> <name pos:line="137" pos:column="33">MethodInfo</name></type> <name pos:line="137" pos:column="44">EndRenderInfo</name> <init pos:line="137" pos:column="58">= <expr><call><name pos:line="137" pos:column="60">typeof</name><argument_list pos:line="137" pos:column="66">(<argument><expr><name><name pos:line="137" pos:column="67">System</name><op:operator pos:line="137" pos:column="73">.</op:operator><name pos:line="137" pos:column="74">Web</name><op:operator pos:line="137" pos:column="77">.</op:operator><name pos:line="137" pos:column="78">UI</name><op:operator pos:line="137" pos:column="80">.</op:operator><name pos:line="137" pos:column="81">Adapters</name><op:operator pos:line="137" pos:column="89">.</op:operator><name pos:line="137" pos:column="90">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="137" pos:column="102">.</op:operator><call><name pos:line="137" pos:column="103">GetMethod</name><argument_list pos:line="137" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="113">"EndRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="126">BindingFlags</name><op:operator pos:line="137" pos:column="138">.</op:operator><name pos:line="137" pos:column="139">Instance</name></name> <op:operator pos:line="137" pos:column="148">|</op:operator> <name><name pos:line="137" pos:column="150">BindingFlags</name><op:operator pos:line="137" pos:column="162">.</op:operator><name pos:line="137" pos:column="163">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="139" pos:column="9">protected</specifier> <specifier pos:line="139" pos:column="19">override</specifier> <name pos:line="139" pos:column="28">void</name></type> <name pos:line="139" pos:column="33">EndRender</name><parameter_list pos:line="139" pos:column="42">(<param><decl><type><name pos:line="139" pos:column="43">HtmlTextWriter</name></type> <name pos:line="139" pos:column="58">writer</name></decl></param>)</parameter_list>
        <block pos:line="140" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="141" pos:column="13">CopyAccessState</name><argument_list pos:line="141" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="142" pos:column="13">EndRenderInfo</name><op:operator pos:line="142" pos:column="26">.</op:operator><name pos:line="142" pos:column="27">Invoke</name></name><argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="142" pos:column="48">new</op:operator> <name><name pos:line="142" pos:column="52">object</name><index pos:line="142" pos:column="58">[]</index></name> <block pos:line="142" pos:column="61">{ <expr><name pos:line="142" pos:column="63">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="145" pos:column="9">private</specifier> <specifier pos:line="145" pos:column="17">static</specifier> <specifier pos:line="145" pos:column="24">readonly</specifier> <name pos:line="145" pos:column="33">MethodInfo</name></type> <name pos:line="145" pos:column="44">GetPostBackFormReferenceInfo</name> <init pos:line="145" pos:column="73">= <expr><call><name pos:line="145" pos:column="75">typeof</name><argument_list pos:line="145" pos:column="81">(<argument><expr><name><name pos:line="145" pos:column="82">System</name><op:operator pos:line="145" pos:column="88">.</op:operator><name pos:line="145" pos:column="89">Web</name><op:operator pos:line="145" pos:column="92">.</op:operator><name pos:line="145" pos:column="93">UI</name><op:operator pos:line="145" pos:column="95">.</op:operator><name pos:line="145" pos:column="96">Adapters</name><op:operator pos:line="145" pos:column="104">.</op:operator><name pos:line="145" pos:column="105">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="145" pos:column="117">.</op:operator><call><name pos:line="145" pos:column="118">GetMethod</name><argument_list pos:line="145" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="128">"GetPostBackFormReference"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="156">BindingFlags</name><op:operator pos:line="145" pos:column="168">.</op:operator><name pos:line="145" pos:column="169">Instance</name></name> <op:operator pos:line="145" pos:column="178">|</op:operator> <name><name pos:line="145" pos:column="180">BindingFlags</name><op:operator pos:line="145" pos:column="192">.</op:operator><name pos:line="145" pos:column="193">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="147" pos:column="9">protected</specifier> <specifier pos:line="147" pos:column="19">override</specifier> <name pos:line="147" pos:column="28">string</name></type> <name pos:line="147" pos:column="35">GetPostBackFormReference</name><parameter_list pos:line="147" pos:column="59">(<param><decl><type><name pos:line="147" pos:column="60">string</name></type> <name pos:line="147" pos:column="67">formId</name></decl></param>)</parameter_list>
        <block pos:line="148" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">CopyAccessState</name><argument_list pos:line="149" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="150" pos:column="13">return <expr><op:operator pos:line="150" pos:column="20">(</op:operator><name pos:line="150" pos:column="21">string</name><op:operator pos:line="150" pos:column="27">)</op:operator><call><name><name pos:line="150" pos:column="28">GetPostBackFormReferenceInfo</name><op:operator pos:line="150" pos:column="56">.</op:operator><name pos:line="150" pos:column="57">Invoke</name></name><argument_list pos:line="150" pos:column="63">(<argument><expr><name pos:line="150" pos:column="64">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="150" pos:column="78">new</op:operator> <name><name pos:line="150" pos:column="82">object</name><index pos:line="150" pos:column="88">[]</index></name> <block pos:line="150" pos:column="91">{ <expr><name pos:line="150" pos:column="93">formId</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="153" pos:column="9">private</specifier> <specifier pos:line="153" pos:column="17">static</specifier> <specifier pos:line="153" pos:column="24">readonly</specifier> <name pos:line="153" pos:column="33">MethodInfo</name></type> <name pos:line="153" pos:column="44">LoadAdapterControlStateInfo</name> <init pos:line="153" pos:column="72">= <expr><call><name pos:line="153" pos:column="74">typeof</name><argument_list pos:line="153" pos:column="80">(<argument><expr><name><name pos:line="153" pos:column="81">System</name><op:operator pos:line="153" pos:column="87">.</op:operator><name pos:line="153" pos:column="88">Web</name><op:operator pos:line="153" pos:column="91">.</op:operator><name pos:line="153" pos:column="92">UI</name><op:operator pos:line="153" pos:column="94">.</op:operator><name pos:line="153" pos:column="95">Adapters</name><op:operator pos:line="153" pos:column="103">.</op:operator><name pos:line="153" pos:column="104">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="153" pos:column="116">.</op:operator><call><name pos:line="153" pos:column="117">GetMethod</name><argument_list pos:line="153" pos:column="126">(<argument><expr><lit:literal type="string" pos:line="153" pos:column="127">"LoadAdapterControlState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="154">BindingFlags</name><op:operator pos:line="153" pos:column="166">.</op:operator><name pos:line="153" pos:column="167">Instance</name></name> <op:operator pos:line="153" pos:column="176">|</op:operator> <name><name pos:line="153" pos:column="178">BindingFlags</name><op:operator pos:line="153" pos:column="190">.</op:operator><name pos:line="153" pos:column="191">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="155" pos:column="9">protected</specifier> <specifier pos:line="155" pos:column="19">override</specifier> <name pos:line="155" pos:column="28">void</name></type> <name pos:line="155" pos:column="33">LoadAdapterControlState</name><parameter_list pos:line="155" pos:column="56">(<param><decl><type><name pos:line="155" pos:column="57">object</name></type> <name pos:line="155" pos:column="64">state</name></decl></param>)</parameter_list>
        <block pos:line="156" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="157" pos:column="13">CopyAccessState</name><argument_list pos:line="157" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="158" pos:column="13">LoadAdapterControlStateInfo</name><op:operator pos:line="158" pos:column="40">.</op:operator><name pos:line="158" pos:column="41">Invoke</name></name><argument_list pos:line="158" pos:column="47">(<argument><expr><name pos:line="158" pos:column="48">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="158" pos:column="62">new</op:operator> <name><name pos:line="158" pos:column="66">object</name><index pos:line="158" pos:column="72">[]</index></name> <block pos:line="158" pos:column="75">{ <expr><name pos:line="158" pos:column="77">state</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="161" pos:column="9">private</specifier> <specifier pos:line="161" pos:column="17">static</specifier> <specifier pos:line="161" pos:column="24">readonly</specifier> <name pos:line="161" pos:column="33">MethodInfo</name></type> <name pos:line="161" pos:column="44">LoadAdapterViewStateInfo</name> <init pos:line="161" pos:column="69">= <expr><call><name pos:line="161" pos:column="71">typeof</name><argument_list pos:line="161" pos:column="77">(<argument><expr><name><name pos:line="161" pos:column="78">System</name><op:operator pos:line="161" pos:column="84">.</op:operator><name pos:line="161" pos:column="85">Web</name><op:operator pos:line="161" pos:column="88">.</op:operator><name pos:line="161" pos:column="89">UI</name><op:operator pos:line="161" pos:column="91">.</op:operator><name pos:line="161" pos:column="92">Adapters</name><op:operator pos:line="161" pos:column="100">.</op:operator><name pos:line="161" pos:column="101">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="161" pos:column="113">.</op:operator><call><name pos:line="161" pos:column="114">GetMethod</name><argument_list pos:line="161" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="124">"LoadAdapterViewState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="148">BindingFlags</name><op:operator pos:line="161" pos:column="160">.</op:operator><name pos:line="161" pos:column="161">Instance</name></name> <op:operator pos:line="161" pos:column="170">|</op:operator> <name><name pos:line="161" pos:column="172">BindingFlags</name><op:operator pos:line="161" pos:column="184">.</op:operator><name pos:line="161" pos:column="185">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="163" pos:column="9">protected</specifier> <specifier pos:line="163" pos:column="19">override</specifier> <name pos:line="163" pos:column="28">void</name></type> <name pos:line="163" pos:column="33">LoadAdapterViewState</name><parameter_list pos:line="163" pos:column="53">(<param><decl><type><name pos:line="163" pos:column="54">object</name></type> <name pos:line="163" pos:column="61">state</name></decl></param>)</parameter_list>
        <block pos:line="164" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="165" pos:column="13">LoadAdapterViewStateInfo</name><op:operator pos:line="165" pos:column="37">.</op:operator><name pos:line="165" pos:column="38">Invoke</name></name><argument_list pos:line="165" pos:column="44">(<argument><expr><name pos:line="165" pos:column="45">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="165" pos:column="59">new</op:operator> <name><name pos:line="165" pos:column="63">object</name><index pos:line="165" pos:column="69">[]</index></name> <block pos:line="165" pos:column="72">{ <expr><name pos:line="165" pos:column="74">state</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="168" pos:column="9">private</specifier> <specifier pos:line="168" pos:column="17">static</specifier> <specifier pos:line="168" pos:column="24">readonly</specifier> <name pos:line="168" pos:column="33">MethodInfo</name></type> <name pos:line="168" pos:column="44">OnInitInfo</name> <init pos:line="168" pos:column="55">= <expr><call><name pos:line="168" pos:column="57">typeof</name><argument_list pos:line="168" pos:column="63">(<argument><expr><name><name pos:line="168" pos:column="64">System</name><op:operator pos:line="168" pos:column="70">.</op:operator><name pos:line="168" pos:column="71">Web</name><op:operator pos:line="168" pos:column="74">.</op:operator><name pos:line="168" pos:column="75">UI</name><op:operator pos:line="168" pos:column="77">.</op:operator><name pos:line="168" pos:column="78">Adapters</name><op:operator pos:line="168" pos:column="86">.</op:operator><name pos:line="168" pos:column="87">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="168" pos:column="99">.</op:operator><call><name pos:line="168" pos:column="100">GetMethod</name><argument_list pos:line="168" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="168" pos:column="110">"OnInit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="120">BindingFlags</name><op:operator pos:line="168" pos:column="132">.</op:operator><name pos:line="168" pos:column="133">Instance</name></name> <op:operator pos:line="168" pos:column="142">|</op:operator> <name><name pos:line="168" pos:column="144">BindingFlags</name><op:operator pos:line="168" pos:column="156">.</op:operator><name pos:line="168" pos:column="157">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="170" pos:column="9">protected</specifier> <specifier pos:line="170" pos:column="19">override</specifier> <name pos:line="170" pos:column="28">void</name></type> <name pos:line="170" pos:column="33">OnInit</name><parameter_list pos:line="170" pos:column="39">(<param><decl><type><name pos:line="170" pos:column="40">EventArgs</name></type> <name pos:line="170" pos:column="50">e</name></decl></param>)</parameter_list>
        <block pos:line="171" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="172" pos:column="13">CopyAccessState</name><argument_list pos:line="172" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="173" pos:column="13">OnInitInfo</name><op:operator pos:line="173" pos:column="23">.</op:operator><name pos:line="173" pos:column="24">Invoke</name></name><argument_list pos:line="173" pos:column="30">(<argument><expr><name pos:line="173" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="173" pos:column="45">new</op:operator> <name><name pos:line="173" pos:column="49">object</name><index pos:line="173" pos:column="55">[]</index></name> <block pos:line="173" pos:column="58">{ <expr><name pos:line="173" pos:column="60">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="176" pos:column="9">private</specifier> <specifier pos:line="176" pos:column="17">static</specifier> <specifier pos:line="176" pos:column="24">readonly</specifier> <name pos:line="176" pos:column="33">MethodInfo</name></type> <name pos:line="176" pos:column="44">OnLoadInfo</name> <init pos:line="176" pos:column="55">= <expr><call><name pos:line="176" pos:column="57">typeof</name><argument_list pos:line="176" pos:column="63">(<argument><expr><name><name pos:line="176" pos:column="64">System</name><op:operator pos:line="176" pos:column="70">.</op:operator><name pos:line="176" pos:column="71">Web</name><op:operator pos:line="176" pos:column="74">.</op:operator><name pos:line="176" pos:column="75">UI</name><op:operator pos:line="176" pos:column="77">.</op:operator><name pos:line="176" pos:column="78">Adapters</name><op:operator pos:line="176" pos:column="86">.</op:operator><name pos:line="176" pos:column="87">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="176" pos:column="99">.</op:operator><call><name pos:line="176" pos:column="100">GetMethod</name><argument_list pos:line="176" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="176" pos:column="110">"OnLoad"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="120">BindingFlags</name><op:operator pos:line="176" pos:column="132">.</op:operator><name pos:line="176" pos:column="133">Instance</name></name> <op:operator pos:line="176" pos:column="142">|</op:operator> <name><name pos:line="176" pos:column="144">BindingFlags</name><op:operator pos:line="176" pos:column="156">.</op:operator><name pos:line="176" pos:column="157">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="178" pos:column="9">protected</specifier> <specifier pos:line="178" pos:column="19">override</specifier> <name pos:line="178" pos:column="28">void</name></type> <name pos:line="178" pos:column="33">OnLoad</name><parameter_list pos:line="178" pos:column="39">(<param><decl><type><name pos:line="178" pos:column="40">EventArgs</name></type> <name pos:line="178" pos:column="50">e</name></decl></param>)</parameter_list>
        <block pos:line="179" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">CopyAccessState</name><argument_list pos:line="180" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="181" pos:column="13">OnLoadInfo</name><op:operator pos:line="181" pos:column="23">.</op:operator><name pos:line="181" pos:column="24">Invoke</name></name><argument_list pos:line="181" pos:column="30">(<argument><expr><name pos:line="181" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="181" pos:column="45">new</op:operator> <name><name pos:line="181" pos:column="49">object</name><index pos:line="181" pos:column="55">[]</index></name> <block pos:line="181" pos:column="58">{ <expr><name pos:line="181" pos:column="60">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="184" pos:column="9">private</specifier> <specifier pos:line="184" pos:column="17">static</specifier> <specifier pos:line="184" pos:column="24">readonly</specifier> <name pos:line="184" pos:column="33">MethodInfo</name></type> <name pos:line="184" pos:column="44">OnPreRenderInfo</name> <init pos:line="184" pos:column="60">= <expr><call><name pos:line="184" pos:column="62">typeof</name><argument_list pos:line="184" pos:column="68">(<argument><expr><name><name pos:line="184" pos:column="69">System</name><op:operator pos:line="184" pos:column="75">.</op:operator><name pos:line="184" pos:column="76">Web</name><op:operator pos:line="184" pos:column="79">.</op:operator><name pos:line="184" pos:column="80">UI</name><op:operator pos:line="184" pos:column="82">.</op:operator><name pos:line="184" pos:column="83">Adapters</name><op:operator pos:line="184" pos:column="91">.</op:operator><name pos:line="184" pos:column="92">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="184" pos:column="104">.</op:operator><call><name pos:line="184" pos:column="105">GetMethod</name><argument_list pos:line="184" pos:column="114">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="115">"OnPreRender"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="130">BindingFlags</name><op:operator pos:line="184" pos:column="142">.</op:operator><name pos:line="184" pos:column="143">Instance</name></name> <op:operator pos:line="184" pos:column="152">|</op:operator> <name><name pos:line="184" pos:column="154">BindingFlags</name><op:operator pos:line="184" pos:column="166">.</op:operator><name pos:line="184" pos:column="167">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="186" pos:column="9">protected</specifier> <specifier pos:line="186" pos:column="19">override</specifier> <name pos:line="186" pos:column="28">void</name></type> <name pos:line="186" pos:column="33">OnPreRender</name><parameter_list pos:line="186" pos:column="44">(<param><decl><type><name pos:line="186" pos:column="45">EventArgs</name></type> <name pos:line="186" pos:column="55">e</name></decl></param>)</parameter_list>
        <block pos:line="187" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="188" pos:column="13">CopyAccessState</name><argument_list pos:line="188" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">OnPreRenderInfo</name><op:operator pos:line="189" pos:column="28">.</op:operator><name pos:line="189" pos:column="29">Invoke</name></name><argument_list pos:line="189" pos:column="35">(<argument><expr><name pos:line="189" pos:column="36">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="189" pos:column="50">new</op:operator> <name><name pos:line="189" pos:column="54">object</name><index pos:line="189" pos:column="60">[]</index></name> <block pos:line="189" pos:column="63">{ <expr><name pos:line="189" pos:column="65">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="192" pos:column="9">private</specifier> <specifier pos:line="192" pos:column="17">static</specifier> <specifier pos:line="192" pos:column="24">readonly</specifier> <name pos:line="192" pos:column="33">MethodInfo</name></type> <name pos:line="192" pos:column="44">OnUnloadInfo</name> <init pos:line="192" pos:column="57">= <expr><call><name pos:line="192" pos:column="59">typeof</name><argument_list pos:line="192" pos:column="65">(<argument><expr><name><name pos:line="192" pos:column="66">System</name><op:operator pos:line="192" pos:column="72">.</op:operator><name pos:line="192" pos:column="73">Web</name><op:operator pos:line="192" pos:column="76">.</op:operator><name pos:line="192" pos:column="77">UI</name><op:operator pos:line="192" pos:column="79">.</op:operator><name pos:line="192" pos:column="80">Adapters</name><op:operator pos:line="192" pos:column="88">.</op:operator><name pos:line="192" pos:column="89">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="192" pos:column="101">.</op:operator><call><name pos:line="192" pos:column="102">GetMethod</name><argument_list pos:line="192" pos:column="111">(<argument><expr><lit:literal type="string" pos:line="192" pos:column="112">"OnUnload"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="124">BindingFlags</name><op:operator pos:line="192" pos:column="136">.</op:operator><name pos:line="192" pos:column="137">Instance</name></name> <op:operator pos:line="192" pos:column="146">|</op:operator> <name><name pos:line="192" pos:column="148">BindingFlags</name><op:operator pos:line="192" pos:column="160">.</op:operator><name pos:line="192" pos:column="161">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="194" pos:column="9">protected</specifier> <specifier pos:line="194" pos:column="19">override</specifier> <name pos:line="194" pos:column="28">void</name></type> <name pos:line="194" pos:column="33">OnUnload</name><parameter_list pos:line="194" pos:column="41">(<param><decl><type><name pos:line="194" pos:column="42">EventArgs</name></type> <name pos:line="194" pos:column="52">e</name></decl></param>)</parameter_list>
        <block pos:line="195" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="196" pos:column="13">CopyAccessState</name><argument_list pos:line="196" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="197" pos:column="13">OnUnloadInfo</name><op:operator pos:line="197" pos:column="25">.</op:operator><name pos:line="197" pos:column="26">Invoke</name></name><argument_list pos:line="197" pos:column="32">(<argument><expr><name pos:line="197" pos:column="33">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="197" pos:column="47">new</op:operator> <name><name pos:line="197" pos:column="51">object</name><index pos:line="197" pos:column="57">[]</index></name> <block pos:line="197" pos:column="60">{ <expr><name pos:line="197" pos:column="62">e</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="200" pos:column="9">private</specifier> <specifier pos:line="200" pos:column="17">static</specifier> <specifier pos:line="200" pos:column="24">readonly</specifier> <name pos:line="200" pos:column="33">MethodInfo</name></type> <name pos:line="200" pos:column="44">RenderInfo</name> <init pos:line="200" pos:column="55">= <expr><call><name pos:line="200" pos:column="57">typeof</name><argument_list pos:line="200" pos:column="63">(<argument><expr><name><name pos:line="200" pos:column="64">System</name><op:operator pos:line="200" pos:column="70">.</op:operator><name pos:line="200" pos:column="71">Web</name><op:operator pos:line="200" pos:column="74">.</op:operator><name pos:line="200" pos:column="75">UI</name><op:operator pos:line="200" pos:column="77">.</op:operator><name pos:line="200" pos:column="78">Adapters</name><op:operator pos:line="200" pos:column="86">.</op:operator><name pos:line="200" pos:column="87">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="200" pos:column="99">.</op:operator><call><name pos:line="200" pos:column="100">GetMethod</name><argument_list pos:line="200" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="200" pos:column="110">"Render"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="120">BindingFlags</name><op:operator pos:line="200" pos:column="132">.</op:operator><name pos:line="200" pos:column="133">Instance</name></name> <op:operator pos:line="200" pos:column="142">|</op:operator> <name><name pos:line="200" pos:column="144">BindingFlags</name><op:operator pos:line="200" pos:column="156">.</op:operator><name pos:line="200" pos:column="157">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="202" pos:column="9">protected</specifier> <specifier pos:line="202" pos:column="19">override</specifier> <name pos:line="202" pos:column="28">void</name></type> <name pos:line="202" pos:column="33">Render</name><parameter_list pos:line="202" pos:column="39">(<param><decl><type><name pos:line="202" pos:column="40">HtmlTextWriter</name></type> <name pos:line="202" pos:column="55">writer</name></decl></param>)</parameter_list>
        <block pos:line="203" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="204" pos:column="13">CopyAccessState</name><argument_list pos:line="204" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="205" pos:column="13">RenderInfo</name><op:operator pos:line="205" pos:column="23">.</op:operator><name pos:line="205" pos:column="24">Invoke</name></name><argument_list pos:line="205" pos:column="30">(<argument><expr><name pos:line="205" pos:column="31">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="205" pos:column="45">new</op:operator> <name><name pos:line="205" pos:column="49">object</name><index pos:line="205" pos:column="55">[]</index></name> <block pos:line="205" pos:column="58">{ <expr><name pos:line="205" pos:column="60">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="208" pos:column="9">private</specifier> <specifier pos:line="208" pos:column="17">static</specifier> <specifier pos:line="208" pos:column="24">readonly</specifier> <name pos:line="208" pos:column="33">MethodInfo</name></type> <name pos:line="208" pos:column="44">RenderChildrenInfo</name> <init pos:line="208" pos:column="63">= <expr><call><name pos:line="208" pos:column="65">typeof</name><argument_list pos:line="208" pos:column="71">(<argument><expr><name><name pos:line="208" pos:column="72">System</name><op:operator pos:line="208" pos:column="78">.</op:operator><name pos:line="208" pos:column="79">Web</name><op:operator pos:line="208" pos:column="82">.</op:operator><name pos:line="208" pos:column="83">UI</name><op:operator pos:line="208" pos:column="85">.</op:operator><name pos:line="208" pos:column="86">Adapters</name><op:operator pos:line="208" pos:column="94">.</op:operator><name pos:line="208" pos:column="95">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="208" pos:column="107">.</op:operator><call><name pos:line="208" pos:column="108">GetMethod</name><argument_list pos:line="208" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="118">"RenderChildren"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="136">BindingFlags</name><op:operator pos:line="208" pos:column="148">.</op:operator><name pos:line="208" pos:column="149">Instance</name></name> <op:operator pos:line="208" pos:column="158">|</op:operator> <name><name pos:line="208" pos:column="160">BindingFlags</name><op:operator pos:line="208" pos:column="172">.</op:operator><name pos:line="208" pos:column="173">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="210" pos:column="9">protected</specifier> <specifier pos:line="210" pos:column="19">override</specifier> <name pos:line="210" pos:column="28">void</name></type> <name pos:line="210" pos:column="33">RenderChildren</name><parameter_list pos:line="210" pos:column="47">(<param><decl><type><name pos:line="210" pos:column="48">HtmlTextWriter</name></type> <name pos:line="210" pos:column="63">writer</name></decl></param>)</parameter_list>
        <block pos:line="211" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="212" pos:column="13">CopyAccessState</name><argument_list pos:line="212" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="213" pos:column="13">RenderChildrenInfo</name><op:operator pos:line="213" pos:column="31">.</op:operator><name pos:line="213" pos:column="32">Invoke</name></name><argument_list pos:line="213" pos:column="38">(<argument><expr><name pos:line="213" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><op:operator pos:line="213" pos:column="53">new</op:operator> <name><name pos:line="213" pos:column="57">object</name><index pos:line="213" pos:column="63">[]</index></name> <block pos:line="213" pos:column="66">{ <expr><name pos:line="213" pos:column="68">writer</name></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="216" pos:column="9">private</specifier> <specifier pos:line="216" pos:column="17">static</specifier> <specifier pos:line="216" pos:column="24">readonly</specifier> <name pos:line="216" pos:column="33">MethodInfo</name></type> <name pos:line="216" pos:column="44">SaveAdapterControlStateInfo</name> <init pos:line="216" pos:column="72">= <expr><call><name pos:line="216" pos:column="74">typeof</name><argument_list pos:line="216" pos:column="80">(<argument><expr><name><name pos:line="216" pos:column="81">System</name><op:operator pos:line="216" pos:column="87">.</op:operator><name pos:line="216" pos:column="88">Web</name><op:operator pos:line="216" pos:column="91">.</op:operator><name pos:line="216" pos:column="92">UI</name><op:operator pos:line="216" pos:column="94">.</op:operator><name pos:line="216" pos:column="95">Adapters</name><op:operator pos:line="216" pos:column="103">.</op:operator><name pos:line="216" pos:column="104">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="216" pos:column="116">.</op:operator><call><name pos:line="216" pos:column="117">GetMethod</name><argument_list pos:line="216" pos:column="126">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="127">"SaveAdapterControlState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="154">BindingFlags</name><op:operator pos:line="216" pos:column="166">.</op:operator><name pos:line="216" pos:column="167">Instance</name></name> <op:operator pos:line="216" pos:column="176">|</op:operator> <name><name pos:line="216" pos:column="178">BindingFlags</name><op:operator pos:line="216" pos:column="190">.</op:operator><name pos:line="216" pos:column="191">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="218" pos:column="9">protected</specifier> <specifier pos:line="218" pos:column="19">override</specifier> <name pos:line="218" pos:column="28">object</name></type> <name pos:line="218" pos:column="35">SaveAdapterControlState</name><parameter_list pos:line="218" pos:column="58">()</parameter_list>
        <block pos:line="219" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="220" pos:column="13">CopyAccessState</name><argument_list pos:line="220" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="221" pos:column="13">return <expr><call><name><name pos:line="221" pos:column="20">SaveAdapterControlStateInfo</name><op:operator pos:line="221" pos:column="47">.</op:operator><name pos:line="221" pos:column="48">Invoke</name></name><argument_list pos:line="221" pos:column="54">(<argument><expr><name pos:line="221" pos:column="55">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="69">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <decl_stmt><decl><type><specifier pos:line="224" pos:column="9">private</specifier> <specifier pos:line="224" pos:column="17">static</specifier> <specifier pos:line="224" pos:column="24">readonly</specifier> <name pos:line="224" pos:column="33">MethodInfo</name></type> <name pos:line="224" pos:column="44">SaveAdapterViewStateInfo</name> <init pos:line="224" pos:column="69">= <expr><call><name pos:line="224" pos:column="71">typeof</name><argument_list pos:line="224" pos:column="77">(<argument><expr><name><name pos:line="224" pos:column="78">System</name><op:operator pos:line="224" pos:column="84">.</op:operator><name pos:line="224" pos:column="85">Web</name><op:operator pos:line="224" pos:column="88">.</op:operator><name pos:line="224" pos:column="89">UI</name><op:operator pos:line="224" pos:column="91">.</op:operator><name pos:line="224" pos:column="92">Adapters</name><op:operator pos:line="224" pos:column="100">.</op:operator><name pos:line="224" pos:column="101">PageAdapter</name></name></expr></argument>)</argument_list></call><op:operator pos:line="224" pos:column="113">.</op:operator><call><name pos:line="224" pos:column="114">GetMethod</name><argument_list pos:line="224" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="224" pos:column="124">"SaveAdapterViewState"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="224" pos:column="148">BindingFlags</name><op:operator pos:line="224" pos:column="160">.</op:operator><name pos:line="224" pos:column="161">Instance</name></name> <op:operator pos:line="224" pos:column="170">|</op:operator> <name><name pos:line="224" pos:column="172">BindingFlags</name><op:operator pos:line="224" pos:column="184">.</op:operator><name pos:line="224" pos:column="185">NonPublic</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <function><type><specifier pos:line="226" pos:column="9">protected</specifier> <specifier pos:line="226" pos:column="19">override</specifier> <name pos:line="226" pos:column="28">object</name></type> <name pos:line="226" pos:column="35">SaveAdapterViewState</name><parameter_list pos:line="226" pos:column="55">()</parameter_list>
        <block pos:line="227" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">CopyAccessState</name><argument_list pos:line="228" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="229" pos:column="13">return <expr><call><name><name pos:line="229" pos:column="20">SaveAdapterViewStateInfo</name><op:operator pos:line="229" pos:column="44">.</op:operator><name pos:line="229" pos:column="45">Invoke</name></name><argument_list pos:line="229" pos:column="51">(<argument><expr><name pos:line="229" pos:column="52">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="66">null</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="232" pos:column="9">private</specifier> <name pos:line="232" pos:column="17">void</name></type> <name pos:line="232" pos:column="22">CopyAccessState</name><parameter_list pos:line="232" pos:column="37">()</parameter_list>
        <block pos:line="233" pos:column="9">{
            <if pos:line="234" pos:column="13">if <condition pos:line="234" pos:column="16">(<expr><op:operator pos:line="234" pos:column="17">!</op:operator><name pos:line="234" pos:column="18">PageAdapterStateCopied</name></expr>)</condition><then pos:line="234" pos:column="41">
            <block pos:line="235" pos:column="13">{ 
                <expr_stmt><expr><call><name><name pos:line="236" pos:column="17">browserField</name><op:operator pos:line="236" pos:column="29">.</op:operator><name pos:line="236" pos:column="30">SetValue</name></name><argument_list pos:line="236" pos:column="38">(<argument><expr><name pos:line="236" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="53">Browser</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="237" pos:column="17">controlField</name><op:operator pos:line="237" pos:column="29">.</op:operator><name pos:line="237" pos:column="30">SetValue</name></name><argument_list pos:line="237" pos:column="38">(<argument><expr><name pos:line="237" pos:column="39">InnerAdapter</name></expr></argument>, <argument><expr><name pos:line="237" pos:column="53">Control</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><name pos:line="239" pos:column="17">PageAdapterStateCopied</name> <op:operator pos:line="239" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="239" pos:column="42">true</lit:literal></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
