<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.AspNet\AlternateType\RouteConstraintRegex.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Globalization</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Text</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">RegularExpressions</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Routing</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">AspNet</name><op:operator pos:line="7" pos:column="25">.</op:operator><name pos:line="7" pos:column="26">AlternateType</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">RouteConstraintRegex</name> <super pos:line="9" pos:column="39">: <name pos:line="9" pos:column="41">IRouteConstraint</name></super>
    <block pos:line="10" pos:column="5">{
        <constructor><specifier pos:line="11" pos:column="9">public</specifier> <name pos:line="11" pos:column="16">RouteConstraintRegex</name><parameter_list pos:line="11" pos:column="36">(<param><decl><type><name pos:line="11" pos:column="37">string</name></type> <name pos:line="11" pos:column="44">constraint</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">constraint</name> <op:operator pos:line="13" pos:column="28">==</op:operator> <name pos:line="13" pos:column="31">null</name></expr>)</condition><then pos:line="13" pos:column="36">
            <block pos:line="14" pos:column="13">{
                <throw pos:line="15" pos:column="17">throw <expr><op:operator pos:line="15" pos:column="23">new</op:operator> <call><name pos:line="15" pos:column="27">ArgumentNullException</name><argument_list pos:line="15" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="15" pos:column="49">"constraint"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
            }</block></then></if>

            <expr_stmt><expr><name pos:line="18" pos:column="13">Constraint</name> <op:operator pos:line="18" pos:column="24">=</op:operator> <name pos:line="18" pos:column="26">constraint</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">string</name></type> <name pos:line="21" pos:column="23">Constraint</name> <block pos:line="21" pos:column="34">{ <function_decl><name pos:line="21" pos:column="36">get</name>;</function_decl> <function_decl><name pos:line="21" pos:column="41">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">bool</name></type> <name pos:line="23" pos:column="21">Match</name><parameter_list pos:line="23" pos:column="26">(<param><decl><type><name pos:line="23" pos:column="27">HttpContextBase</name></type> <name pos:line="23" pos:column="43">httpContext</name></decl></param>, <param><decl><type><name><name pos:line="23" pos:column="56">System</name><op:operator pos:line="23" pos:column="62">.</op:operator><name pos:line="23" pos:column="63">Web</name><op:operator pos:line="23" pos:column="66">.</op:operator><name pos:line="23" pos:column="67">Routing</name><op:operator pos:line="23" pos:column="74">.</op:operator><name pos:line="23" pos:column="75">Route</name></name></type> <name pos:line="23" pos:column="81">route</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="88">string</name></type> <name pos:line="23" pos:column="95">parameterName</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="110">RouteValueDictionary</name></type> <name pos:line="23" pos:column="131">values</name></decl></param>, <param><decl><type><name pos:line="23" pos:column="139">RouteDirection</name></type> <name pos:line="23" pos:column="154">routeDirection</name></decl></param>)</parameter_list>
        <block pos:line="24" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">object</name></type> <name pos:line="25" pos:column="20">obj</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">values</name><op:operator pos:line="26" pos:column="19">.</op:operator><name pos:line="26" pos:column="20">TryGetValue</name></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">parameterName</name></expr></argument>, <argument><expr pos:line="26" pos:column="47">out <name pos:line="26" pos:column="51">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><call><name><name pos:line="27" pos:column="20">Regex</name><op:operator pos:line="27" pos:column="25">.</op:operator><name pos:line="27" pos:column="26">IsMatch</name></name><argument_list pos:line="27" pos:column="33">(<argument><expr><call><name><name pos:line="27" pos:column="34">Convert</name><op:operator pos:line="27" pos:column="41">.</op:operator><name pos:line="27" pos:column="42">ToString</name></name><argument_list pos:line="27" pos:column="50">(<argument><expr><name pos:line="27" pos:column="51">obj</name></expr></argument>, <argument><expr><op:operator pos:line="27" pos:column="56">(</op:operator><name pos:line="27" pos:column="57">IFormatProvider</name><op:operator pos:line="27" pos:column="72">)</op:operator><name><name pos:line="27" pos:column="73">CultureInfo</name><op:operator pos:line="27" pos:column="84">.</op:operator><name pos:line="27" pos:column="85">InvariantCulture</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="27" pos:column="104">"^("</lit:literal> <op:operator pos:line="27" pos:column="109">+</op:operator> <name pos:line="27" pos:column="111">Constraint</name> <op:operator pos:line="27" pos:column="122">+</op:operator> <lit:literal type="string" pos:line="27" pos:column="124">")$"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="130">RegexOptions</name><op:operator pos:line="27" pos:column="142">.</op:operator><name pos:line="27" pos:column="143">IgnoreCase</name></name> <op:operator pos:line="27" pos:column="154">|</op:operator> <name><name pos:line="27" pos:column="156">RegexOptions</name><op:operator pos:line="27" pos:column="168">.</op:operator><name pos:line="27" pos:column="169">CultureInvariant</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
