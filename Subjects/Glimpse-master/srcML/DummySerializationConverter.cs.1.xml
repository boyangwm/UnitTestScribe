<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Core\TestDoubles\DummySerializationConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>

<namespace pos:line="5" pos:column="1">namespace <name><name pos:line="5" pos:column="11">Glimpse</name><op:operator pos:line="5" pos:column="18">.</op:operator><name pos:line="5" pos:column="19">Test</name><op:operator pos:line="5" pos:column="23">.</op:operator><name pos:line="5" pos:column="24">Core</name><op:operator pos:line="5" pos:column="28">.</op:operator><name pos:line="5" pos:column="29">TestDoubles</name></name>
<block pos:line="6" pos:column="1">{
    <class><specifier pos:line="7" pos:column="5">public</specifier> class <name pos:line="7" pos:column="18">DummySerializationConverter</name><super pos:line="7" pos:column="45">:<name pos:line="7" pos:column="46">ISerializationConverter</name></super>
    <block pos:line="8" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">public</specifier> <name><name pos:line="9" pos:column="16">IEnumerable</name><argument_list pos:line="9" pos:column="27">&lt;<argument><name pos:line="9" pos:column="28">Type</name></argument>&gt;</argument_list></name></type> <name pos:line="9" pos:column="34">SupportedTypes</name>
        <block pos:line="10" pos:column="9">{
            <function><name pos:line="11" pos:column="13">get</name> <block pos:line="11" pos:column="17">{ <return pos:line="11" pos:column="19">return <expr><op:operator pos:line="11" pos:column="26">new</op:operator><index pos:line="11" pos:column="29">[]</index> <block pos:line="11" pos:column="32">{<expr><call><name pos:line="11" pos:column="33">typeof</name> <argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">DummyObjectContext</name></expr></argument>)</argument_list></call></expr>}</block></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">object</name></type> <name pos:line="14" pos:column="23">Convert</name><parameter_list pos:line="14" pos:column="30">(<param><decl><type><name pos:line="14" pos:column="31">object</name></type> <name pos:line="14" pos:column="38">obj</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <throw pos:line="16" pos:column="13">throw <expr><op:operator pos:line="16" pos:column="19">new</op:operator> <call><name pos:line="16" pos:column="23">NotSupportedException</name><argument_list pos:line="16" pos:column="44">()</argument_list></call></expr>;</throw>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
