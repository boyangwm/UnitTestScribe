<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Extensibility\IKey.cs" pos:tabs="8"><namespace pos:line="1" pos:column="1">namespace <name><name pos:line="1" pos:column="11">Glimpse</name><op:operator pos:line="1" pos:column="18">.</op:operator><name pos:line="1" pos:column="19">Core</name><op:operator pos:line="1" pos:column="23">.</op:operator><name pos:line="1" pos:column="24">Extensibility</name></name>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">/// &lt;summary&gt;</comment>
    <comment type="line" pos:line="4" pos:column="5">/// &lt;c&gt;IKey&lt;/c&gt; provides implementers a means to override the automatically generated key for an object.</comment>
    <comment type="line" pos:line="5" pos:column="5">/// &lt;/summary&gt;</comment>
    <comment type="line" pos:line="6" pos:column="5">/// &lt;remarks&gt;</comment>
    <comment type="line" pos:line="7" pos:column="5">/// &lt;para&gt;</comment>
    <comment type="line" pos:line="8" pos:column="5">/// &lt;c&gt;IKey&lt;/c&gt; is used by &lt;see cref="ITab"/&gt; and &lt;see cref="IResource"/&gt; implementations that need consistent and predictable</comment>
    <comment type="line" pos:line="9" pos:column="5">/// key names for client side interaction.</comment>
    <comment type="line" pos:line="10" pos:column="5">/// &lt;/para&gt;</comment>
    <comment type="line" pos:line="11" pos:column="5">/// &lt;para&gt;</comment>
    <comment type="line" pos:line="12" pos:column="5">/// All keys, rather dynamically generated or specified with &lt;see cref="IKey"/&gt; have spaces (&lt;c&gt;' '&lt;/c&gt;) and periods (&lt;c&gt;'.'&lt;/c&gt;) removed, </comment>
    <comment type="line" pos:line="13" pos:column="5">/// and are converted to lower case for consistency and simplification of JavaScript access.</comment>
    <comment type="line" pos:line="14" pos:column="5">/// &lt;/para&gt;</comment>
    <comment type="line" pos:line="15" pos:column="5">/// &lt;/remarks&gt;</comment>
    <class type="interface"><specifier pos:line="16" pos:column="5">public</specifier> interface <name pos:line="16" pos:column="22">IKey</name>
    <block pos:line="17" pos:column="5">{
        <comment type="line" pos:line="18" pos:column="9">/// &lt;summary&gt;</comment>
        <comment type="line" pos:line="19" pos:column="9">/// Gets the key.</comment>
        <comment type="line" pos:line="20" pos:column="9">/// &lt;/summary&gt;</comment>
        <comment type="line" pos:line="21" pos:column="9">/// &lt;value&gt;The key. Only valid JavaScript identifiers should be used for future compatibility.&lt;/value&gt;</comment>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">string</name></type> <name pos:line="22" pos:column="16">Key</name> <block pos:line="22" pos:column="20">{ <function_decl><name pos:line="22" pos:column="22">get</name>;</function_decl> }</block></decl></decl_stmt>
    }</block></class>
}</block></namespace></unit>
