<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.Integration\WebDriverExtensions.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Drawing</name><op:operator pos:line="2" pos:column="21">.</op:operator><name pos:line="2" pos:column="22">Imaging</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">IO</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">OpenQA</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Selenium</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">OpenQA</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Selenium</name><op:operator pos:line="5" pos:column="22">.</op:operator><name pos:line="5" pos:column="23">Support</name><op:operator pos:line="5" pos:column="30">.</op:operator><name pos:line="5" pos:column="31">UI</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Test</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Integration</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> <specifier pos:line="9" pos:column="12">static</specifier> class <name pos:line="9" pos:column="25">WebDriverExtensions</name>
    <block pos:line="10" pos:column="5">{
        <function><type><specifier pos:line="11" pos:column="9">public</specifier> <specifier pos:line="11" pos:column="16">static</specifier> <name pos:line="11" pos:column="23">IWebElement</name></type> <name pos:line="11" pos:column="35">FindElement</name><parameter_list pos:line="11" pos:column="46">(<param><decl><type><name pos:line="11" pos:column="47">this</name> <name pos:line="11" pos:column="52">IWebDriver</name></type> <name pos:line="11" pos:column="63">driver</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="71">By</name></type> <name pos:line="11" pos:column="74">by</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="78">int</name></type> <name pos:line="11" pos:column="82">timeoutInSeconds</name></decl></param>)</parameter_list>
        <block pos:line="12" pos:column="9">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">timeoutInSeconds</name> <op:operator pos:line="13" pos:column="34">&gt;</op:operator> <lit:literal type="number" pos:line="13" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="13" pos:column="38">
            <block pos:line="14" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="15" pos:column="17">var</name></type> <name pos:line="15" pos:column="21">wait</name> <init pos:line="15" pos:column="26">= <expr><op:operator pos:line="15" pos:column="28">new</op:operator> <call><name pos:line="15" pos:column="32">WebDriverWait</name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">driver</name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="54">TimeSpan</name><op:operator pos:line="15" pos:column="62">.</op:operator><name pos:line="15" pos:column="63">FromSeconds</name></name><argument_list pos:line="15" pos:column="74">(<argument><expr><name pos:line="15" pos:column="75">timeoutInSeconds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return pos:line="16" pos:column="17">return <expr><call><name><name pos:line="16" pos:column="24">wait</name><op:operator pos:line="16" pos:column="28">.</op:operator><name pos:line="16" pos:column="29">Until</name></name><argument_list pos:line="16" pos:column="34">(<argument><expr><lambda><name pos:line="16" pos:column="35">drv</name> <op:operator pos:line="16" pos:column="39">=&gt;</op:operator> <call><name><name pos:line="16" pos:column="42">drv</name><op:operator pos:line="16" pos:column="45">.</op:operator><name pos:line="16" pos:column="46">FindElement</name></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">by</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</return>
            }</block></then></if>

            <return pos:line="19" pos:column="13">return <expr><call><name><name pos:line="19" pos:column="20">driver</name><op:operator pos:line="19" pos:column="26">.</op:operator><name pos:line="19" pos:column="27">FindElement</name></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">by</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="22" pos:column="9">public</specifier> <specifier pos:line="22" pos:column="16">static</specifier> <name pos:line="22" pos:column="23">void</name></type> <name pos:line="22" pos:column="28">SaveScreenshot</name><parameter_list pos:line="22" pos:column="42">(<param><decl><type><name pos:line="22" pos:column="43">this</name> <name pos:line="22" pos:column="48">IWebDriver</name></type> <name pos:line="22" pos:column="59">browser</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="68">string</name></type> <name pos:line="22" pos:column="75">url</name></decl></param>)</parameter_list>
        <block pos:line="23" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">var</name></type> <name pos:line="24" pos:column="17">camera</name> <init pos:line="24" pos:column="24">= <expr><name pos:line="24" pos:column="26">browser</name> <op:operator pos:line="24" pos:column="34">as</op:operator> <name pos:line="24" pos:column="37">ITakesScreenshot</name></expr></init></decl>;</decl_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">camera</name> <op:operator pos:line="26" pos:column="24">!=</op:operator> <name pos:line="26" pos:column="27">null</name></expr>)</condition><then pos:line="26" pos:column="32">
            <block pos:line="27" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">var</name></type> <name pos:line="28" pos:column="21">screenshot</name> <init pos:line="28" pos:column="32">= <expr><call><name><name pos:line="28" pos:column="34">camera</name><op:operator pos:line="28" pos:column="40">.</op:operator><name pos:line="28" pos:column="41">GetScreenshot</name></name><argument_list pos:line="28" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt><expr><call><name><name pos:line="30" pos:column="17">Array</name><op:operator pos:line="30" pos:column="22">.</op:operator><name pos:line="30" pos:column="23">ForEach</name></name><argument_list pos:line="30" pos:column="30">(<argument><expr><call><name><name pos:line="30" pos:column="31">Path</name><op:operator pos:line="30" pos:column="35">.</op:operator><name pos:line="30" pos:column="36">GetInvalidFileNameChars</name></name><argument_list pos:line="30" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><lambda><name pos:line="30" pos:column="63">c</name> <op:operator pos:line="30" pos:column="65">=&gt;</op:operator> <name pos:line="30" pos:column="68">url</name> <op:operator pos:line="30" pos:column="72">=</op:operator> <call><name><name pos:line="30" pos:column="74">url</name><op:operator pos:line="30" pos:column="77">.</op:operator><name pos:line="30" pos:column="78">Replace</name></name><argument_list pos:line="30" pos:column="85">(<argument><expr><call><name><name pos:line="30" pos:column="86">c</name><op:operator pos:line="30" pos:column="87">.</op:operator><name pos:line="30" pos:column="88">ToString</name></name><argument_list pos:line="30" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="100">string</name><op:operator pos:line="30" pos:column="106">.</op:operator><name pos:line="30" pos:column="107">Empty</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">url</name> <op:operator pos:line="31" pos:column="21">=</op:operator> <call><name><name pos:line="31" pos:column="23">url</name><op:operator pos:line="31" pos:column="26">.</op:operator><name pos:line="31" pos:column="27">Replace</name></name><argument_list pos:line="31" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="31" pos:column="35">"http"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">string</name><op:operator pos:line="31" pos:column="49">.</op:operator><name pos:line="31" pos:column="50">Empty</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">screenshot</name><op:operator pos:line="33" pos:column="27">.</op:operator><name pos:line="33" pos:column="28">SaveAsFile</name></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">url</name> <op:operator pos:line="33" pos:column="43">+</op:operator> <lit:literal type="string" pos:line="33" pos:column="45">".png"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="53">ImageFormat</name><op:operator pos:line="33" pos:column="64">.</op:operator><name pos:line="33" pos:column="65">Png</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
