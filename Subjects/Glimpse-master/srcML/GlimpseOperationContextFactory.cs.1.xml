<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WindowsAzure.Storage\Infrastructure\GlimpseOperationContextFactory.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">Core</name><op:operator pos:line="3" pos:column="19">.</op:operator><name pos:line="3" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Microsoft</name><op:operator pos:line="4" pos:column="16">.</op:operator><name pos:line="4" pos:column="17">WindowsAzure</name><op:operator pos:line="4" pos:column="29">.</op:operator><name pos:line="4" pos:column="30">Storage</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">Glimpse</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">WindowsAzure</name><op:operator pos:line="6" pos:column="31">.</op:operator><name pos:line="6" pos:column="32">Storage</name><op:operator pos:line="6" pos:column="39">.</op:operator><name pos:line="6" pos:column="40">Infrastructure</name></name>
<block pos:line="7" pos:column="1">{
    <class><specifier pos:line="8" pos:column="5">public</specifier> class <name pos:line="8" pos:column="18">GlimpseOperationContextFactory</name>
        <super pos:line="9" pos:column="9">: <name pos:line="9" pos:column="11">IOperationContextFactory</name></super>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">protected</specifier> <specifier pos:line="11" pos:column="19">const</specifier> <name pos:line="11" pos:column="25">string</name></type> <name pos:line="11" pos:column="32">Category</name> <init pos:line="11" pos:column="41">= <expr><lit:literal type="string" pos:line="11" pos:column="43">"ASP.NET"</lit:literal></expr></init></decl>;</decl_stmt>

        <constructor><specifier pos:line="13" pos:column="9">public</specifier> <name pos:line="13" pos:column="16">GlimpseOperationContextFactory</name><parameter_list pos:line="13" pos:column="46">(<param><decl><type><name pos:line="13" pos:column="47">IMessageBroker</name></type> <name pos:line="13" pos:column="62">messageBroker</name></decl></param>, <param><decl><type><name><name pos:line="13" pos:column="77">Func</name><argument_list pos:line="13" pos:column="81">&lt;<argument><name pos:line="13" pos:column="82">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="99">timerStrategy</name></decl></param>)</parameter_list>
        <block pos:line="14" pos:column="9">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">MessageBroker</name> <op:operator pos:line="15" pos:column="27">=</op:operator> <name pos:line="15" pos:column="29">messageBroker</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">TimerStrategy</name> <op:operator pos:line="16" pos:column="27">=</op:operator> <name pos:line="16" pos:column="29">timerStrategy</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <name pos:line="19" pos:column="16">IMessageBroker</name></type> <name pos:line="19" pos:column="31">MessageBroker</name> <block pos:line="19" pos:column="45">{ <function_decl><name pos:line="19" pos:column="47">get</name>;</function_decl> <function_decl><name pos:line="19" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name><name pos:line="21" pos:column="16">Func</name><argument_list pos:line="21" pos:column="20">&lt;<argument><name pos:line="21" pos:column="21">IExecutionTimer</name></argument>&gt;</argument_list></name></type> <name pos:line="21" pos:column="38">TimerStrategy</name> <block pos:line="21" pos:column="52">{ <function_decl><name pos:line="21" pos:column="54">get</name>;</function_decl> <function_decl><name pos:line="21" pos:column="59">set</name>;</function_decl> }</block></decl></decl_stmt>

        <function><type><specifier pos:line="23" pos:column="9">public</specifier> <name pos:line="23" pos:column="16">OperationContext</name></type> <name pos:line="23" pos:column="33">Create</name><parameter_list pos:line="23" pos:column="39">()</parameter_list>
        <block pos:line="24" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">var</name></type> <name pos:line="25" pos:column="17">ctx</name> <init pos:line="25" pos:column="21">= <expr><op:operator pos:line="25" pos:column="23">new</op:operator> <call><name pos:line="25" pos:column="27">OperationContext</name><argument_list pos:line="25" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">ctx</name><op:operator pos:line="26" pos:column="16">.</op:operator><name pos:line="26" pos:column="17">ResponseReceived</name></name> <op:operator pos:line="26" pos:column="34">+=</op:operator> <lambda><parameter_list pos:line="26" pos:column="37">(<param><decl><name pos:line="26" pos:column="38">sender</name></decl></param>, <param><decl><name pos:line="26" pos:column="46">args</name></decl></param>)</parameter_list> <op:operator pos:line="26" pos:column="52">=&gt;</op:operator>
                <block pos:line="27" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="28" pos:column="21">var</name></type> <name pos:line="28" pos:column="25">serviceType</name> <init pos:line="28" pos:column="37">= <expr><call><name pos:line="28" pos:column="39">DetermineServiceTypeFromUri</name><argument_list pos:line="28" pos:column="66">(<argument><expr><name><name pos:line="28" pos:column="67">args</name><op:operator pos:line="28" pos:column="71">.</op:operator><name pos:line="28" pos:column="72">Request</name><op:operator pos:line="28" pos:column="79">.</op:operator><name pos:line="28" pos:column="80">RequestUri</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="29" pos:column="21">var</name></type> <name pos:line="29" pos:column="25">point</name> <init pos:line="29" pos:column="31">= <expr><call><name pos:line="29" pos:column="33">TimerStrategy</name><argument_list pos:line="29" pos:column="46">()</argument_list></call><op:operator pos:line="29" pos:column="48">.</op:operator><call><name pos:line="29" pos:column="49">Point</name><argument_list pos:line="29" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt><expr><call><name><name pos:line="31" pos:column="21">MessageBroker</name><op:operator pos:line="31" pos:column="34">.</op:operator><name pos:line="31" pos:column="35">Publish</name></name><argument_list pos:line="31" pos:column="42">(<argument><expr><op:operator pos:line="31" pos:column="43">new</op:operator> <call><name pos:line="31" pos:column="47">WindowsAzureStorageTimelineMessage</name><argument_list pos:line="31" pos:column="81">(<argument><expr><name pos:line="31" pos:column="82">serviceType</name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="95">args</name><op:operator pos:line="31" pos:column="99">.</op:operator><name pos:line="31" pos:column="100">Request</name><op:operator pos:line="31" pos:column="107">.</op:operator><name pos:line="31" pos:column="108">Method</name></name></expr></argument>, <argument><expr><call><name><name pos:line="31" pos:column="116">args</name><op:operator pos:line="31" pos:column="120">.</op:operator><name pos:line="31" pos:column="121">Request</name><op:operator pos:line="31" pos:column="128">.</op:operator><name pos:line="31" pos:column="129">RequestUri</name><op:operator pos:line="31" pos:column="139">.</op:operator><name pos:line="31" pos:column="140">ToString</name></name><argument_list pos:line="31" pos:column="148">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="31" pos:column="152">(</op:operator><name pos:line="31" pos:column="153">int</name><op:operator pos:line="31" pos:column="156">)</op:operator><name><name pos:line="31" pos:column="157">args</name><op:operator pos:line="31" pos:column="161">.</op:operator><name pos:line="31" pos:column="162">Response</name><op:operator pos:line="31" pos:column="170">.</op:operator><name pos:line="31" pos:column="171">StatusCode</name></name></expr></argument>, <argument><expr><call><name><name pos:line="31" pos:column="183">args</name><op:operator pos:line="31" pos:column="187">.</op:operator><name pos:line="31" pos:column="188">RequestInformation</name><op:operator pos:line="31" pos:column="206">.</op:operator><name pos:line="31" pos:column="207">StartTime</name><op:operator pos:line="31" pos:column="216">.</op:operator><name pos:line="31" pos:column="217">ToLocalTime</name></name><argument_list pos:line="31" pos:column="228">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="232">point</name><op:operator pos:line="31" pos:column="237">.</op:operator><name pos:line="31" pos:column="238">StartTime</name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="249">point</name><op:operator pos:line="31" pos:column="254">.</op:operator><name pos:line="31" pos:column="255">Offset</name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="263">args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></lambda></expr>;</expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">ctx</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="36" pos:column="9">private</specifier> <name pos:line="36" pos:column="17">string</name></type> <name pos:line="36" pos:column="24">DetermineServiceTypeFromUri</name><parameter_list pos:line="36" pos:column="51">(<param><decl><type><name pos:line="36" pos:column="52">Uri</name></type> <name pos:line="36" pos:column="56">requestUri</name></decl></param>)</parameter_list>
        <block pos:line="37" pos:column="9">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><call><name><name pos:line="38" pos:column="17">requestUri</name><op:operator pos:line="38" pos:column="27">.</op:operator><name pos:line="38" pos:column="28">Host</name><op:operator pos:line="38" pos:column="32">.</op:operator><name pos:line="38" pos:column="33">Contains</name></name><argument_list pos:line="38" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="42">"blob"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="38" pos:column="50">||</op:operator> <name><name pos:line="38" pos:column="53">requestUri</name><op:operator pos:line="38" pos:column="63">.</op:operator><name pos:line="38" pos:column="64">Port</name></name> <op:operator pos:line="38" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="38" pos:column="72">10000</lit:literal></expr>)</condition><then pos:line="38" pos:column="78">
            <block pos:line="39" pos:column="13">{
                <return pos:line="40" pos:column="17">return <expr><lit:literal type="string" pos:line="40" pos:column="24">"Blob"</lit:literal></expr>;</return>
            }</block></then></if>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name><name pos:line="43" pos:column="17">requestUri</name><op:operator pos:line="43" pos:column="27">.</op:operator><name pos:line="43" pos:column="28">Host</name><op:operator pos:line="43" pos:column="32">.</op:operator><name pos:line="43" pos:column="33">Contains</name></name><argument_list pos:line="43" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="43" pos:column="42">"queue"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="43" pos:column="51">||</op:operator> <name><name pos:line="43" pos:column="54">requestUri</name><op:operator pos:line="43" pos:column="64">.</op:operator><name pos:line="43" pos:column="65">Port</name></name> <op:operator pos:line="43" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="43" pos:column="73">10001</lit:literal></expr>)</condition><then pos:line="43" pos:column="79">
            <block pos:line="44" pos:column="13">{
                <return pos:line="45" pos:column="17">return <expr><lit:literal type="string" pos:line="45" pos:column="24">"Queue"</lit:literal></expr>;</return>
            }</block></then></if>

            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><call><name><name pos:line="48" pos:column="17">requestUri</name><op:operator pos:line="48" pos:column="27">.</op:operator><name pos:line="48" pos:column="28">Host</name><op:operator pos:line="48" pos:column="32">.</op:operator><name pos:line="48" pos:column="33">Contains</name></name><argument_list pos:line="48" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="42">"table"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="48" pos:column="51">||</op:operator> <name><name pos:line="48" pos:column="54">requestUri</name><op:operator pos:line="48" pos:column="64">.</op:operator><name pos:line="48" pos:column="65">Port</name></name> <op:operator pos:line="48" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="48" pos:column="73">10002</lit:literal></expr>)</condition><then pos:line="48" pos:column="79">
            <block pos:line="49" pos:column="13">{
                <return pos:line="50" pos:column="17">return <expr><lit:literal type="string" pos:line="50" pos:column="24">"Table"</lit:literal></expr>;</return>
            }</block></then></if>

            <return pos:line="53" pos:column="13">return <expr><lit:literal type="string" pos:line="53" pos:column="20">"(other)"</lit:literal></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
