<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WebForms\Display\WebForms.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">AspNet</name><op:operator pos:line="4" pos:column="21">.</op:operator><name pos:line="4" pos:column="22">Extensions</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">Core</name><op:operator pos:line="5" pos:column="19">.</op:operator><name pos:line="5" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">Core</name><op:operator pos:line="6" pos:column="19">.</op:operator><name pos:line="6" pos:column="20">Extensions</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">WebForms</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">Inspector</name></name>;</using>

<namespace pos:line="9" pos:column="1">namespace <name><name pos:line="9" pos:column="11">Glimpse</name><op:operator pos:line="9" pos:column="18">.</op:operator><name pos:line="9" pos:column="19">WebForms</name><op:operator pos:line="9" pos:column="27">.</op:operator><name pos:line="9" pos:column="28">Display</name></name>
<block pos:line="10" pos:column="1">{
    <class><attribute pos:line="11" pos:column="5">[<expr><name pos:line="11" pos:column="6">Obsolete</name></expr>]</attribute>
    <specifier pos:line="12" pos:column="5">public</specifier> class <name pos:line="12" pos:column="18">WebForms</name> <super pos:line="12" pos:column="27">: <name pos:line="12" pos:column="29">IDisplay</name>, <name pos:line="12" pos:column="39">ITabSetup</name>, <name pos:line="12" pos:column="50">IKey</name></super>
    <block pos:line="13" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">const</specifier> <name pos:line="14" pos:column="23">string</name></type> <name pos:line="14" pos:column="30">InternalName</name> <init pos:line="14" pos:column="43">= <expr><lit:literal type="string" pos:line="14" pos:column="45">"WebForms"</lit:literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">public</specifier> <name pos:line="16" pos:column="16">string</name></type> <name pos:line="16" pos:column="23">Name</name>
        <block pos:line="17" pos:column="9">{
            <function><name pos:line="18" pos:column="13">get</name> <block pos:line="18" pos:column="17">{ <return pos:line="18" pos:column="19">return <expr><name pos:line="18" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="21" pos:column="9">public</specifier> <name pos:line="21" pos:column="16">string</name></type> <name pos:line="21" pos:column="23">Key</name>
        <block pos:line="22" pos:column="9">{
            <function><name pos:line="23" pos:column="13">get</name> <block pos:line="23" pos:column="17">{ <return pos:line="23" pos:column="19">return <expr><name pos:line="23" pos:column="26">InternalName</name></expr>;</return> }</block></function>
        }</block></decl></decl_stmt>

        <function><type><specifier pos:line="26" pos:column="9">public</specifier> <name pos:line="26" pos:column="16">void</name></type> <name pos:line="26" pos:column="21">Setup</name><parameter_list pos:line="26" pos:column="26">(<param><decl><type><name pos:line="26" pos:column="27">ITabSetupContext</name></type> <name pos:line="26" pos:column="44">context</name></decl></param>)</parameter_list>
        <block pos:line="27" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">context</name><op:operator pos:line="28" pos:column="20">.</op:operator><name><name pos:line="28" pos:column="21">PersistMessages</name><argument_list pos:line="28" pos:column="36">&lt;<argument><name pos:line="28" pos:column="37">PageLifeCycleMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="28" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="31" pos:column="9">public</specifier> <name pos:line="31" pos:column="16">object</name></type> <name pos:line="31" pos:column="23">GetData</name><parameter_list pos:line="31" pos:column="30">(<param><decl><type><name pos:line="31" pos:column="31">ITabContext</name></type> <name pos:line="31" pos:column="43">context</name></decl></param>)</parameter_list>
        <block pos:line="32" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="33" pos:column="13">var</name></type> <name pos:line="33" pos:column="17">data</name> <init pos:line="33" pos:column="22">= <expr><call><name pos:line="33" pos:column="24">ProcessData</name><argument_list pos:line="33" pos:column="35">(<argument><expr><call><name><name pos:line="33" pos:column="36">context</name><op:operator pos:line="33" pos:column="43">.</op:operator><name><name pos:line="33" pos:column="44">GetMessages</name><argument_list pos:line="33" pos:column="55">&lt;<argument><name pos:line="33" pos:column="56">PageLifeCycleMessage</name></argument>&gt;</argument_list></name></name><argument_list pos:line="33" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="81">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">data</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="37" pos:column="9">private</specifier> <name pos:line="37" pos:column="17">object</name></type> <name pos:line="37" pos:column="24">ProcessData</name><parameter_list pos:line="37" pos:column="35">(<param><decl><type><name><name pos:line="37" pos:column="36">IEnumerable</name><argument_list pos:line="37" pos:column="47">&lt;<argument><name pos:line="37" pos:column="48">PageLifeCycleMessage</name></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="70">webFormsMessages</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="88">ITabContext</name></type> <name pos:line="37" pos:column="100">context</name></decl></param>)</parameter_list>
        <block pos:line="38" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">var</name></type> <name pos:line="39" pos:column="17">messages</name> <init pos:line="39" pos:column="26">= <expr><name pos:line="39" pos:column="28">webFormsMessages</name> <op:operator pos:line="39" pos:column="45">as</op:operator> <name><name pos:line="39" pos:column="48">IList</name><argument_list pos:line="39" pos:column="53">&lt;<argument><name pos:line="39" pos:column="54">PageLifeCycleMessage</name></argument>&gt;</argument_list></name> <op:operator pos:line="39" pos:column="76">??</op:operator> <call><name><name pos:line="39" pos:column="79">webFormsMessages</name><op:operator pos:line="39" pos:column="95">.</op:operator><name pos:line="39" pos:column="96">ToList</name></name><argument_list pos:line="39" pos:column="102">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">var</name></type> <name pos:line="40" pos:column="17">loadingList</name> <init pos:line="40" pos:column="29">= <expr><call><name><name pos:line="40" pos:column="31">messages</name><op:operator pos:line="40" pos:column="39">.</op:operator><name pos:line="40" pos:column="40">Where</name></name><argument_list pos:line="40" pos:column="45">(<argument><expr><lambda><name pos:line="40" pos:column="46">x</name> <op:operator pos:line="40" pos:column="48">=&gt;</op:operator> <call><name><name pos:line="40" pos:column="51">x</name><op:operator pos:line="40" pos:column="52">.</op:operator><name pos:line="40" pos:column="53">EventName</name><op:operator pos:line="40" pos:column="62">.</op:operator><name pos:line="40" pos:column="63">Contains</name></name><argument_list pos:line="40" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="72">"Load"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="80">.</op:operator><call><name pos:line="40" pos:column="81">ToList</name><argument_list pos:line="40" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">var</name></type> <name pos:line="41" pos:column="17">renderingList</name> <init pos:line="41" pos:column="31">= <expr><call><name><name pos:line="41" pos:column="33">messages</name><op:operator pos:line="41" pos:column="41">.</op:operator><name pos:line="41" pos:column="42">Where</name></name><argument_list pos:line="41" pos:column="47">(<argument><expr><lambda><name pos:line="41" pos:column="48">x</name> <op:operator pos:line="41" pos:column="50">=&gt;</op:operator> <call><name><name pos:line="41" pos:column="53">x</name><op:operator pos:line="41" pos:column="54">.</op:operator><name pos:line="41" pos:column="55">EventName</name><op:operator pos:line="41" pos:column="64">.</op:operator><name pos:line="41" pos:column="65">Contains</name></name><argument_list pos:line="41" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="74">"Render"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="41" pos:column="84">||</op:operator> <call><name><name pos:line="41" pos:column="87">x</name><op:operator pos:line="41" pos:column="88">.</op:operator><name pos:line="41" pos:column="89">EventName</name><op:operator pos:line="41" pos:column="98">.</op:operator><name pos:line="41" pos:column="99">Contains</name></name><argument_list pos:line="41" pos:column="107">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="108">"State"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="41" pos:column="117">.</op:operator><call><name pos:line="41" pos:column="118">ToList</name><argument_list pos:line="41" pos:column="124">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name><name pos:line="43" pos:column="17">loadingList</name><op:operator pos:line="43" pos:column="28">.</op:operator><name pos:line="43" pos:column="29">Any</name></name><argument_list pos:line="43" pos:column="32">()</argument_list></call> <op:operator pos:line="43" pos:column="35">&amp;&amp;</op:operator> <call><name><name pos:line="43" pos:column="38">renderingList</name><op:operator pos:line="43" pos:column="51">.</op:operator><name pos:line="43" pos:column="52">Any</name></name><argument_list pos:line="43" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="43" pos:column="58">
            <block pos:line="44" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="45" pos:column="17">var</name></type> <name pos:line="45" pos:column="21">loadingFirst</name> <init pos:line="45" pos:column="34">= <expr><call><name><name pos:line="45" pos:column="36">loadingList</name><op:operator pos:line="45" pos:column="47">.</op:operator><name pos:line="45" pos:column="48">First</name></name><argument_list pos:line="45" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">var</name></type> <name pos:line="46" pos:column="21">loadingLast</name> <init pos:line="46" pos:column="33">= <expr><call><name><name pos:line="46" pos:column="35">loadingList</name><op:operator pos:line="46" pos:column="46">.</op:operator><name pos:line="46" pos:column="47">Last</name></name><argument_list pos:line="46" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">var</name></type> <name pos:line="47" pos:column="21">loadingTime</name> <init pos:line="47" pos:column="33">= <expr><name><name pos:line="47" pos:column="35">loadingLast</name><op:operator pos:line="47" pos:column="46">.</op:operator><name pos:line="47" pos:column="47">Offset</name></name> <op:operator pos:line="47" pos:column="54">-</op:operator> <name><name pos:line="47" pos:column="56">loadingFirst</name><op:operator pos:line="47" pos:column="68">.</op:operator><name pos:line="47" pos:column="69">Offset</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="49" pos:column="17">var</name></type> <name pos:line="49" pos:column="21">renderingFirst</name> <init pos:line="49" pos:column="36">= <expr><call><name><name pos:line="49" pos:column="38">renderingList</name><op:operator pos:line="49" pos:column="51">.</op:operator><name pos:line="49" pos:column="52">First</name></name><argument_list pos:line="49" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">var</name></type> <name pos:line="50" pos:column="21">renderingLast</name> <init pos:line="50" pos:column="35">= <expr><call><name><name pos:line="50" pos:column="37">renderingList</name><op:operator pos:line="50" pos:column="50">.</op:operator><name pos:line="50" pos:column="51">Last</name></name><argument_list pos:line="50" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="51" pos:column="17">var</name></type> <name pos:line="51" pos:column="21">renderingTime</name> <init pos:line="51" pos:column="35">= <expr><name><name pos:line="51" pos:column="37">renderingLast</name><op:operator pos:line="51" pos:column="50">.</op:operator><name pos:line="51" pos:column="51">Offset</name></name> <op:operator pos:line="51" pos:column="58">-</op:operator> <name><name pos:line="51" pos:column="60">renderingFirst</name><op:operator pos:line="51" pos:column="74">.</op:operator><name pos:line="51" pos:column="75">Offset</name></name></expr></init></decl>;</decl_stmt>

                <return pos:line="53" pos:column="17">return <expr><op:operator pos:line="53" pos:column="24">new</op:operator> <block pos:line="53" pos:column="28">{ <expr><name pos:line="53" pos:column="30">loadingTime</name></expr><op:operator pos:line="53" pos:column="41">,</op:operator> <expr><name pos:line="53" pos:column="43">renderingTime</name></expr> }</block></expr>;</return>
            }</block></then></if>

            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">context</name><op:operator pos:line="56" pos:column="20">.</op:operator><name pos:line="56" pos:column="21">Logger</name><op:operator pos:line="56" pos:column="27">.</op:operator><name pos:line="56" pos:column="28">Warn</name></name><argument_list pos:line="56" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="33">"No page lifecycle messages found for {0}"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="56" pos:column="77">context</name><op:operator pos:line="56" pos:column="84">.</op:operator><name pos:line="56" pos:column="85">GetHttpContext</name></name><argument_list pos:line="56" pos:column="99">()</argument_list></call><op:operator pos:line="56" pos:column="101">.</op:operator><name><name pos:line="56" pos:column="102">Request</name><op:operator pos:line="56" pos:column="109">.</op:operator><name pos:line="56" pos:column="110">RawUrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">null</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace>
</unit>
