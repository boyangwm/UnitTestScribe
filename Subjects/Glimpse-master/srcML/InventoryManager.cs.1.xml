<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc3.MusicStore.Sample\Models\InventoryManager.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">MvcMusicStore</name><op:operator pos:line="6" pos:column="24">.</op:operator><name pos:line="6" pos:column="25">Models</name></name>
<block pos:line="7" pos:column="1">{ 
    <class><specifier pos:line="8" pos:column="5">public</specifier> class <name pos:line="8" pos:column="18">InventoryManager</name>
    <block pos:line="9" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">private</specifier> <specifier pos:line="10" pos:column="17">readonly</specifier> <name pos:line="10" pos:column="26">MusicStoreEntities</name></type> <name pos:line="10" pos:column="45">StoreDb</name> <init pos:line="10" pos:column="53">= <expr><op:operator pos:line="10" pos:column="55">new</op:operator> <call><name pos:line="10" pos:column="59">MusicStoreEntities</name><argument_list pos:line="10" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">private</specifier> <specifier pos:line="11" pos:column="17">readonly</specifier> <name pos:line="11" pos:column="26">Random</name></type> <name pos:line="11" pos:column="33">Random</name> <init pos:line="11" pos:column="40">= <expr><op:operator pos:line="11" pos:column="42">new</op:operator> <call><name pos:line="11" pos:column="46">Random</name><argument_list pos:line="11" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">private</specifier> <specifier pos:line="13" pos:column="17">static</specifier> <name><name pos:line="13" pos:column="24">IDictionary</name><argument_list pos:line="13" pos:column="35">&lt;<argument><name pos:line="13" pos:column="36">int</name></argument>, <argument><name pos:line="13" pos:column="41">Inventory</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="52">InventoryStore</name> <init pos:line="13" pos:column="67">= <expr><op:operator pos:line="13" pos:column="69">new</op:operator> <call><name><name pos:line="13" pos:column="73">Dictionary</name><argument_list pos:line="13" pos:column="83">&lt;<argument><name pos:line="13" pos:column="84">int</name></argument>, <argument><name pos:line="13" pos:column="89">Inventory</name></argument>&gt;</argument_list></name><argument_list pos:line="13" pos:column="99">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">private</specifier> <specifier pos:line="14" pos:column="17">static</specifier> <name><name pos:line="14" pos:column="24">IList</name><argument_list pos:line="14" pos:column="29">&lt;<argument><name pos:line="14" pos:column="30">string</name></argument>&gt;</argument_list></name></type> <name pos:line="14" pos:column="38">Warehouses</name> <init pos:line="14" pos:column="49">= <expr><op:operator pos:line="14" pos:column="51">new</op:operator> <name><name pos:line="14" pos:column="55">List</name><argument_list pos:line="14" pos:column="59">&lt;<argument><name pos:line="14" pos:column="60">string</name></argument>&gt;</argument_list></name> <block pos:line="14" pos:column="68">{ <expr><lit:literal type="string" pos:line="14" pos:column="70">"New York"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="82">"Portland"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="94">"Seattle"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="105">"Washington"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="119">"Dallas"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="129">"Los Angeles"</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="16" pos:column="9">public</specifier> <specifier pos:line="16" pos:column="16">static</specifier> <name pos:line="16" pos:column="23">Inventory</name></type> <name pos:line="16" pos:column="33">GetInventory</name><parameter_list pos:line="16" pos:column="45">(<param><decl><type><name pos:line="16" pos:column="46">int</name></type> <name pos:line="16" pos:column="50">albumId</name></decl></param>)</parameter_list>
        <block pos:line="17" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">Inventory</name></type> <name pos:line="18" pos:column="23">result</name></decl>;</decl_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><op:operator pos:line="19" pos:column="17">!</op:operator><call><name><name pos:line="19" pos:column="18">InventoryStore</name><op:operator pos:line="19" pos:column="32">.</op:operator><name pos:line="19" pos:column="33">TryGetValue</name></name><argument_list pos:line="19" pos:column="44">(<argument><expr><name pos:line="19" pos:column="45">albumId</name></expr></argument>, <argument><expr pos:line="19" pos:column="54">out <name pos:line="19" pos:column="58">result</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="19" pos:column="66">
            <block pos:line="20" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="21" pos:column="17">var</name></type> <name pos:line="21" pos:column="21">manager</name> <init pos:line="21" pos:column="29">= <expr><op:operator pos:line="21" pos:column="31">new</op:operator> <call><name pos:line="21" pos:column="35">InventoryManager</name><argument_list pos:line="21" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">result</name> <op:operator pos:line="22" pos:column="24">=</op:operator> <call><name><name pos:line="22" pos:column="26">manager</name><op:operator pos:line="22" pos:column="33">.</op:operator><name pos:line="22" pos:column="34">GenerateInventory</name></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">albumId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="23" pos:column="17">InventoryStore</name><op:operator pos:line="23" pos:column="31">.</op:operator><name pos:line="23" pos:column="32">Add</name></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">albumId</name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">result</name></expr>;</return>
        }</block></function>


        <function><type><specifier pos:line="30" pos:column="9">public</specifier> <name pos:line="30" pos:column="16">Inventory</name></type> <name pos:line="30" pos:column="26">GenerateInventory</name><parameter_list pos:line="30" pos:column="43">(<param><decl><type><name pos:line="30" pos:column="44">int</name></type> <name pos:line="30" pos:column="48">albumId</name></decl></param>)</parameter_list>
        <block pos:line="31" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="32" pos:column="13">var</name></type> <name pos:line="32" pos:column="17">inventory</name> <init pos:line="32" pos:column="27">= <expr><op:operator pos:line="32" pos:column="29">new</op:operator> <call><name pos:line="32" pos:column="33">Inventory</name><argument_list pos:line="32" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="34" pos:column="13">var</name></type> <name pos:line="34" pos:column="17">album</name> <init pos:line="34" pos:column="23">= <expr><call><name><name pos:line="34" pos:column="25">StoreDb</name><op:operator pos:line="34" pos:column="32">.</op:operator><name pos:line="34" pos:column="33">Albums</name><op:operator pos:line="34" pos:column="39">.</op:operator><name pos:line="34" pos:column="40">FirstOrDefault</name></name><argument_list pos:line="34" pos:column="54">(<argument><expr><lambda><name pos:line="34" pos:column="55">x</name> <op:operator pos:line="34" pos:column="57">=&gt;</op:operator> <name><name pos:line="34" pos:column="60">x</name><op:operator pos:line="34" pos:column="61">.</op:operator><name pos:line="34" pos:column="62">AlbumId</name></name> <op:operator pos:line="34" pos:column="70">==</op:operator> <name pos:line="34" pos:column="73">albumId</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">album</name> <op:operator pos:line="35" pos:column="23">!=</op:operator> <name pos:line="35" pos:column="26">null</name></expr>)</condition><then pos:line="35" pos:column="31">
            <block pos:line="36" pos:column="13">{
                <comment type="line" pos:line="37" pos:column="17">//Detials</comment>
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">inventory</name><op:operator pos:line="38" pos:column="26">.</op:operator><name pos:line="38" pos:column="27">Details</name><op:operator pos:line="38" pos:column="34">.</op:operator><name pos:line="38" pos:column="35">Id</name></name> <op:operator pos:line="38" pos:column="38">=</op:operator> <name pos:line="38" pos:column="40">albumId</name></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">inventory</name><op:operator pos:line="39" pos:column="26">.</op:operator><name pos:line="39" pos:column="27">Details</name><op:operator pos:line="39" pos:column="34">.</op:operator><name pos:line="39" pos:column="35">Name</name></name> <op:operator pos:line="39" pos:column="40">=</op:operator> <name><name pos:line="39" pos:column="42">album</name><op:operator pos:line="39" pos:column="47">.</op:operator><name pos:line="39" pos:column="48">Title</name></name></expr>;</expr_stmt>

                <comment type="line" pos:line="41" pos:column="17">//Warehouse</comment>
                <for pos:line="42" pos:column="17">for (<init><decl><type><name pos:line="42" pos:column="22">var</name></type> <name pos:line="42" pos:column="26">i</name> <init pos:line="42" pos:column="28">= <expr><lit:literal type="number" pos:line="42" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="42" pos:column="33">i</name> <op:operator pos:line="42" pos:column="35">&lt;=</op:operator> <call><name><name pos:line="42" pos:column="38">Random</name><op:operator pos:line="42" pos:column="44">.</op:operator><name pos:line="42" pos:column="45">Next</name></name><argument_list pos:line="42" pos:column="49">(<argument><expr><name><name pos:line="42" pos:column="50">Warehouses</name><op:operator pos:line="42" pos:column="60">.</op:operator><name pos:line="42" pos:column="61">Count</name></name> <op:operator pos:line="42" pos:column="67">-</op:operator> <lit:literal type="number" pos:line="42" pos:column="69">1</lit:literal></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name pos:line="42" pos:column="73">i</name><op:operator pos:line="42" pos:column="74">++</op:operator></expr></incr>)
                <block pos:line="43" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="44" pos:column="21">inventory</name><op:operator pos:line="44" pos:column="30">.</op:operator><name pos:line="44" pos:column="31">Warehouse</name><op:operator pos:line="44" pos:column="40">.</op:operator><name pos:line="44" pos:column="41">Add</name></name><argument_list pos:line="44" pos:column="44">(<argument><expr><op:operator pos:line="44" pos:column="45">new</op:operator> <name pos:line="44" pos:column="49">InventoryLocations</name> <block pos:line="44" pos:column="68">{ <expr><name pos:line="44" pos:column="70">Name</name> <op:operator pos:line="44" pos:column="75">=</op:operator> <name><name pos:line="44" pos:column="77">Warehouses</name><index pos:line="44" pos:column="87">[<expr><name pos:line="44" pos:column="88">i</name></expr>]</index></name></expr><op:operator pos:line="44" pos:column="90">,</op:operator> <expr><name pos:line="44" pos:column="92">Available</name> <op:operator pos:line="44" pos:column="102">=</op:operator> <call><name><name pos:line="44" pos:column="104">Random</name><op:operator pos:line="44" pos:column="110">.</op:operator><name pos:line="44" pos:column="111">Next</name></name><argument_list pos:line="44" pos:column="115">(<argument><expr><lit:literal type="number" pos:line="44" pos:column="116">50</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="44" pos:column="119">,</op:operator> <expr><name pos:line="44" pos:column="121">Backorder</name> <op:operator pos:line="44" pos:column="131">=</op:operator> <call><name><name pos:line="44" pos:column="133">Random</name><op:operator pos:line="44" pos:column="139">.</op:operator><name pos:line="44" pos:column="140">Next</name></name><argument_list pos:line="44" pos:column="144">(<argument><expr><lit:literal type="number" pos:line="44" pos:column="145">30</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="44" pos:column="148">,</op:operator> <expr><name pos:line="44" pos:column="150">Sold</name> <op:operator pos:line="44" pos:column="155">=</op:operator> <call><name><name pos:line="44" pos:column="157">Random</name><op:operator pos:line="44" pos:column="163">.</op:operator><name pos:line="44" pos:column="164">Next</name></name><argument_list pos:line="44" pos:column="168">(<argument><expr><lit:literal type="number" pos:line="44" pos:column="169">40</lit:literal></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></for>
            }</block></then></if>

            <return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">inventory</name></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
