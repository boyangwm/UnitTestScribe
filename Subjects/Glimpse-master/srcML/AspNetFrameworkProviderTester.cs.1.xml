<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Tester\AspNetFrameworkProviderTester.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Web</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Glimpse</name><op:operator pos:line="3" pos:column="14">.</op:operator><name pos:line="3" pos:column="15">AspNet</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Glimpse</name><op:operator pos:line="4" pos:column="14">.</op:operator><name pos:line="4" pos:column="15">Core</name><op:operator pos:line="4" pos:column="19">.</op:operator><name pos:line="4" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="5" pos:column="1">using <name pos:line="5" pos:column="7">Moq</name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">Glimpse</name><op:operator pos:line="7" pos:column="18">.</op:operator><name pos:line="7" pos:column="19">Test</name><op:operator pos:line="7" pos:column="23">.</op:operator><name pos:line="7" pos:column="24">AspNet</name><op:operator pos:line="7" pos:column="30">.</op:operator><name pos:line="7" pos:column="31">Tester</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> class <name pos:line="9" pos:column="18">AspNetFrameworkProviderTester</name> <super pos:line="9" pos:column="48">: <name pos:line="9" pos:column="50">AspNetFrameworkProvider</name></super>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">public</specifier> <name><name pos:line="11" pos:column="16">Mock</name><argument_list pos:line="11" pos:column="20">&lt;<argument><name pos:line="11" pos:column="21">HttpContextBase</name></argument>&gt;</argument_list></name></type> <name pos:line="11" pos:column="38">HttpContextMock</name> <block pos:line="11" pos:column="54">{ <function_decl><name pos:line="11" pos:column="56">get</name>;</function_decl> <function_decl><name pos:line="11" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">public</specifier> <name><name pos:line="13" pos:column="16">Mock</name><argument_list pos:line="13" pos:column="20">&lt;<argument><name pos:line="13" pos:column="21">HttpApplicationStateBase</name></argument>&gt;</argument_list></name></type> <name pos:line="13" pos:column="47">HttpApplicationStateMock</name> <block pos:line="13" pos:column="72">{ <function_decl><name pos:line="13" pos:column="74">get</name>;</function_decl> <function_decl><name pos:line="13" pos:column="79">set</name>;</function_decl> }</block></decl></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">public</specifier> <name><name pos:line="15" pos:column="16">Mock</name><argument_list pos:line="15" pos:column="20">&lt;<argument><name pos:line="15" pos:column="21">HttpResponseBase</name></argument>&gt;</argument_list></name></type> <name pos:line="15" pos:column="39">HttpResponseMock</name> <block pos:line="15" pos:column="56">{ <function_decl><name pos:line="15" pos:column="58">get</name>;</function_decl> <function_decl><name pos:line="15" pos:column="63">set</name>;</function_decl> }</block></decl></decl_stmt>
    
        <constructor><specifier pos:line="17" pos:column="9">private</specifier> <name pos:line="17" pos:column="17">AspNetFrameworkProviderTester</name><parameter_list pos:line="17" pos:column="46">(<param><decl><type><name pos:line="17" pos:column="47">ILogger</name></type> <name pos:line="17" pos:column="55">logger</name></decl></param>)</parameter_list> <member_list pos:line="17" pos:column="63">: <call><name pos:line="17" pos:column="65">base</name><argument_list pos:line="17" pos:column="69">(<argument><expr><name pos:line="17" pos:column="70">logger</name></expr></argument>)</argument_list></call>
        </member_list><block pos:line="18" pos:column="9">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">HttpResponseMock</name> <op:operator pos:line="19" pos:column="30">=</op:operator> <op:operator pos:line="19" pos:column="32">new</op:operator> <call><name><name pos:line="19" pos:column="36">Mock</name><argument_list pos:line="19" pos:column="40">&lt;<argument><name pos:line="19" pos:column="41">HttpResponseBase</name></argument>&gt;</argument_list></name><argument_list pos:line="19" pos:column="58">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="21" pos:column="13">HttpApplicationStateMock</name> <op:operator pos:line="21" pos:column="38">=</op:operator> <op:operator pos:line="21" pos:column="40">new</op:operator> <call><name><name pos:line="21" pos:column="44">Mock</name><argument_list pos:line="21" pos:column="48">&lt;<argument><name pos:line="21" pos:column="49">HttpApplicationStateBase</name></argument>&gt;</argument_list></name><argument_list pos:line="21" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">HttpApplicationStateMock</name><op:operator pos:line="22" pos:column="37">.</op:operator><name pos:line="22" pos:column="38">Setup</name></name><argument_list pos:line="22" pos:column="43">(<argument><expr><lambda><name pos:line="22" pos:column="44">st</name> <op:operator pos:line="22" pos:column="47">=&gt;</op:operator> <call><name><name pos:line="22" pos:column="50">st</name><op:operator pos:line="22" pos:column="52">.</op:operator><name pos:line="22" pos:column="53">Get</name></name><argument_list pos:line="22" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="57">"testKey"</lit:literal></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="22" pos:column="68">.</op:operator><call><name pos:line="22" pos:column="69">Returns</name><argument_list pos:line="22" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="22" pos:column="77">"testValue"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="24" pos:column="13">HttpContextMock</name> <op:operator pos:line="24" pos:column="29">=</op:operator> <op:operator pos:line="24" pos:column="31">new</op:operator> <call><name><name pos:line="24" pos:column="35">Mock</name><argument_list pos:line="24" pos:column="39">&lt;<argument><name pos:line="24" pos:column="40">HttpContextBase</name></argument>&gt;</argument_list></name><argument_list pos:line="24" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">HttpContextMock</name><op:operator pos:line="25" pos:column="28">.</op:operator><name pos:line="25" pos:column="29">Setup</name></name><argument_list pos:line="25" pos:column="34">(<argument><expr><lambda><name pos:line="25" pos:column="35">ctx</name> <op:operator pos:line="25" pos:column="39">=&gt;</op:operator> <name><name pos:line="25" pos:column="42">ctx</name><op:operator pos:line="25" pos:column="45">.</op:operator><name pos:line="25" pos:column="46">Response</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="25" pos:column="55">.</op:operator><call><name pos:line="25" pos:column="56">Returns</name><argument_list pos:line="25" pos:column="63">(<argument><expr><name><name pos:line="25" pos:column="64">HttpResponseMock</name><op:operator pos:line="25" pos:column="80">.</op:operator><name pos:line="25" pos:column="81">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">HttpContextMock</name><op:operator pos:line="26" pos:column="28">.</op:operator><name pos:line="26" pos:column="29">Setup</name></name><argument_list pos:line="26" pos:column="34">(<argument><expr><lambda><name pos:line="26" pos:column="35">c</name> <op:operator pos:line="26" pos:column="37">=&gt;</op:operator> <name><name pos:line="26" pos:column="40">c</name><op:operator pos:line="26" pos:column="41">.</op:operator><name pos:line="26" pos:column="42">Application</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="26" pos:column="54">.</op:operator><call><name pos:line="26" pos:column="55">Returns</name><argument_list pos:line="26" pos:column="62">(<argument><expr><name><name pos:line="26" pos:column="63">HttpApplicationStateMock</name><op:operator pos:line="26" pos:column="87">.</op:operator><name pos:line="26" pos:column="88">Object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">HttpContextMock</name><op:operator pos:line="27" pos:column="28">.</op:operator><name pos:line="27" pos:column="29">Setup</name></name><argument_list pos:line="27" pos:column="34">(<argument><expr><lambda><name pos:line="27" pos:column="35">ctx</name> <op:operator pos:line="27" pos:column="39">=&gt;</op:operator> <name><name pos:line="27" pos:column="42">ctx</name><op:operator pos:line="27" pos:column="45">.</op:operator><name pos:line="27" pos:column="46">Items</name></name></lambda></expr></argument>)</argument_list></call>
                <op:operator pos:line="28" pos:column="17">.</op:operator><call><name pos:line="28" pos:column="18">Returns</name><argument_list pos:line="28" pos:column="25">(<argument><expr><op:operator pos:line="28" pos:column="26">new</op:operator> <name><name pos:line="28" pos:column="30">Dictionary</name><argument_list pos:line="28" pos:column="40">&lt;<argument><name pos:line="28" pos:column="41">object</name></argument>, <argument><name pos:line="28" pos:column="49">object</name></argument>&gt;</argument_list></name>
                             <block pos:line="29" pos:column="30">{
                                 <expr><block pos:line="30" pos:column="34">{ <expr><call><name pos:line="30" pos:column="36">typeof</name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">string</name></expr></argument>)</argument_list></call><op:operator pos:line="30" pos:column="50">.</op:operator><name pos:line="30" pos:column="51">AssemblyQualifiedName</name></expr><op:operator pos:line="30" pos:column="72">,</op:operator> <expr><lit:literal type="string" pos:line="30" pos:column="74">"TestString"</lit:literal></expr> }</block></expr><op:operator pos:line="30" pos:column="88">,</op:operator>
                                 <expr><block pos:line="31" pos:column="34">{ <expr><call><name pos:line="31" pos:column="36">typeof</name><argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">int</name></expr></argument>)</argument_list></call><op:operator pos:line="31" pos:column="47">.</op:operator><name pos:line="31" pos:column="48">AssemblyQualifiedName</name></expr><op:operator pos:line="31" pos:column="69">,</op:operator> <expr><lit:literal type="number" pos:line="31" pos:column="71">5</lit:literal></expr> }</block></expr>
                             }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name pos:line="34" pos:column="13">Context</name> <op:operator pos:line="34" pos:column="21">=</op:operator> <name><name pos:line="34" pos:column="23">HttpContextMock</name><op:operator pos:line="34" pos:column="38">.</op:operator><name pos:line="34" pos:column="39">Object</name></name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><specifier pos:line="37" pos:column="9">public</specifier> <specifier pos:line="37" pos:column="16">static</specifier> <name pos:line="37" pos:column="23">AspNetFrameworkProviderTester</name></type> <name pos:line="37" pos:column="53">Create</name><parameter_list pos:line="37" pos:column="59">()</parameter_list>
        <block pos:line="38" pos:column="9">{
            <return pos:line="39" pos:column="13">return <expr><op:operator pos:line="39" pos:column="20">new</op:operator> <call><name pos:line="39" pos:column="24">AspNetFrameworkProviderTester</name><argument_list pos:line="39" pos:column="53">(<argument><expr><op:operator pos:line="39" pos:column="54">new</op:operator> <call><name><name pos:line="39" pos:column="58">Mock</name><argument_list pos:line="39" pos:column="62">&lt;<argument><name pos:line="39" pos:column="63">ILogger</name></argument>&gt;</argument_list></name><argument_list pos:line="39" pos:column="71">()</argument_list></call><op:operator pos:line="39" pos:column="73">.</op:operator><name pos:line="39" pos:column="74">Object</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
