<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Mvc5.MusicStore.Sample\Models\ShoppingCart.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Collections</name><op:operator pos:line="2" pos:column="25">.</op:operator><name pos:line="2" pos:column="26">Generic</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Linq</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">System</name><op:operator pos:line="5" pos:column="13">.</op:operator><name pos:line="5" pos:column="14">Web</name><op:operator pos:line="5" pos:column="17">.</op:operator><name pos:line="5" pos:column="18">Mvc</name></name>;</using>

<namespace pos:line="7" pos:column="1">namespace <name><name pos:line="7" pos:column="11">MvcMusicStore</name><op:operator pos:line="7" pos:column="24">.</op:operator><name pos:line="7" pos:column="25">Models</name></name>
<block pos:line="8" pos:column="1">{
    <class><specifier pos:line="9" pos:column="5">public</specifier> <specifier pos:line="9" pos:column="12">partial</specifier> class <name pos:line="9" pos:column="26">ShoppingCart</name>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">MusicStoreEntities</name></type> <name pos:line="11" pos:column="28">_db</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">string</name></type> <name pos:line="12" pos:column="16">ShoppingCartId</name> <block pos:line="12" pos:column="31">{ <function_decl><name pos:line="12" pos:column="33">get</name>;</function_decl> <function_decl><name pos:line="12" pos:column="38">set</name>;</function_decl> }</block></decl></decl_stmt>

        <constructor><specifier pos:line="14" pos:column="9">public</specifier> <name pos:line="14" pos:column="16">ShoppingCart</name><parameter_list pos:line="14" pos:column="28">(<param><decl><type><name pos:line="14" pos:column="29">MusicStoreEntities</name></type> <name pos:line="14" pos:column="48">db</name></decl></param>)</parameter_list>
        <block pos:line="15" pos:column="9">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">_db</name> <op:operator pos:line="16" pos:column="17">=</op:operator> <name pos:line="16" pos:column="19">db</name></expr>;</expr_stmt>
        }</block></constructor>

        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">public</specifier> <specifier pos:line="19" pos:column="16">const</specifier> <name pos:line="19" pos:column="22">string</name></type> <name pos:line="19" pos:column="29">CartSessionKey</name> <init pos:line="19" pos:column="44">= <expr><lit:literal type="string" pos:line="19" pos:column="46">"CartId"</lit:literal></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="21" pos:column="9">public</specifier> <specifier pos:line="21" pos:column="16">static</specifier> <name pos:line="21" pos:column="23">ShoppingCart</name></type> <name pos:line="21" pos:column="36">GetCart</name><parameter_list pos:line="21" pos:column="43">(<param><decl><type><name pos:line="21" pos:column="44">MusicStoreEntities</name></type> <name pos:line="21" pos:column="63">db</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="67">HttpContextBase</name></type> <name pos:line="21" pos:column="83">context</name></decl></param>)</parameter_list>
        <block pos:line="22" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">var</name></type> <name pos:line="23" pos:column="17">cart</name> <init pos:line="23" pos:column="22">= <expr><op:operator pos:line="23" pos:column="24">new</op:operator> <call><name pos:line="23" pos:column="28">ShoppingCart</name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">db</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">cart</name><op:operator pos:line="24" pos:column="17">.</op:operator><name pos:line="24" pos:column="18">ShoppingCartId</name></name> <op:operator pos:line="24" pos:column="33">=</op:operator> <call><name><name pos:line="24" pos:column="35">cart</name><op:operator pos:line="24" pos:column="39">.</op:operator><name pos:line="24" pos:column="40">GetCartId</name></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">cart</name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="28" pos:column="9">// Helper method to simplify shopping cart calls</comment>
        <function><type><specifier pos:line="29" pos:column="9">public</specifier> <specifier pos:line="29" pos:column="16">static</specifier> <name pos:line="29" pos:column="23">ShoppingCart</name></type> <name pos:line="29" pos:column="36">GetCart</name><parameter_list pos:line="29" pos:column="43">(<param><decl><type><name pos:line="29" pos:column="44">MusicStoreEntities</name></type> <name pos:line="29" pos:column="63">db</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="67">Controller</name></type> <name pos:line="29" pos:column="78">controller</name></decl></param>)</parameter_list>
        <block pos:line="30" pos:column="9">{
            <return pos:line="31" pos:column="13">return <expr><call><name pos:line="31" pos:column="20">GetCart</name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">db</name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="32">controller</name><op:operator pos:line="31" pos:column="42">.</op:operator><name pos:line="31" pos:column="43">HttpContext</name></name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="34" pos:column="9">public</specifier> <name pos:line="34" pos:column="16">void</name></type> <name pos:line="34" pos:column="21">AddToCart</name><parameter_list pos:line="34" pos:column="30">(<param><decl><type><name pos:line="34" pos:column="31">Album</name></type> <name pos:line="34" pos:column="37">album</name></decl></param>)</parameter_list>
        <block pos:line="35" pos:column="9">{
            <comment type="line" pos:line="36" pos:column="13">// Get the matching cart and album instances</comment>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">var</name></type> <name pos:line="37" pos:column="17">cartItem</name> <init pos:line="37" pos:column="26">= <expr><call><name><name pos:line="37" pos:column="28">_db</name><op:operator pos:line="37" pos:column="31">.</op:operator><name pos:line="37" pos:column="32">Carts</name><op:operator pos:line="37" pos:column="37">.</op:operator><name pos:line="37" pos:column="38">SingleOrDefault</name></name><argument_list pos:line="37" pos:column="53">(
                <argument><expr><lambda><name pos:line="38" pos:column="17">c</name> <op:operator pos:line="38" pos:column="19">=&gt;</op:operator> <name><name pos:line="38" pos:column="22">c</name><op:operator pos:line="38" pos:column="23">.</op:operator><name pos:line="38" pos:column="24">CartId</name></name> <op:operator pos:line="38" pos:column="31">==</op:operator> <name pos:line="38" pos:column="34">ShoppingCartId</name>
                <op:operator pos:line="39" pos:column="17">&amp;&amp;</op:operator> <name><name pos:line="39" pos:column="20">c</name><op:operator pos:line="39" pos:column="21">.</op:operator><name pos:line="39" pos:column="22">AlbumId</name></name> <op:operator pos:line="39" pos:column="30">==</op:operator> <name><name pos:line="39" pos:column="33">album</name><op:operator pos:line="39" pos:column="38">.</op:operator><name pos:line="39" pos:column="39">AlbumId</name></name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">cartItem</name> <op:operator pos:line="41" pos:column="26">==</op:operator> <name pos:line="41" pos:column="29">null</name></expr>)</condition><then pos:line="41" pos:column="34">
            <block pos:line="42" pos:column="13">{
                <comment type="line" pos:line="43" pos:column="17">// Create a new cart item if no cart item exists</comment>
                <expr_stmt><expr><name pos:line="44" pos:column="17">cartItem</name> <op:operator pos:line="44" pos:column="26">=</op:operator> <op:operator pos:line="44" pos:column="28">new</op:operator> <name pos:line="44" pos:column="32">Cart</name>
                <block pos:line="45" pos:column="17">{
                    <expr><name pos:line="46" pos:column="21">AlbumId</name> <op:operator pos:line="46" pos:column="29">=</op:operator> <name><name pos:line="46" pos:column="31">album</name><op:operator pos:line="46" pos:column="36">.</op:operator><name pos:line="46" pos:column="37">AlbumId</name></name></expr><op:operator pos:line="46" pos:column="44">,</op:operator>
                    <expr><name pos:line="47" pos:column="21">CartId</name> <op:operator pos:line="47" pos:column="28">=</op:operator> <name pos:line="47" pos:column="30">ShoppingCartId</name></expr><op:operator pos:line="47" pos:column="44">,</op:operator>
                    <expr><name pos:line="48" pos:column="21">Count</name> <op:operator pos:line="48" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="48" pos:column="29">1</lit:literal></expr><op:operator pos:line="48" pos:column="30">,</op:operator>
                    <expr><name pos:line="49" pos:column="21">DateCreated</name> <op:operator pos:line="49" pos:column="33">=</op:operator> <name><name pos:line="49" pos:column="35">DateTime</name><op:operator pos:line="49" pos:column="43">.</op:operator><name pos:line="49" pos:column="44">Now</name></name></expr>
                }</block></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="52" pos:column="17">_db</name><op:operator pos:line="52" pos:column="20">.</op:operator><name pos:line="52" pos:column="21">Carts</name><op:operator pos:line="52" pos:column="26">.</op:operator><name pos:line="52" pos:column="27">Add</name></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">cartItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="54" pos:column="13">else
            <block pos:line="55" pos:column="13">{
                <comment type="line" pos:line="56" pos:column="17">// If the item does exist in the cart, then add one to the quantity</comment>
                <expr_stmt><expr><name><name pos:line="57" pos:column="17">cartItem</name><op:operator pos:line="57" pos:column="25">.</op:operator><name pos:line="57" pos:column="26">Count</name></name><op:operator pos:line="57" pos:column="31">++</op:operator></expr>;</expr_stmt>
            }</block></else></if>
        }</block></function>

        <function><type><specifier pos:line="61" pos:column="9">public</specifier> <name pos:line="61" pos:column="16">int</name></type> <name pos:line="61" pos:column="20">RemoveFromCart</name><parameter_list pos:line="61" pos:column="34">(<param><decl><type><name pos:line="61" pos:column="35">int</name></type> <name pos:line="61" pos:column="39">id</name></decl></param>)</parameter_list>
        <block pos:line="62" pos:column="9">{
            <comment type="line" pos:line="63" pos:column="13">// Get the cart</comment>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">var</name></type> <name pos:line="64" pos:column="17">cartItem</name> <init pos:line="64" pos:column="26">= <expr><call><name><name pos:line="64" pos:column="28">_db</name><op:operator pos:line="64" pos:column="31">.</op:operator><name pos:line="64" pos:column="32">Carts</name><op:operator pos:line="64" pos:column="37">.</op:operator><name pos:line="64" pos:column="38">Single</name></name><argument_list pos:line="64" pos:column="44">(
                <argument><expr><lambda><name pos:line="65" pos:column="17">cart</name> <op:operator pos:line="65" pos:column="22">=&gt;</op:operator> <name><name pos:line="65" pos:column="25">cart</name><op:operator pos:line="65" pos:column="29">.</op:operator><name pos:line="65" pos:column="30">CartId</name></name> <op:operator pos:line="65" pos:column="37">==</op:operator> <name pos:line="65" pos:column="40">ShoppingCartId</name>
                <op:operator pos:line="66" pos:column="17">&amp;&amp;</op:operator> <name><name pos:line="66" pos:column="20">cart</name><op:operator pos:line="66" pos:column="24">.</op:operator><name pos:line="66" pos:column="25">RecordId</name></name> <op:operator pos:line="66" pos:column="34">==</op:operator> <name pos:line="66" pos:column="37">id</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="68" pos:column="13">int</name></type> <name pos:line="68" pos:column="17">itemCount</name> <init pos:line="68" pos:column="27">= <expr><lit:literal type="number" pos:line="68" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">cartItem</name> <op:operator pos:line="70" pos:column="26">!=</op:operator> <name pos:line="70" pos:column="29">null</name></expr>)</condition><then pos:line="70" pos:column="34">
            <block pos:line="71" pos:column="13">{
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">cartItem</name><op:operator pos:line="72" pos:column="29">.</op:operator><name pos:line="72" pos:column="30">Count</name></name> <op:operator pos:line="72" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="72" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="72" pos:column="40">
                <block pos:line="73" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="74" pos:column="21">cartItem</name><op:operator pos:line="74" pos:column="29">.</op:operator><name pos:line="74" pos:column="30">Count</name></name><op:operator pos:line="74" pos:column="35">--</op:operator></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="75" pos:column="21">itemCount</name> <op:operator pos:line="75" pos:column="31">=</op:operator> <name><name pos:line="75" pos:column="33">cartItem</name><op:operator pos:line="75" pos:column="41">.</op:operator><name pos:line="75" pos:column="42">Count</name></name></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="77" pos:column="17">else
                <block pos:line="78" pos:column="17">{
                    <expr_stmt><expr><call><name><name pos:line="79" pos:column="21">_db</name><op:operator pos:line="79" pos:column="24">.</op:operator><name pos:line="79" pos:column="25">Carts</name><op:operator pos:line="79" pos:column="30">.</op:operator><name pos:line="79" pos:column="31">Remove</name></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">cartItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>

            }</block></then></if>

            <return pos:line="84" pos:column="13">return <expr><name pos:line="84" pos:column="20">itemCount</name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="87" pos:column="9">public</specifier> <name pos:line="87" pos:column="16">void</name></type> <name pos:line="87" pos:column="21">EmptyCart</name><parameter_list pos:line="87" pos:column="30">()</parameter_list>
        <block pos:line="88" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="89" pos:column="13">var</name></type> <name pos:line="89" pos:column="17">cartItems</name> <init pos:line="89" pos:column="27">= <expr><call><name><name pos:line="89" pos:column="29">_db</name><op:operator pos:line="89" pos:column="32">.</op:operator><name pos:line="89" pos:column="33">Carts</name><op:operator pos:line="89" pos:column="38">.</op:operator><name pos:line="89" pos:column="39">Where</name></name><argument_list pos:line="89" pos:column="44">(<argument><expr><lambda><name pos:line="89" pos:column="45">cart</name> <op:operator pos:line="89" pos:column="50">=&gt;</op:operator> <name><name pos:line="89" pos:column="53">cart</name><op:operator pos:line="89" pos:column="57">.</op:operator><name pos:line="89" pos:column="58">CartId</name></name> <op:operator pos:line="89" pos:column="65">==</op:operator> <name pos:line="89" pos:column="68">ShoppingCartId</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="91" pos:column="13">foreach (<init><decl><type><name pos:line="91" pos:column="22">var</name></type> <name pos:line="91" pos:column="26">cartItem</name> <range pos:line="91" pos:column="35">in <expr><name pos:line="91" pos:column="38">cartItems</name></expr></range></decl></init>)
            <block pos:line="92" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="93" pos:column="17">_db</name><op:operator pos:line="93" pos:column="20">.</op:operator><name pos:line="93" pos:column="21">Carts</name><op:operator pos:line="93" pos:column="26">.</op:operator><name pos:line="93" pos:column="27">Remove</name></name><argument_list pos:line="93" pos:column="33">(<argument><expr><name pos:line="93" pos:column="34">cartItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

        }</block></function>

        <function><type><specifier pos:line="98" pos:column="9">public</specifier> <name><name pos:line="98" pos:column="16">List</name><argument_list pos:line="98" pos:column="20">&lt;<argument><name pos:line="98" pos:column="21">Cart</name></argument>&gt;</argument_list></name></type> <name pos:line="98" pos:column="27">GetCartItems</name><parameter_list pos:line="98" pos:column="39">()</parameter_list>
        <block pos:line="99" pos:column="9">{
            <return pos:line="100" pos:column="13">return <expr><call><name><name pos:line="100" pos:column="20">_db</name><op:operator pos:line="100" pos:column="23">.</op:operator><name pos:line="100" pos:column="24">Carts</name><op:operator pos:line="100" pos:column="29">.</op:operator><name pos:line="100" pos:column="30">Where</name></name><argument_list pos:line="100" pos:column="35">(<argument><expr><lambda><name pos:line="100" pos:column="36">cart</name> <op:operator pos:line="100" pos:column="41">=&gt;</op:operator> <name><name pos:line="100" pos:column="44">cart</name><op:operator pos:line="100" pos:column="48">.</op:operator><name pos:line="100" pos:column="49">CartId</name></name> <op:operator pos:line="100" pos:column="56">==</op:operator> <name pos:line="100" pos:column="59">ShoppingCartId</name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="100" pos:column="74">.</op:operator><call><name pos:line="100" pos:column="75">ToList</name><argument_list pos:line="100" pos:column="81">()</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="103" pos:column="9">public</specifier> <name pos:line="103" pos:column="16">int</name></type> <name pos:line="103" pos:column="20">GetCount</name><parameter_list pos:line="103" pos:column="28">()</parameter_list>
        <block pos:line="104" pos:column="9">{
            <comment type="line" pos:line="105" pos:column="13">// Get the count of each item in the cart and sum them up</comment>
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">int</name><type:modifier pos:line="106" pos:column="16">?</type:modifier></type> <name pos:line="106" pos:column="18">count</name> <init pos:line="106" pos:column="24">= <expr><op:operator pos:line="106" pos:column="26">(</op:operator><linq><from pos:line="106" pos:column="27">from <expr><name pos:line="106" pos:column="32">cartItems</name></expr> <in pos:line="106" pos:column="42">in <expr><name><name pos:line="106" pos:column="45">_db</name><op:operator pos:line="106" pos:column="48">.</op:operator><name pos:line="106" pos:column="49">Carts</name></name></expr></in></from>
                          <where pos:line="107" pos:column="27">where <expr><name><name pos:line="107" pos:column="33">cartItems</name><op:operator pos:line="107" pos:column="42">.</op:operator><name pos:line="107" pos:column="43">CartId</name></name> <op:operator pos:line="107" pos:column="50">==</op:operator> <name pos:line="107" pos:column="53">ShoppingCartId</name></expr></where>
                          <select pos:line="108" pos:column="27">select <expr><op:operator pos:line="108" pos:column="34">(</op:operator><name pos:line="108" pos:column="35">int</name><op:operator pos:line="108" pos:column="38">?</op:operator><op:operator pos:line="108" pos:column="39">)</op:operator><name><name pos:line="108" pos:column="40">cartItems</name><op:operator pos:line="108" pos:column="49">.</op:operator><name pos:line="108" pos:column="50">Count</name></name></expr></select></linq><op:operator pos:line="108" pos:column="55">)</op:operator><op:operator pos:line="108" pos:column="56">.</op:operator><call><name pos:line="108" pos:column="57">Sum</name><argument_list pos:line="108" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="110" pos:column="13">// Return 0 if all entries are null</comment>
            <return pos:line="111" pos:column="13">return <expr><name pos:line="111" pos:column="20">count</name> <op:operator pos:line="111" pos:column="26">??</op:operator> <lit:literal type="number" pos:line="111" pos:column="29">0</lit:literal></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="114" pos:column="9">public</specifier> <name pos:line="114" pos:column="16">decimal</name></type> <name pos:line="114" pos:column="24">GetTotal</name><parameter_list pos:line="114" pos:column="32">()</parameter_list>
        <block pos:line="115" pos:column="9">{
            <comment type="line" pos:line="116" pos:column="13">// Multiply album price by count of that album to get </comment>
            <comment type="line" pos:line="117" pos:column="13">// the current price for each of those albums in the cart</comment>
            <comment type="line" pos:line="118" pos:column="13">// sum all album price totals to get the cart total</comment>
            <decl_stmt><decl><type><name pos:line="119" pos:column="13">decimal</name><type:modifier pos:line="119" pos:column="20">?</type:modifier></type> <name pos:line="119" pos:column="22">total</name> <init pos:line="119" pos:column="28">= <expr><op:operator pos:line="119" pos:column="30">(</op:operator><linq><from pos:line="119" pos:column="31">from <expr><name pos:line="119" pos:column="36">cartItems</name></expr> <in pos:line="119" pos:column="46">in <expr><name><name pos:line="119" pos:column="49">_db</name><op:operator pos:line="119" pos:column="52">.</op:operator><name pos:line="119" pos:column="53">Carts</name></name></expr></in></from>
                              <where pos:line="120" pos:column="31">where <expr><name><name pos:line="120" pos:column="37">cartItems</name><op:operator pos:line="120" pos:column="46">.</op:operator><name pos:line="120" pos:column="47">CartId</name></name> <op:operator pos:line="120" pos:column="54">==</op:operator> <name pos:line="120" pos:column="57">ShoppingCartId</name></expr></where>
                              <select pos:line="121" pos:column="31">select <expr><op:operator pos:line="121" pos:column="38">(</op:operator><name pos:line="121" pos:column="39">int</name><op:operator pos:line="121" pos:column="42">?</op:operator><op:operator pos:line="121" pos:column="43">)</op:operator><name><name pos:line="121" pos:column="44">cartItems</name><op:operator pos:line="121" pos:column="53">.</op:operator><name pos:line="121" pos:column="54">Count</name> <type:modifier pos:line="121" pos:column="60">*</type:modifier></name> <name><name pos:line="121" pos:column="62">cartItems</name><op:operator pos:line="121" pos:column="71">.</op:operator><name pos:line="121" pos:column="72">Album</name><op:operator pos:line="121" pos:column="77">.</op:operator><name pos:line="121" pos:column="78">Price</name></name></expr></select></linq><op:operator pos:line="121" pos:column="83">)</op:operator><op:operator pos:line="121" pos:column="84">.</op:operator><call><name pos:line="121" pos:column="85">Sum</name><argument_list pos:line="121" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="122" pos:column="13">return <expr><name pos:line="122" pos:column="20">total</name> <op:operator pos:line="122" pos:column="26">??</op:operator> <name><name pos:line="122" pos:column="29">decimal</name><op:operator pos:line="122" pos:column="36">.</op:operator><name pos:line="122" pos:column="37">Zero</name></name></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="125" pos:column="9">public</specifier> <name pos:line="125" pos:column="16">int</name></type> <name pos:line="125" pos:column="20">CreateOrder</name><parameter_list pos:line="125" pos:column="31">(<param><decl><type><name pos:line="125" pos:column="32">Order</name></type> <name pos:line="125" pos:column="38">order</name></decl></param>)</parameter_list>
        <block pos:line="126" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="127" pos:column="13">decimal</name></type> <name pos:line="127" pos:column="21">orderTotal</name> <init pos:line="127" pos:column="32">= <expr><lit:literal type="number" pos:line="127" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="129" pos:column="13">var</name></type> <name pos:line="129" pos:column="17">cartItems</name> <init pos:line="129" pos:column="27">= <expr><call><name pos:line="129" pos:column="29">GetCartItems</name><argument_list pos:line="129" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="131" pos:column="13">// Iterate over the items in the cart, adding the order details for each</comment>
            <foreach pos:line="132" pos:column="13">foreach (<init><decl><type><name pos:line="132" pos:column="22">var</name></type> <name pos:line="132" pos:column="26">item</name> <range pos:line="132" pos:column="31">in <expr><name pos:line="132" pos:column="34">cartItems</name></expr></range></decl></init>)
            <block pos:line="133" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="134" pos:column="17">var</name></type> <name pos:line="134" pos:column="21">album</name> <init pos:line="134" pos:column="27">= <expr><call><name><name pos:line="134" pos:column="29">_db</name><op:operator pos:line="134" pos:column="32">.</op:operator><name pos:line="134" pos:column="33">Albums</name><op:operator pos:line="134" pos:column="39">.</op:operator><name pos:line="134" pos:column="40">Find</name></name><argument_list pos:line="134" pos:column="44">(<argument><expr><name><name pos:line="134" pos:column="45">item</name><op:operator pos:line="134" pos:column="49">.</op:operator><name pos:line="134" pos:column="50">AlbumId</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="136" pos:column="17">var</name></type> <name pos:line="136" pos:column="21">orderDetail</name> <init pos:line="136" pos:column="33">= <expr><op:operator pos:line="136" pos:column="35">new</op:operator> <name pos:line="136" pos:column="39">OrderDetail</name>
                <block pos:line="137" pos:column="17">{
                    <expr><name pos:line="138" pos:column="21">AlbumId</name> <op:operator pos:line="138" pos:column="29">=</op:operator> <name><name pos:line="138" pos:column="31">item</name><op:operator pos:line="138" pos:column="35">.</op:operator><name pos:line="138" pos:column="36">AlbumId</name></name></expr>,
                    <expr><name pos:line="139" pos:column="21">OrderId</name> <op:operator pos:line="139" pos:column="29">=</op:operator> <name><name pos:line="139" pos:column="31">order</name><op:operator pos:line="139" pos:column="36">.</op:operator><name pos:line="139" pos:column="37">OrderId</name></name></expr>,
                    <expr><name pos:line="140" pos:column="21">UnitPrice</name> <op:operator pos:line="140" pos:column="31">=</op:operator> <name><name pos:line="140" pos:column="33">album</name><op:operator pos:line="140" pos:column="38">.</op:operator><name pos:line="140" pos:column="39">Price</name></name></expr>,
                    <expr><name pos:line="141" pos:column="21">Quantity</name> <op:operator pos:line="141" pos:column="30">=</op:operator> <name><name pos:line="141" pos:column="32">item</name><op:operator pos:line="141" pos:column="36">.</op:operator><name pos:line="141" pos:column="37">Count</name></name></expr>,
                }</block></expr></init></decl>;</decl_stmt>

                <comment type="line" pos:line="144" pos:column="17">// Set the order total of the shopping cart</comment>
                <expr_stmt><expr><name pos:line="145" pos:column="17">orderTotal</name> <op:operator pos:line="145" pos:column="28">+=</op:operator> <op:operator pos:line="145" pos:column="31">(</op:operator><name><name pos:line="145" pos:column="32">item</name><op:operator pos:line="145" pos:column="36">.</op:operator><name pos:line="145" pos:column="37">Count</name> <type:modifier pos:line="145" pos:column="43">*</type:modifier></name> <name><name pos:line="145" pos:column="45">item</name><op:operator pos:line="145" pos:column="49">.</op:operator><name pos:line="145" pos:column="50">Album</name><op:operator pos:line="145" pos:column="55">.</op:operator><name pos:line="145" pos:column="56">Price</name></name><op:operator pos:line="145" pos:column="61">)</op:operator></expr>;</expr_stmt>

                <expr_stmt><expr><call><name><name pos:line="147" pos:column="17">_db</name><op:operator pos:line="147" pos:column="20">.</op:operator><name pos:line="147" pos:column="21">OrderDetails</name><op:operator pos:line="147" pos:column="33">.</op:operator><name pos:line="147" pos:column="34">Add</name></name><argument_list pos:line="147" pos:column="37">(<argument><expr><name pos:line="147" pos:column="38">orderDetail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>

            <comment type="line" pos:line="150" pos:column="13">// Set the order's total to the orderTotal count</comment>
            <expr_stmt><expr><name><name pos:line="151" pos:column="13">order</name><op:operator pos:line="151" pos:column="18">.</op:operator><name pos:line="151" pos:column="19">Total</name></name> <op:operator pos:line="151" pos:column="25">=</op:operator> <name pos:line="151" pos:column="27">orderTotal</name></expr>;</expr_stmt>

            <comment type="line" pos:line="153" pos:column="13">// Empty the shopping cart</comment>
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">EmptyCart</name><argument_list pos:line="154" pos:column="22">()</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="156" pos:column="13">// Return the OrderId as the confirmation number</comment>
            <return pos:line="157" pos:column="13">return <expr><name><name pos:line="157" pos:column="20">order</name><op:operator pos:line="157" pos:column="25">.</op:operator><name pos:line="157" pos:column="26">OrderId</name></name></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="160" pos:column="9">// We're using HttpContextBase to allow access to cookies.</comment>
        <function><type><specifier pos:line="161" pos:column="9">public</specifier> <name pos:line="161" pos:column="16">string</name></type> <name pos:line="161" pos:column="23">GetCartId</name><parameter_list pos:line="161" pos:column="32">(<param><decl><type><name pos:line="161" pos:column="33">HttpContextBase</name></type> <name pos:line="161" pos:column="49">context</name></decl></param>)</parameter_list>
        <block pos:line="162" pos:column="9">{
            <if pos:line="163" pos:column="13">if <condition pos:line="163" pos:column="16">(<expr><name><name pos:line="163" pos:column="17">context</name><op:operator pos:line="163" pos:column="24">.</op:operator><name pos:line="163" pos:column="25">Session</name><index pos:line="163" pos:column="32">[<expr><name pos:line="163" pos:column="33">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="163" pos:column="49">==</op:operator> <name pos:line="163" pos:column="52">null</name></expr>)</condition><then pos:line="163" pos:column="57">
            <block pos:line="164" pos:column="13">{
                <if pos:line="165" pos:column="17">if <condition pos:line="165" pos:column="20">(<expr><op:operator pos:line="165" pos:column="21">!</op:operator><call><name><name pos:line="165" pos:column="22">string</name><op:operator pos:line="165" pos:column="28">.</op:operator><name pos:line="165" pos:column="29">IsNullOrWhiteSpace</name></name><argument_list pos:line="165" pos:column="47">(<argument><expr><name><name pos:line="165" pos:column="48">context</name><op:operator pos:line="165" pos:column="55">.</op:operator><name pos:line="165" pos:column="56">User</name><op:operator pos:line="165" pos:column="60">.</op:operator><name pos:line="165" pos:column="61">Identity</name><op:operator pos:line="165" pos:column="69">.</op:operator><name pos:line="165" pos:column="70">Name</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="165" pos:column="76">
                <block pos:line="166" pos:column="17">{
                    <expr_stmt><expr><name><name pos:line="167" pos:column="21">context</name><op:operator pos:line="167" pos:column="28">.</op:operator><name pos:line="167" pos:column="29">Session</name><index pos:line="167" pos:column="36">[<expr><name pos:line="167" pos:column="37">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="167" pos:column="53">=</op:operator> <name><name pos:line="167" pos:column="55">context</name><op:operator pos:line="167" pos:column="62">.</op:operator><name pos:line="167" pos:column="63">User</name><op:operator pos:line="167" pos:column="67">.</op:operator><name pos:line="167" pos:column="68">Identity</name><op:operator pos:line="167" pos:column="76">.</op:operator><name pos:line="167" pos:column="77">Name</name></name></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="169" pos:column="17">else
                <block pos:line="170" pos:column="17">{
                    <comment type="line" pos:line="171" pos:column="21">// Generate a new random GUID using System.Guid class</comment>
                    <decl_stmt><decl><type><name pos:line="172" pos:column="21">Guid</name></type> <name pos:line="172" pos:column="26">tempCartId</name> <init pos:line="172" pos:column="37">= <expr><call><name><name pos:line="172" pos:column="39">Guid</name><op:operator pos:line="172" pos:column="43">.</op:operator><name pos:line="172" pos:column="44">NewGuid</name></name><argument_list pos:line="172" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <comment type="line" pos:line="174" pos:column="21">// Send tempCartId back to client as a cookie</comment>
                    <expr_stmt><expr><name><name pos:line="175" pos:column="21">context</name><op:operator pos:line="175" pos:column="28">.</op:operator><name pos:line="175" pos:column="29">Session</name><index pos:line="175" pos:column="36">[<expr><name pos:line="175" pos:column="37">CartSessionKey</name></expr>]</index></name> <op:operator pos:line="175" pos:column="53">=</op:operator> <call><name><name pos:line="175" pos:column="55">tempCartId</name><op:operator pos:line="175" pos:column="65">.</op:operator><name pos:line="175" pos:column="66">ToString</name></name><argument_list pos:line="175" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
            }</block></then></if>

            <return pos:line="179" pos:column="13">return <expr><name><name pos:line="179" pos:column="20">context</name><op:operator pos:line="179" pos:column="27">.</op:operator><name pos:line="179" pos:column="28">Session</name><index pos:line="179" pos:column="35">[<expr><name pos:line="179" pos:column="36">CartSessionKey</name></expr>]</index></name><op:operator pos:line="179" pos:column="51">.</op:operator><call><name pos:line="179" pos:column="52">ToString</name><argument_list pos:line="179" pos:column="60">()</argument_list></call></expr>;</return>
        }</block></function>

        <comment type="line" pos:line="182" pos:column="9">// When a user has logged in, migrate their shopping cart to</comment>
        <comment type="line" pos:line="183" pos:column="9">// be associated with their username</comment>
        <function><type><specifier pos:line="184" pos:column="9">public</specifier> <name pos:line="184" pos:column="16">void</name></type> <name pos:line="184" pos:column="21">MigrateCart</name><parameter_list pos:line="184" pos:column="32">(<param><decl><type><name pos:line="184" pos:column="33">string</name></type> <name pos:line="184" pos:column="40">userName</name></decl></param>)</parameter_list>
        <block pos:line="185" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="186" pos:column="13">var</name></type> <name pos:line="186" pos:column="17">shoppingCart</name> <init pos:line="186" pos:column="30">= <expr><call><name><name pos:line="186" pos:column="32">_db</name><op:operator pos:line="186" pos:column="35">.</op:operator><name pos:line="186" pos:column="36">Carts</name><op:operator pos:line="186" pos:column="41">.</op:operator><name pos:line="186" pos:column="42">Where</name></name><argument_list pos:line="186" pos:column="47">(<argument><expr><lambda><name pos:line="186" pos:column="48">c</name> <op:operator pos:line="186" pos:column="50">=&gt;</op:operator> <name><name pos:line="186" pos:column="53">c</name><op:operator pos:line="186" pos:column="54">.</op:operator><name pos:line="186" pos:column="55">CartId</name></name> <op:operator pos:line="186" pos:column="62">==</op:operator> <name pos:line="186" pos:column="65">ShoppingCartId</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <foreach pos:line="188" pos:column="13">foreach (<init><decl><type><name pos:line="188" pos:column="22">Cart</name></type> <name pos:line="188" pos:column="27">item</name> <range pos:line="188" pos:column="32">in <expr><name pos:line="188" pos:column="35">shoppingCart</name></expr></range></decl></init>)
            <block pos:line="189" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="190" pos:column="17">item</name><op:operator pos:line="190" pos:column="21">.</op:operator><name pos:line="190" pos:column="22">CartId</name></name> <op:operator pos:line="190" pos:column="29">=</op:operator> <name pos:line="190" pos:column="31">userName</name></expr>;</expr_stmt>
            }</block></foreach>

        }</block></function>
    }</block></class>
}</block></namespace></unit>
