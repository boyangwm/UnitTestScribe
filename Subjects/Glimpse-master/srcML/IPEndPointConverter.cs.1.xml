<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.WindowsAzure.Storage\Infrastructure\Json\IPEndPointConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name pos:line="1" pos:column="7">System</name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Net</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">Newtonsoft</name><op:operator pos:line="3" pos:column="17">.</op:operator><name pos:line="3" pos:column="18">Json</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">Newtonsoft</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Json</name><op:operator pos:line="4" pos:column="22">.</op:operator><name pos:line="4" pos:column="23">Linq</name></name>;</using>

<namespace pos:line="6" pos:column="1">namespace <name><name pos:line="6" pos:column="11">Glimpse</name><op:operator pos:line="6" pos:column="18">.</op:operator><name pos:line="6" pos:column="19">WindowsAzure</name><op:operator pos:line="6" pos:column="31">.</op:operator><name pos:line="6" pos:column="32">Storage</name><op:operator pos:line="6" pos:column="39">.</op:operator><name pos:line="6" pos:column="40">Infrastructure</name><op:operator pos:line="6" pos:column="54">.</op:operator><name pos:line="6" pos:column="55">Json</name></name>
<block pos:line="7" pos:column="1">{
    <class><specifier pos:line="8" pos:column="5">internal</specifier> class <name pos:line="8" pos:column="20">IPEndPointConverter</name> <super pos:line="8" pos:column="40">: <name pos:line="8" pos:column="42">JsonConverter</name></super>
    <block pos:line="9" pos:column="5">{
        <function><type><specifier pos:line="10" pos:column="9">public</specifier> <specifier pos:line="10" pos:column="16">override</specifier> <name pos:line="10" pos:column="25">bool</name></type> <name pos:line="10" pos:column="30">CanConvert</name><parameter_list pos:line="10" pos:column="40">(<param><decl><type><name pos:line="10" pos:column="41">Type</name></type> <name pos:line="10" pos:column="46">objectType</name></decl></param>)</parameter_list>
        <block pos:line="11" pos:column="9">{
            <return pos:line="12" pos:column="13">return <expr><name pos:line="12" pos:column="20">objectType</name> <op:operator pos:line="12" pos:column="31">==</op:operator> <call><name pos:line="12" pos:column="34">typeof</name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">IPEndPoint</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>

        <function><type><specifier pos:line="15" pos:column="9">public</specifier> <specifier pos:line="15" pos:column="16">override</specifier> <name pos:line="15" pos:column="25">void</name></type> <name pos:line="15" pos:column="30">WriteJson</name><parameter_list pos:line="15" pos:column="39">(<param><decl><type><name pos:line="15" pos:column="40">JsonWriter</name></type> <name pos:line="15" pos:column="51">writer</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="59">object</name></type> <name pos:line="15" pos:column="66">value</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="73">JsonSerializer</name></type> <name pos:line="15" pos:column="88">serializer</name></decl></param>)</parameter_list>
        <block pos:line="16" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">IPEndPoint</name></type> <name pos:line="17" pos:column="24">ep</name> <init pos:line="17" pos:column="27">= <expr><op:operator pos:line="17" pos:column="29">(</op:operator><name pos:line="17" pos:column="30">IPEndPoint</name><op:operator pos:line="17" pos:column="40">)</op:operator><name pos:line="17" pos:column="41">value</name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">writer</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">WriteStartObject</name></name><argument_list pos:line="18" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">writer</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">WritePropertyName</name></name><argument_list pos:line="19" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="19" pos:column="38">"Address"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">serializer</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">Serialize</name></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">writer</name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="42">ep</name><op:operator pos:line="20" pos:column="44">.</op:operator><name pos:line="20" pos:column="45">Address</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">writer</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">WritePropertyName</name></name><argument_list pos:line="21" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="21" pos:column="38">"Port"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">writer</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">WriteValue</name></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">ep</name><op:operator pos:line="22" pos:column="33">.</op:operator><name pos:line="22" pos:column="34">Port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">writer</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">WriteEndObject</name></name><argument_list pos:line="23" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><specifier pos:line="26" pos:column="9">public</specifier> <specifier pos:line="26" pos:column="16">override</specifier> <name pos:line="26" pos:column="25">object</name></type> <name pos:line="26" pos:column="32">ReadJson</name><parameter_list pos:line="26" pos:column="40">(<param><decl><type><name pos:line="26" pos:column="41">JsonReader</name></type> <name pos:line="26" pos:column="52">reader</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="60">Type</name></type> <name pos:line="26" pos:column="65">objectType</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="77">object</name></type> <name pos:line="26" pos:column="84">existingValue</name></decl></param>, <param><decl><type><name pos:line="26" pos:column="99">JsonSerializer</name></type> <name pos:line="26" pos:column="114">serializer</name></decl></param>)</parameter_list>
        <block pos:line="27" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">JObject</name></type> <name pos:line="28" pos:column="21">jo</name> <init pos:line="28" pos:column="24">= <expr><call><name><name pos:line="28" pos:column="26">JObject</name><op:operator pos:line="28" pos:column="33">.</op:operator><name pos:line="28" pos:column="34">Load</name></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">IPAddress</name></type> <name pos:line="29" pos:column="23">address</name> <init pos:line="29" pos:column="31">= <expr><name><name pos:line="29" pos:column="33">jo</name><index pos:line="29" pos:column="35">[<expr><lit:literal type="string" pos:line="29" pos:column="36">"Address"</lit:literal></expr>]</index></name><op:operator pos:line="29" pos:column="46">.</op:operator><call><name><name pos:line="29" pos:column="47">ToObject</name><argument_list pos:line="29" pos:column="55">&lt;<argument><name pos:line="29" pos:column="56">IPAddress</name></argument>&gt;</argument_list></name><argument_list pos:line="29" pos:column="66">(<argument><expr><name pos:line="29" pos:column="67">serializer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">int</name></type> <name pos:line="30" pos:column="17">port</name> <init pos:line="30" pos:column="22">= <expr><name><name pos:line="30" pos:column="24">jo</name><index pos:line="30" pos:column="26">[<expr><lit:literal type="string" pos:line="30" pos:column="27">"Port"</lit:literal></expr>]</index></name><op:operator pos:line="30" pos:column="34">.</op:operator><call><name><name pos:line="30" pos:column="35">Value</name><argument_list pos:line="30" pos:column="40">&lt;<argument><name pos:line="30" pos:column="41">int</name></argument>&gt;</argument_list></name><argument_list pos:line="30" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <return pos:line="31" pos:column="13">return <expr><op:operator pos:line="31" pos:column="20">new</op:operator> <call><name pos:line="31" pos:column="24">IPEndPoint</name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">address</name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">port</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
