<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Test.AspNet\Inspector\RoutesInspectorShould.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>
<using pos:line="2" pos:column="1">using <name><name pos:line="2" pos:column="7">System</name><op:operator pos:line="2" pos:column="13">.</op:operator><name pos:line="2" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="3" pos:column="1">using <name><name pos:line="3" pos:column="7">System</name><op:operator pos:line="3" pos:column="13">.</op:operator><name pos:line="3" pos:column="14">Web</name></name>;</using>
<using pos:line="4" pos:column="1">using <name><name pos:line="4" pos:column="7">System</name><op:operator pos:line="4" pos:column="13">.</op:operator><name pos:line="4" pos:column="14">Web</name><op:operator pos:line="4" pos:column="17">.</op:operator><name pos:line="4" pos:column="18">Routing</name></name>;</using>
<using pos:line="5" pos:column="1">using <name><name pos:line="5" pos:column="7">Glimpse</name><op:operator pos:line="5" pos:column="14">.</op:operator><name pos:line="5" pos:column="15">AspNet</name><op:operator pos:line="5" pos:column="21">.</op:operator><name pos:line="5" pos:column="22">AlternateType</name></name>;</using>
<using pos:line="6" pos:column="1">using <name><name pos:line="6" pos:column="7">Glimpse</name><op:operator pos:line="6" pos:column="14">.</op:operator><name pos:line="6" pos:column="15">AspNet</name><op:operator pos:line="6" pos:column="21">.</op:operator><name pos:line="6" pos:column="22">Inspector</name></name>;</using>
<using pos:line="7" pos:column="1">using <name><name pos:line="7" pos:column="7">Glimpse</name><op:operator pos:line="7" pos:column="14">.</op:operator><name pos:line="7" pos:column="15">Core</name><op:operator pos:line="7" pos:column="19">.</op:operator><name pos:line="7" pos:column="20">Extensibility</name></name>;</using>
<using pos:line="8" pos:column="1">using <name><name pos:line="8" pos:column="7">Glimpse</name><op:operator pos:line="8" pos:column="14">.</op:operator><name pos:line="8" pos:column="15">Core</name><op:operator pos:line="8" pos:column="19">.</op:operator><name pos:line="8" pos:column="20">Framework</name></name>;</using>
<using pos:line="9" pos:column="1">using <name><name pos:line="9" pos:column="7">Glimpse</name><op:operator pos:line="9" pos:column="14">.</op:operator><name pos:line="9" pos:column="15">Test</name><op:operator pos:line="9" pos:column="19">.</op:operator><name pos:line="9" pos:column="20">Common</name></name>;</using>
<using pos:line="10" pos:column="1">using <name pos:line="10" pos:column="7">Moq</name>;</using>
<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">Xunit</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">Xunit</name><op:operator pos:line="12" pos:column="12">.</op:operator><name pos:line="12" pos:column="13">Extensions</name></name>;</using>
<using pos:line="13" pos:column="1">using <name pos:line="13" pos:column="7">RouteBase</name> <init pos:line="13" pos:column="17">= <expr><name><name pos:line="13" pos:column="19">System</name><op:operator pos:line="13" pos:column="25">.</op:operator><name pos:line="13" pos:column="26">Web</name><op:operator pos:line="13" pos:column="29">.</op:operator><name pos:line="13" pos:column="30">Routing</name><op:operator pos:line="13" pos:column="37">.</op:operator><name pos:line="13" pos:column="38">RouteBase</name></name></expr></init>;</using>

<namespace pos:line="15" pos:column="1">namespace <name><name pos:line="15" pos:column="11">Glimpse</name><op:operator pos:line="15" pos:column="18">.</op:operator><name pos:line="15" pos:column="19">Test</name><op:operator pos:line="15" pos:column="23">.</op:operator><name pos:line="15" pos:column="24">AspNet</name><op:operator pos:line="15" pos:column="30">.</op:operator><name pos:line="15" pos:column="31">Inspector</name></name>
<block pos:line="16" pos:column="1">{
    <class><specifier pos:line="17" pos:column="5">public</specifier> class <name pos:line="17" pos:column="18">RoutesInspectorShould</name>
    <block pos:line="18" pos:column="5">{
        <function><type><attribute pos:line="19" pos:column="9">[<expr><name pos:line="19" pos:column="10">Fact</name></expr>]</attribute>
        <specifier pos:line="20" pos:column="9">public</specifier> <name pos:line="20" pos:column="16">void</name></type> <name pos:line="20" pos:column="21">Construct</name><parameter_list pos:line="20" pos:column="30">()</parameter_list>
        <block pos:line="21" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">var</name></type> <name pos:line="22" pos:column="17">sut</name> <init pos:line="22" pos:column="21">= <expr><op:operator pos:line="22" pos:column="23">new</op:operator> <call><name pos:line="22" pos:column="27">RoutesInspector</name><argument_list pos:line="22" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">Assert</name><op:operator pos:line="24" pos:column="19">.</op:operator><name pos:line="24" pos:column="20">NotNull</name></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">sut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">Assert</name><op:operator pos:line="25" pos:column="19">.</op:operator><name><name pos:line="25" pos:column="20">IsAssignableFrom</name><argument_list pos:line="25" pos:column="36">&lt;<argument><name pos:line="25" pos:column="37">IInspector</name></argument>&gt;</argument_list></name></name><argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">sut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
         
        <function><type><attribute pos:line="28" pos:column="9">[<expr><name pos:line="28" pos:column="10">Theory</name></expr><op:operator pos:line="28" pos:column="16">,</op:operator> <expr><name pos:line="28" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="29" pos:column="9">public</specifier> <name pos:line="29" pos:column="16">void</name></type> <name pos:line="29" pos:column="21">IntergrationTestRouteProxing</name><parameter_list pos:line="29" pos:column="49">(<param><decl><type><name pos:line="29" pos:column="50">RoutesInspector</name></type> <name pos:line="29" pos:column="66">sut</name></decl></param>, <param><decl><type><name><name pos:line="29" pos:column="71">System</name><op:operator pos:line="29" pos:column="77">.</op:operator><name pos:line="29" pos:column="78">Web</name><op:operator pos:line="29" pos:column="81">.</op:operator><name pos:line="29" pos:column="82">Routing</name><op:operator pos:line="29" pos:column="89">.</op:operator><name pos:line="29" pos:column="90">IRouteHandler</name></name></type> <name pos:line="29" pos:column="104">routeHandler</name></decl></param>, <param><decl><type><name pos:line="29" pos:column="118">IInspectorContext</name></type> <name pos:line="29" pos:column="136">context</name></decl></param>)</parameter_list>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">RouteTable</name><op:operator pos:line="31" pos:column="23">.</op:operator><name pos:line="31" pos:column="24">Routes</name><op:operator pos:line="31" pos:column="30">.</op:operator><name pos:line="31" pos:column="31">Clear</name></name><argument_list pos:line="31" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">RouteTable</name><op:operator pos:line="32" pos:column="23">.</op:operator><name pos:line="32" pos:column="24">Routes</name><op:operator pos:line="32" pos:column="30">.</op:operator><name pos:line="32" pos:column="31">Add</name></name><argument_list pos:line="32" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="32" pos:column="43">new</op:operator> <call><name><name pos:line="32" pos:column="47">System</name><op:operator pos:line="32" pos:column="53">.</op:operator><name pos:line="32" pos:column="54">Web</name><op:operator pos:line="32" pos:column="57">.</op:operator><name pos:line="32" pos:column="58">Routing</name><op:operator pos:line="32" pos:column="65">.</op:operator><name pos:line="32" pos:column="66">Route</name></name><argument_list pos:line="32" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="72">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="80">routeHandler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">RouteTable</name><op:operator pos:line="33" pos:column="23">.</op:operator><name pos:line="33" pos:column="24">Routes</name><op:operator pos:line="33" pos:column="30">.</op:operator><name pos:line="33" pos:column="31">Add</name></name><argument_list pos:line="33" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="35">"BaseTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="33" pos:column="48">new</op:operator> <call><name pos:line="33" pos:column="52">NewRouteBase</name><argument_list pos:line="33" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="34" pos:column="13">RouteTable</name><op:operator pos:line="34" pos:column="23">.</op:operator><name pos:line="34" pos:column="24">Routes</name><op:operator pos:line="34" pos:column="30">.</op:operator><name pos:line="34" pos:column="31">Add</name></name><argument_list pos:line="34" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="35">"BaseTestTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="34" pos:column="52">new</op:operator> <call><name pos:line="34" pos:column="56">NewConstructorRouteBase</name><argument_list pos:line="34" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="34" pos:column="80">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">RouteTable</name><op:operator pos:line="35" pos:column="23">.</op:operator><name pos:line="35" pos:column="24">Routes</name><op:operator pos:line="35" pos:column="30">.</op:operator><name pos:line="35" pos:column="31">Add</name></name><argument_list pos:line="35" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="35">"SubTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="35" pos:column="47">new</op:operator> <call><name pos:line="35" pos:column="51">NewRoute</name><argument_list pos:line="35" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="60">"test"</lit:literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="68">routeHandler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">RouteTable</name><op:operator pos:line="36" pos:column="23">.</op:operator><name pos:line="36" pos:column="24">Routes</name><op:operator pos:line="36" pos:column="30">.</op:operator><name pos:line="36" pos:column="31">Add</name></name><argument_list pos:line="36" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="35">"SubTestTyped"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="36" pos:column="51">new</op:operator> <call><name pos:line="36" pos:column="55">NewConstructorRoute</name><argument_list pos:line="36" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="36" pos:column="75">"test"</lit:literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="83">routeHandler</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="36" pos:column="97">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">RouteTable</name><op:operator pos:line="37" pos:column="23">.</op:operator><name pos:line="37" pos:column="24">Routes</name><op:operator pos:line="37" pos:column="30">.</op:operator><name pos:line="37" pos:column="31">Ignore</name></name><argument_list pos:line="37" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="37" pos:column="38">"{resource}.axd/{*pathInfo}"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="37" pos:column="68">new</op:operator> <block pos:line="37" pos:column="72">{ <expr><name pos:line="37" pos:column="74">resource</name> <op:operator pos:line="37" pos:column="83">=</op:operator> <lit:literal type="string" pos:line="37" pos:column="85">"Test"</lit:literal></expr><op:operator pos:line="37" pos:column="91">,</op:operator> <expr><name pos:line="37" pos:column="93">pathInfo</name> <op:operator pos:line="37" pos:column="102">=</op:operator> <lit:literal type="string" pos:line="37" pos:column="104">"[0-9]"</lit:literal></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">context</name><op:operator pos:line="39" pos:column="20">.</op:operator><name pos:line="39" pos:column="21">Setup</name></name><argument_list pos:line="39" pos:column="26">(<argument><expr><lambda><name pos:line="39" pos:column="27">x</name> <op:operator pos:line="39" pos:column="29">=&gt;</op:operator> <name><name pos:line="39" pos:column="32">x</name><op:operator pos:line="39" pos:column="33">.</op:operator><name pos:line="39" pos:column="34">ProxyFactory</name></name></lambda></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="47">.</op:operator><call><name pos:line="39" pos:column="48">Returns</name><argument_list pos:line="39" pos:column="55">(<argument><expr><op:operator pos:line="39" pos:column="56">new</op:operator> <call><name pos:line="39" pos:column="60">CastleDynamicProxyFactory</name><argument_list pos:line="39" pos:column="85">(<argument><expr><name><name pos:line="39" pos:column="86">context</name><op:operator pos:line="39" pos:column="93">.</op:operator><name pos:line="39" pos:column="94">Logger</name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="102">context</name><op:operator pos:line="39" pos:column="109">.</op:operator><name pos:line="39" pos:column="110">MessageBroker</name></name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="39" pos:column="125">()</parameter_list> <op:operator pos:line="39" pos:column="128">=&gt;</op:operator> <op:operator pos:line="39" pos:column="131">new</op:operator> <call><name pos:line="39" pos:column="135">ExecutionTimer</name><argument_list pos:line="39" pos:column="149">(<argument><expr><op:operator pos:line="39" pos:column="150">new</op:operator> <call><name pos:line="39" pos:column="154">Stopwatch</name><argument_list pos:line="39" pos:column="163">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lambda><parameter_list pos:line="39" pos:column="168">()</parameter_list> <op:operator pos:line="39" pos:column="171">=&gt;</op:operator> <op:operator pos:line="39" pos:column="174">new</op:operator> <call><name pos:line="39" pos:column="178">RuntimePolicy</name><argument_list pos:line="39" pos:column="191">()</argument_list></call></lambda></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">sut</name><op:operator pos:line="41" pos:column="16">.</op:operator><name pos:line="41" pos:column="17">Setup</name></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:line="43" pos:column="13">// This test needs to be like this because IProxyTargetAccessor is in Moq and Glimpse</comment>
            <foreach pos:line="44" pos:column="13">foreach (<init><decl><type><name pos:line="44" pos:column="22">var</name></type> <name pos:line="44" pos:column="26">route</name> <range pos:line="44" pos:column="32">in <expr><name><name pos:line="44" pos:column="35">RouteTable</name><op:operator pos:line="44" pos:column="45">.</op:operator><name pos:line="44" pos:column="46">Routes</name></name></expr></range></decl></init>)
            <block pos:line="45" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">var</name></type> <name pos:line="46" pos:column="21">found</name> <init pos:line="46" pos:column="27">= <expr><lit:literal type="boolean" pos:line="46" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
                <foreach pos:line="47" pos:column="17">foreach (<init><decl><type><name pos:line="47" pos:column="26">var</name></type> <name pos:line="47" pos:column="30">routeInterface</name> <range pos:line="47" pos:column="45">in <expr><call><name><name pos:line="47" pos:column="48">route</name><op:operator pos:line="47" pos:column="53">.</op:operator><name pos:line="47" pos:column="54">GetType</name></name><argument_list pos:line="47" pos:column="61">()</argument_list></call><op:operator pos:line="47" pos:column="63">.</op:operator><call><name pos:line="47" pos:column="64">GetInterfaces</name><argument_list pos:line="47" pos:column="77">()</argument_list></call></expr></range></decl></init>)
                <block pos:line="48" pos:column="17">{
                    <if pos:line="49" pos:column="21">if <condition pos:line="49" pos:column="24">(<expr><name><name pos:line="49" pos:column="25">routeInterface</name><op:operator pos:line="49" pos:column="39">.</op:operator><name pos:line="49" pos:column="40">Name</name></name> <op:operator pos:line="49" pos:column="45">==</op:operator> <lit:literal type="string" pos:line="49" pos:column="48">"IProxyTargetAccessor"</lit:literal></expr>)</condition><then pos:line="49" pos:column="71">
                    <block pos:line="50" pos:column="21">{
                        <expr_stmt><expr><name pos:line="51" pos:column="25">found</name> <op:operator pos:line="51" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="51" pos:column="33">true</lit:literal></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></foreach>

                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">Assert</name><op:operator pos:line="55" pos:column="23">.</op:operator><name pos:line="55" pos:column="24">True</name></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></foreach>
        }</block></function>

        <function><type><attribute pos:line="59" pos:column="9">[<expr><name pos:line="59" pos:column="10">Theory</name></expr><op:operator pos:line="59" pos:column="16">,</op:operator> <expr><name pos:line="59" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="60" pos:column="9">public</specifier> <name pos:line="60" pos:column="16">void</name></type> <name pos:line="60" pos:column="21">ExtendsMvcRoutes</name><parameter_list pos:line="60" pos:column="37">(<param><decl><type><name><name pos:line="60" pos:column="38">System</name><op:operator pos:line="60" pos:column="44">.</op:operator><name pos:line="60" pos:column="45">Web</name><op:operator pos:line="60" pos:column="48">.</op:operator><name pos:line="60" pos:column="49">Routing</name><op:operator pos:line="60" pos:column="56">.</op:operator><name pos:line="60" pos:column="57">IRouteHandler</name></name></type> <name pos:line="60" pos:column="71">routeHandler</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="85">RoutesInspector</name></type> <name pos:line="60" pos:column="101">sut</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="106">IInspectorContext</name></type> <name pos:line="60" pos:column="124">context</name></decl></param>, <param><decl><type><name><name pos:line="60" pos:column="133">System</name><op:operator pos:line="60" pos:column="139">.</op:operator><name pos:line="60" pos:column="140">Web</name><op:operator pos:line="60" pos:column="143">.</op:operator><name pos:line="60" pos:column="144">Routing</name><op:operator pos:line="60" pos:column="151">.</op:operator><name pos:line="60" pos:column="152">Route</name></name></type> <name pos:line="60" pos:column="158">newRoute</name></decl></param>)</parameter_list>
        <block pos:line="61" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="62" pos:column="13">RouteTable</name><op:operator pos:line="62" pos:column="23">.</op:operator><name pos:line="62" pos:column="24">Routes</name><op:operator pos:line="62" pos:column="30">.</op:operator><name pos:line="62" pos:column="31">Clear</name></name><argument_list pos:line="62" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">RouteTable</name><op:operator pos:line="63" pos:column="23">.</op:operator><name pos:line="63" pos:column="24">Routes</name><op:operator pos:line="63" pos:column="30">.</op:operator><name pos:line="63" pos:column="31">Add</name></name><argument_list pos:line="63" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="63" pos:column="43">new</op:operator> <call><name><name pos:line="63" pos:column="47">System</name><op:operator pos:line="63" pos:column="53">.</op:operator><name pos:line="63" pos:column="54">Web</name><op:operator pos:line="63" pos:column="57">.</op:operator><name pos:line="63" pos:column="58">Routing</name><op:operator pos:line="63" pos:column="65">.</op:operator><name pos:line="63" pos:column="66">Route</name></name><argument_list pos:line="63" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="72">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="80">routeHandler</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">context</name><op:operator pos:line="65" pos:column="20">.</op:operator><name pos:line="65" pos:column="21">ProxyFactory</name><op:operator pos:line="65" pos:column="33">.</op:operator><name pos:line="65" pos:column="34">Setup</name></name><argument_list pos:line="65" pos:column="39">(<argument><expr><lambda><name pos:line="65" pos:column="40">x</name> <op:operator pos:line="65" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="65" pos:column="45">x</name><op:operator pos:line="65" pos:column="46">.</op:operator><name><name pos:line="65" pos:column="47">ExtendClass</name><argument_list pos:line="65" pos:column="58">&lt;<argument><name><name pos:line="65" pos:column="59">System</name><op:operator pos:line="65" pos:column="65">.</op:operator><name pos:line="65" pos:column="66">Web</name><op:operator pos:line="65" pos:column="69">.</op:operator><name pos:line="65" pos:column="70">Routing</name><op:operator pos:line="65" pos:column="77">.</op:operator><name pos:line="65" pos:column="78">Route</name></name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="84">(<argument><expr><call><name><name pos:line="65" pos:column="85">It</name><op:operator pos:line="65" pos:column="87">.</op:operator><name><name pos:line="65" pos:column="88">IsAny</name><argument_list pos:line="65" pos:column="93">&lt;<argument><name><name pos:line="65" pos:column="94">IEnumerable</name><argument_list pos:line="65" pos:column="105">&lt;<argument><name pos:line="65" pos:column="106">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="124">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="128">It</name><op:operator pos:line="65" pos:column="130">.</op:operator><name><name pos:line="65" pos:column="131">IsAny</name><argument_list pos:line="65" pos:column="136">&lt;<argument><name><name pos:line="65" pos:column="137">IEnumerable</name><argument_list pos:line="65" pos:column="148">&lt;<argument><name pos:line="65" pos:column="149">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="157">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="161">It</name><op:operator pos:line="65" pos:column="163">.</op:operator><name><name pos:line="65" pos:column="164">IsAny</name><argument_list pos:line="65" pos:column="169">&lt;<argument><name><name pos:line="65" pos:column="170">object</name><index pos:line="65" pos:column="176">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="65" pos:column="179">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="183">.</op:operator><call><name pos:line="65" pos:column="184">Returns</name><argument_list pos:line="65" pos:column="191">(<argument><expr><name pos:line="65" pos:column="192">newRoute</name></expr></argument>)</argument_list></call><op:operator pos:line="65" pos:column="201">.</op:operator><call><name pos:line="65" pos:column="202">Verifiable</name><argument_list pos:line="65" pos:column="212">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">sut</name><op:operator pos:line="67" pos:column="16">.</op:operator><name pos:line="67" pos:column="17">Setup</name></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="69" pos:column="13">context</name><op:operator pos:line="69" pos:column="20">.</op:operator><name pos:line="69" pos:column="21">ProxyFactory</name><op:operator pos:line="69" pos:column="33">.</op:operator><name pos:line="69" pos:column="34">VerifyAll</name></name><argument_list pos:line="69" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="70" pos:column="13">Assert</name><op:operator pos:line="70" pos:column="19">.</op:operator><name pos:line="70" pos:column="20">Same</name></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">newRoute</name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="35">RouteTable</name><op:operator pos:line="70" pos:column="45">.</op:operator><name pos:line="70" pos:column="46">Routes</name><index pos:line="70" pos:column="52">[<expr><lit:literal type="number" pos:line="70" pos:column="53">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="73" pos:column="9">[<expr><name pos:line="73" pos:column="10">Theory</name></expr><op:operator pos:line="73" pos:column="16">,</op:operator> <expr><name pos:line="73" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="74" pos:column="9">public</specifier> <name pos:line="74" pos:column="16">void</name></type> <name pos:line="74" pos:column="21">WrapsMvcRouteDerivedTypes</name><parameter_list pos:line="74" pos:column="46">(<param><decl><type><name pos:line="74" pos:column="47">RoutesInspector</name></type> <name pos:line="74" pos:column="63">sut</name></decl></param>, <param><decl><type><name><name pos:line="74" pos:column="68">System</name><op:operator pos:line="74" pos:column="74">.</op:operator><name pos:line="74" pos:column="75">Web</name><op:operator pos:line="74" pos:column="78">.</op:operator><name pos:line="74" pos:column="79">Routing</name><op:operator pos:line="74" pos:column="86">.</op:operator><name pos:line="74" pos:column="87">IRouteHandler</name></name></type> <name pos:line="74" pos:column="101">routeHandler</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="115">IInspectorContext</name></type> <name pos:line="74" pos:column="133">context</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="142">NewRoute</name></type> <name pos:line="74" pos:column="151">route</name></decl></param>, <param><decl><type><name><name pos:line="74" pos:column="158">System</name><op:operator pos:line="74" pos:column="164">.</op:operator><name pos:line="74" pos:column="165">Web</name><op:operator pos:line="74" pos:column="168">.</op:operator><name pos:line="74" pos:column="169">Routing</name><op:operator pos:line="74" pos:column="176">.</op:operator><name pos:line="74" pos:column="177">Route</name></name></type> <name pos:line="74" pos:column="183">newRoute</name></decl></param>)</parameter_list>
        <block pos:line="75" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">RouteTable</name><op:operator pos:line="76" pos:column="23">.</op:operator><name pos:line="76" pos:column="24">Routes</name><op:operator pos:line="76" pos:column="30">.</op:operator><name pos:line="76" pos:column="31">Clear</name></name><argument_list pos:line="76" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="77" pos:column="13">RouteTable</name><op:operator pos:line="77" pos:column="23">.</op:operator><name pos:line="77" pos:column="24">Routes</name><op:operator pos:line="77" pos:column="30">.</op:operator><name pos:line="77" pos:column="31">Add</name></name><argument_list pos:line="77" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="43">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="79" pos:column="13">context</name><op:operator pos:line="79" pos:column="20">.</op:operator><name pos:line="79" pos:column="21">ProxyFactory</name><op:operator pos:line="79" pos:column="33">.</op:operator><name pos:line="79" pos:column="34">Setup</name></name><argument_list pos:line="79" pos:column="39">(<argument><expr><lambda><name pos:line="79" pos:column="40">x</name> <op:operator pos:line="79" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="79" pos:column="45">x</name><op:operator pos:line="79" pos:column="46">.</op:operator><name pos:line="79" pos:column="47">IsWrapClassEligible</name></name><argument_list pos:line="79" pos:column="66">(<argument><expr><call><name pos:line="79" pos:column="67">typeof</name><argument_list pos:line="79" pos:column="73">(<argument><expr><name><name pos:line="79" pos:column="74">System</name><op:operator pos:line="79" pos:column="80">.</op:operator><name pos:line="79" pos:column="81">Web</name><op:operator pos:line="79" pos:column="84">.</op:operator><name pos:line="79" pos:column="85">Routing</name><op:operator pos:line="79" pos:column="92">.</op:operator><name pos:line="79" pos:column="93">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="101">.</op:operator><call><name pos:line="79" pos:column="102">Returns</name><argument_list pos:line="79" pos:column="109">(<argument><expr><lit:literal type="boolean" pos:line="79" pos:column="110">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="115">.</op:operator><call><name pos:line="79" pos:column="116">Verifiable</name><argument_list pos:line="79" pos:column="126">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="80" pos:column="13">context</name><op:operator pos:line="80" pos:column="20">.</op:operator><name pos:line="80" pos:column="21">ProxyFactory</name><op:operator pos:line="80" pos:column="33">.</op:operator><name pos:line="80" pos:column="34">Setup</name></name><argument_list pos:line="80" pos:column="39">(<argument><expr><lambda><name pos:line="80" pos:column="40">x</name> <op:operator pos:line="80" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="80" pos:column="45">x</name><op:operator pos:line="80" pos:column="46">.</op:operator><name pos:line="80" pos:column="47">WrapClass</name></name><argument_list pos:line="80" pos:column="56">(<argument><expr><op:operator pos:line="80" pos:column="57">(</op:operator><name><name pos:line="80" pos:column="58">System</name><op:operator pos:line="80" pos:column="64">.</op:operator><name pos:line="80" pos:column="65">Web</name><op:operator pos:line="80" pos:column="68">.</op:operator><name pos:line="80" pos:column="69">Routing</name><op:operator pos:line="80" pos:column="76">.</op:operator><name pos:line="80" pos:column="77">Route</name></name><op:operator pos:line="80" pos:column="82">)</op:operator><name pos:line="80" pos:column="83">route</name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="90">It</name><op:operator pos:line="80" pos:column="92">.</op:operator><name><name pos:line="80" pos:column="93">IsAny</name><argument_list pos:line="80" pos:column="98">&lt;<argument><name><name pos:line="80" pos:column="99">IEnumerable</name><argument_list pos:line="80" pos:column="110">&lt;<argument><name pos:line="80" pos:column="111">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="80" pos:column="129">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="133">It</name><op:operator pos:line="80" pos:column="135">.</op:operator><name><name pos:line="80" pos:column="136">IsAny</name><argument_list pos:line="80" pos:column="141">&lt;<argument><name><name pos:line="80" pos:column="142">IEnumerable</name><argument_list pos:line="80" pos:column="153">&lt;<argument><name pos:line="80" pos:column="154">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="80" pos:column="162">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="166">It</name><op:operator pos:line="80" pos:column="168">.</op:operator><name><name pos:line="80" pos:column="169">IsAny</name><argument_list pos:line="80" pos:column="174">&lt;<argument><name><name pos:line="80" pos:column="175">object</name><index pos:line="80" pos:column="181">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="80" pos:column="184">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="80" pos:column="188">.</op:operator><call><name pos:line="80" pos:column="189">Returns</name><argument_list pos:line="80" pos:column="196">(<argument><expr><name pos:line="80" pos:column="197">newRoute</name></expr></argument>)</argument_list></call><op:operator pos:line="80" pos:column="206">.</op:operator><call><name pos:line="80" pos:column="207">Verifiable</name><argument_list pos:line="80" pos:column="217">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="82" pos:column="13">sut</name><op:operator pos:line="82" pos:column="16">.</op:operator><name pos:line="82" pos:column="17">Setup</name></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name pos:line="82" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="84" pos:column="13">context</name><op:operator pos:line="84" pos:column="20">.</op:operator><name pos:line="84" pos:column="21">ProxyFactory</name><op:operator pos:line="84" pos:column="33">.</op:operator><name pos:line="84" pos:column="34">VerifyAll</name></name><argument_list pos:line="84" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="85" pos:column="13">Assert</name><op:operator pos:line="85" pos:column="19">.</op:operator><name pos:line="85" pos:column="20">Same</name></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">newRoute</name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="35">RouteTable</name><op:operator pos:line="85" pos:column="45">.</op:operator><name pos:line="85" pos:column="46">Routes</name><index pos:line="85" pos:column="52">[<expr><lit:literal type="number" pos:line="85" pos:column="53">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="88" pos:column="9">[<expr><name pos:line="88" pos:column="10">Theory</name></expr><op:operator pos:line="88" pos:column="16">,</op:operator> <expr><name pos:line="88" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="89" pos:column="9">public</specifier> <name pos:line="89" pos:column="16">void</name></type> <name pos:line="89" pos:column="21">WrapsMvcRouteBaseDerivedTypes</name><parameter_list pos:line="89" pos:column="50">(<param><decl><type><name pos:line="89" pos:column="51">RoutesInspector</name></type> <name pos:line="89" pos:column="67">sut</name></decl></param>, <param><decl><type><name><name pos:line="89" pos:column="72">System</name><op:operator pos:line="89" pos:column="78">.</op:operator><name pos:line="89" pos:column="79">Web</name><op:operator pos:line="89" pos:column="82">.</op:operator><name pos:line="89" pos:column="83">Routing</name><op:operator pos:line="89" pos:column="90">.</op:operator><name pos:line="89" pos:column="91">IRouteHandler</name></name></type> <name pos:line="89" pos:column="105">routeHandler</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="119">IInspectorContext</name></type> <name pos:line="89" pos:column="137">context</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="146">NewRouteBase</name></type> <name pos:line="89" pos:column="159">route</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="166">RouteBase</name></type> <name pos:line="89" pos:column="176">newRoute</name></decl></param>)</parameter_list>
        <block pos:line="90" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="91" pos:column="13">RouteTable</name><op:operator pos:line="91" pos:column="23">.</op:operator><name pos:line="91" pos:column="24">Routes</name><op:operator pos:line="91" pos:column="30">.</op:operator><name pos:line="91" pos:column="31">Clear</name></name><argument_list pos:line="91" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="92" pos:column="13">RouteTable</name><op:operator pos:line="92" pos:column="23">.</op:operator><name pos:line="92" pos:column="24">Routes</name><op:operator pos:line="92" pos:column="30">.</op:operator><name pos:line="92" pos:column="31">Add</name></name><argument_list pos:line="92" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="92" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="43">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">context</name><op:operator pos:line="94" pos:column="20">.</op:operator><name pos:line="94" pos:column="21">ProxyFactory</name><op:operator pos:line="94" pos:column="33">.</op:operator><name pos:line="94" pos:column="34">Setup</name></name><argument_list pos:line="94" pos:column="39">(<argument><expr><lambda><name pos:line="94" pos:column="40">x</name> <op:operator pos:line="94" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="94" pos:column="45">x</name><op:operator pos:line="94" pos:column="46">.</op:operator><name pos:line="94" pos:column="47">IsWrapClassEligible</name></name><argument_list pos:line="94" pos:column="66">(<argument><expr><call><name pos:line="94" pos:column="67">typeof</name><argument_list pos:line="94" pos:column="73">(<argument><expr><name pos:line="94" pos:column="74">RouteBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="94" pos:column="86">.</op:operator><call><name pos:line="94" pos:column="87">Returns</name><argument_list pos:line="94" pos:column="94">(<argument><expr><lit:literal type="boolean" pos:line="94" pos:column="95">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">context</name><op:operator pos:line="95" pos:column="20">.</op:operator><name pos:line="95" pos:column="21">ProxyFactory</name><op:operator pos:line="95" pos:column="33">.</op:operator><name pos:line="95" pos:column="34">Setup</name></name><argument_list pos:line="95" pos:column="39">(<argument><expr><lambda><name pos:line="95" pos:column="40">x</name> <op:operator pos:line="95" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="95" pos:column="45">x</name><op:operator pos:line="95" pos:column="46">.</op:operator><name pos:line="95" pos:column="47">WrapClass</name></name><argument_list pos:line="95" pos:column="56">(<argument><expr><op:operator pos:line="95" pos:column="57">(</op:operator><name pos:line="95" pos:column="58">RouteBase</name><op:operator pos:line="95" pos:column="67">)</op:operator><name pos:line="95" pos:column="68">route</name></expr></argument>, <argument><expr><call><name><name pos:line="95" pos:column="75">It</name><op:operator pos:line="95" pos:column="77">.</op:operator><name><name pos:line="95" pos:column="78">IsAny</name><argument_list pos:line="95" pos:column="83">&lt;<argument><name><name pos:line="95" pos:column="84">IEnumerable</name><argument_list pos:line="95" pos:column="95">&lt;<argument><name pos:line="95" pos:column="96">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="95" pos:column="114">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="95" pos:column="118">It</name><op:operator pos:line="95" pos:column="120">.</op:operator><name><name pos:line="95" pos:column="121">IsAny</name><argument_list pos:line="95" pos:column="126">&lt;<argument><name><name pos:line="95" pos:column="127">object</name><index pos:line="95" pos:column="133">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="95" pos:column="136">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="95" pos:column="140">.</op:operator><call><name pos:line="95" pos:column="141">Returns</name><argument_list pos:line="95" pos:column="148">(<argument><expr><name pos:line="95" pos:column="149">newRoute</name></expr></argument>)</argument_list></call><op:operator pos:line="95" pos:column="158">.</op:operator><call><name pos:line="95" pos:column="159">Verifiable</name><argument_list pos:line="95" pos:column="169">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">sut</name><op:operator pos:line="97" pos:column="16">.</op:operator><name pos:line="97" pos:column="17">Setup</name></name><argument_list pos:line="97" pos:column="22">(<argument><expr><name pos:line="97" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="99" pos:column="13">context</name><op:operator pos:line="99" pos:column="20">.</op:operator><name pos:line="99" pos:column="21">ProxyFactory</name><op:operator pos:line="99" pos:column="33">.</op:operator><name pos:line="99" pos:column="34">VerifyAll</name></name><argument_list pos:line="99" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">Assert</name><op:operator pos:line="100" pos:column="19">.</op:operator><name pos:line="100" pos:column="20">Same</name></name><argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">newRoute</name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="35">RouteTable</name><op:operator pos:line="100" pos:column="45">.</op:operator><name pos:line="100" pos:column="46">Routes</name><index pos:line="100" pos:column="52">[<expr><lit:literal type="number" pos:line="100" pos:column="53">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>

        <function><type><attribute pos:line="103" pos:column="9">[<expr><name pos:line="103" pos:column="10">Theory</name></expr><op:operator pos:line="103" pos:column="16">,</op:operator> <expr><name pos:line="103" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="104" pos:column="9">public</specifier> <name pos:line="104" pos:column="16">void</name></type> <name pos:line="104" pos:column="21">ExtendsStringConstraints</name><parameter_list pos:line="104" pos:column="45">(<param><decl><type><name pos:line="104" pos:column="46">RoutesInspector</name></type> <name pos:line="104" pos:column="62">sut</name></decl></param>, <param><decl><type><name pos:line="104" pos:column="67">IInspectorContext</name></type> <name pos:line="104" pos:column="85">context</name></decl></param>, <param><decl><type><name pos:line="104" pos:column="94">NewRoute</name></type> <name pos:line="104" pos:column="103">route</name></decl></param>, <param><decl><type><name><name pos:line="104" pos:column="110">System</name><op:operator pos:line="104" pos:column="116">.</op:operator><name pos:line="104" pos:column="117">Web</name><op:operator pos:line="104" pos:column="120">.</op:operator><name pos:line="104" pos:column="121">Routing</name><op:operator pos:line="104" pos:column="128">.</op:operator><name pos:line="104" pos:column="129">Route</name></name></type> <name pos:line="104" pos:column="135">newRoute</name></decl></param>, <param><decl><type><name pos:line="104" pos:column="145">string</name></type> <name pos:line="104" pos:column="152">routeConstraint</name></decl></param>)</parameter_list>
        <block pos:line="105" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">route</name><op:operator pos:line="106" pos:column="18">.</op:operator><name pos:line="106" pos:column="19">Constraints</name></name> <op:operator pos:line="106" pos:column="31">=</op:operator> <op:operator pos:line="106" pos:column="33">new</op:operator> <name pos:line="106" pos:column="37">RouteValueDictionary</name> <block pos:line="106" pos:column="58">{ <expr><block pos:line="106" pos:column="60">{ <expr><lit:literal type="string" pos:line="106" pos:column="62">"controller"</lit:literal></expr><op:operator pos:line="106" pos:column="74">,</op:operator> <expr><name pos:line="106" pos:column="76">routeConstraint</name></expr> }</block></expr> }</block></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="108" pos:column="13">RouteTable</name><op:operator pos:line="108" pos:column="23">.</op:operator><name pos:line="108" pos:column="24">Routes</name><op:operator pos:line="108" pos:column="30">.</op:operator><name pos:line="108" pos:column="31">Clear</name></name><argument_list pos:line="108" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="109" pos:column="13">RouteTable</name><op:operator pos:line="109" pos:column="23">.</op:operator><name pos:line="109" pos:column="24">Routes</name><op:operator pos:line="109" pos:column="30">.</op:operator><name pos:line="109" pos:column="31">Add</name></name><argument_list pos:line="109" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="43">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="111" pos:column="13">context</name><op:operator pos:line="111" pos:column="20">.</op:operator><name pos:line="111" pos:column="21">ProxyFactory</name><op:operator pos:line="111" pos:column="33">.</op:operator><name pos:line="111" pos:column="34">Setup</name></name><argument_list pos:line="111" pos:column="39">(<argument><expr><lambda><name pos:line="111" pos:column="40">x</name> <op:operator pos:line="111" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="111" pos:column="45">x</name><op:operator pos:line="111" pos:column="46">.</op:operator><name pos:line="111" pos:column="47">IsWrapClassEligible</name></name><argument_list pos:line="111" pos:column="66">(<argument><expr><call><name pos:line="111" pos:column="67">typeof</name><argument_list pos:line="111" pos:column="73">(<argument><expr><name><name pos:line="111" pos:column="74">System</name><op:operator pos:line="111" pos:column="80">.</op:operator><name pos:line="111" pos:column="81">Web</name><op:operator pos:line="111" pos:column="84">.</op:operator><name pos:line="111" pos:column="85">Routing</name><op:operator pos:line="111" pos:column="92">.</op:operator><name pos:line="111" pos:column="93">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="101">.</op:operator><call><name pos:line="111" pos:column="102">Returns</name><argument_list pos:line="111" pos:column="109">(<argument><expr><lit:literal type="boolean" pos:line="111" pos:column="110">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="115">.</op:operator><call><name pos:line="111" pos:column="116">Verifiable</name><argument_list pos:line="111" pos:column="126">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">context</name><op:operator pos:line="112" pos:column="20">.</op:operator><name pos:line="112" pos:column="21">ProxyFactory</name><op:operator pos:line="112" pos:column="33">.</op:operator><name pos:line="112" pos:column="34">Setup</name></name><argument_list pos:line="112" pos:column="39">(<argument><expr><lambda><name pos:line="112" pos:column="40">x</name> <op:operator pos:line="112" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="112" pos:column="45">x</name><op:operator pos:line="112" pos:column="46">.</op:operator><name pos:line="112" pos:column="47">WrapClass</name></name><argument_list pos:line="112" pos:column="56">(<argument><expr><op:operator pos:line="112" pos:column="57">(</op:operator><name><name pos:line="112" pos:column="58">System</name><op:operator pos:line="112" pos:column="64">.</op:operator><name pos:line="112" pos:column="65">Web</name><op:operator pos:line="112" pos:column="68">.</op:operator><name pos:line="112" pos:column="69">Routing</name><op:operator pos:line="112" pos:column="76">.</op:operator><name pos:line="112" pos:column="77">Route</name></name><op:operator pos:line="112" pos:column="82">)</op:operator><name pos:line="112" pos:column="83">route</name></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="90">It</name><op:operator pos:line="112" pos:column="92">.</op:operator><name><name pos:line="112" pos:column="93">IsAny</name><argument_list pos:line="112" pos:column="98">&lt;<argument><name><name pos:line="112" pos:column="99">IEnumerable</name><argument_list pos:line="112" pos:column="110">&lt;<argument><name pos:line="112" pos:column="111">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="112" pos:column="129">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="133">It</name><op:operator pos:line="112" pos:column="135">.</op:operator><name><name pos:line="112" pos:column="136">IsAny</name><argument_list pos:line="112" pos:column="141">&lt;<argument><name><name pos:line="112" pos:column="142">IEnumerable</name><argument_list pos:line="112" pos:column="153">&lt;<argument><name pos:line="112" pos:column="154">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="112" pos:column="162">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="166">It</name><op:operator pos:line="112" pos:column="168">.</op:operator><name><name pos:line="112" pos:column="169">IsAny</name><argument_list pos:line="112" pos:column="174">&lt;<argument><name><name pos:line="112" pos:column="175">object</name><index pos:line="112" pos:column="181">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="112" pos:column="184">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="112" pos:column="188">.</op:operator><call><name pos:line="112" pos:column="189">Returns</name><argument_list pos:line="112" pos:column="196">(<argument><expr><name pos:line="112" pos:column="197">newRoute</name></expr></argument>)</argument_list></call><op:operator pos:line="112" pos:column="206">.</op:operator><call><name pos:line="112" pos:column="207">Verifiable</name><argument_list pos:line="112" pos:column="217">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="114" pos:column="13">sut</name><op:operator pos:line="114" pos:column="16">.</op:operator><name pos:line="114" pos:column="17">Setup</name></name><argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="116" pos:column="13">context</name><op:operator pos:line="116" pos:column="20">.</op:operator><name pos:line="116" pos:column="21">ProxyFactory</name><op:operator pos:line="116" pos:column="33">.</op:operator><name pos:line="116" pos:column="34">VerifyAll</name></name><argument_list pos:line="116" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="117" pos:column="13">Assert</name><op:operator pos:line="117" pos:column="19">.</op:operator><name pos:line="117" pos:column="20">Same</name></name><argument_list pos:line="117" pos:column="24">(<argument><expr><call><name pos:line="117" pos:column="25">typeof</name><argument_list pos:line="117" pos:column="31">(<argument><expr><name pos:line="117" pos:column="32">RouteConstraintRegex</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="55">route</name><op:operator pos:line="117" pos:column="60">.</op:operator><name pos:line="117" pos:column="61">Constraints</name><index pos:line="117" pos:column="72">[<expr><lit:literal type="string" pos:line="117" pos:column="73">"controller"</lit:literal></expr>]</index></name><op:operator pos:line="117" pos:column="86">.</op:operator><call><name pos:line="117" pos:column="87">GetType</name><argument_list pos:line="117" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
         
        <function><type><attribute pos:line="120" pos:column="9">[<expr><name pos:line="120" pos:column="10">Theory</name></expr><op:operator pos:line="120" pos:column="16">,</op:operator> <expr><name pos:line="120" pos:column="18">AutoMock</name></expr>]</attribute>
        <specifier pos:line="121" pos:column="9">public</specifier> <name pos:line="121" pos:column="16">void</name></type> <name pos:line="121" pos:column="21">ExtendsRouteConstraintConstraints</name><parameter_list pos:line="121" pos:column="54">(<param><decl><type><name pos:line="121" pos:column="55">RoutesInspector</name></type> <name pos:line="121" pos:column="71">sut</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="76">IInspectorContext</name></type> <name pos:line="121" pos:column="94">context</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="103">NewRoute</name></type> <name pos:line="121" pos:column="112">route</name></decl></param>, <param><decl><type><name><name pos:line="121" pos:column="119">System</name><op:operator pos:line="121" pos:column="125">.</op:operator><name pos:line="121" pos:column="126">Web</name><op:operator pos:line="121" pos:column="129">.</op:operator><name pos:line="121" pos:column="130">Routing</name><op:operator pos:line="121" pos:column="137">.</op:operator><name pos:line="121" pos:column="138">Route</name></name></type> <name pos:line="121" pos:column="144">newRoute</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="154">IRouteConstraint</name></type> <name pos:line="121" pos:column="171">routeConstraint</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="188">IRouteConstraint</name></type> <name pos:line="121" pos:column="205">newRouteConstraint</name></decl></param>)</parameter_list>
        <block pos:line="122" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">route</name><op:operator pos:line="123" pos:column="18">.</op:operator><name pos:line="123" pos:column="19">Constraints</name></name> <op:operator pos:line="123" pos:column="31">=</op:operator> <op:operator pos:line="123" pos:column="33">new</op:operator> <name pos:line="123" pos:column="37">RouteValueDictionary</name> <block pos:line="123" pos:column="58">{ <expr><block pos:line="123" pos:column="60">{ <expr><lit:literal type="string" pos:line="123" pos:column="62">"controller"</lit:literal></expr><op:operator pos:line="123" pos:column="74">,</op:operator> <expr><name pos:line="123" pos:column="76">routeConstraint</name></expr> }</block></expr> }</block></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="125" pos:column="13">RouteTable</name><op:operator pos:line="125" pos:column="23">.</op:operator><name pos:line="125" pos:column="24">Routes</name><op:operator pos:line="125" pos:column="30">.</op:operator><name pos:line="125" pos:column="31">Clear</name></name><argument_list pos:line="125" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="126" pos:column="13">RouteTable</name><op:operator pos:line="126" pos:column="23">.</op:operator><name pos:line="126" pos:column="24">Routes</name><op:operator pos:line="126" pos:column="30">.</op:operator><name pos:line="126" pos:column="31">Add</name></name><argument_list pos:line="126" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="35">"Test"</lit:literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="43">route</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="128" pos:column="13">context</name><op:operator pos:line="128" pos:column="20">.</op:operator><name pos:line="128" pos:column="21">ProxyFactory</name><op:operator pos:line="128" pos:column="33">.</op:operator><name pos:line="128" pos:column="34">Setup</name></name><argument_list pos:line="128" pos:column="39">(<argument><expr><lambda><name pos:line="128" pos:column="40">x</name> <op:operator pos:line="128" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="128" pos:column="45">x</name><op:operator pos:line="128" pos:column="46">.</op:operator><name pos:line="128" pos:column="47">IsWrapClassEligible</name></name><argument_list pos:line="128" pos:column="66">(<argument><expr><call><name pos:line="128" pos:column="67">typeof</name><argument_list pos:line="128" pos:column="73">(<argument><expr><name><name pos:line="128" pos:column="74">System</name><op:operator pos:line="128" pos:column="80">.</op:operator><name pos:line="128" pos:column="81">Web</name><op:operator pos:line="128" pos:column="84">.</op:operator><name pos:line="128" pos:column="85">Routing</name><op:operator pos:line="128" pos:column="92">.</op:operator><name pos:line="128" pos:column="93">Route</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="128" pos:column="101">.</op:operator><call><name pos:line="128" pos:column="102">Returns</name><argument_list pos:line="128" pos:column="109">(<argument><expr><lit:literal type="boolean" pos:line="128" pos:column="110">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="128" pos:column="115">.</op:operator><call><name pos:line="128" pos:column="116">Verifiable</name><argument_list pos:line="128" pos:column="126">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="129" pos:column="13">context</name><op:operator pos:line="129" pos:column="20">.</op:operator><name pos:line="129" pos:column="21">ProxyFactory</name><op:operator pos:line="129" pos:column="33">.</op:operator><name pos:line="129" pos:column="34">Setup</name></name><argument_list pos:line="129" pos:column="39">(<argument><expr><lambda><name pos:line="129" pos:column="40">x</name> <op:operator pos:line="129" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="129" pos:column="45">x</name><op:operator pos:line="129" pos:column="46">.</op:operator><name pos:line="129" pos:column="47">WrapClass</name></name><argument_list pos:line="129" pos:column="56">(<argument><expr><op:operator pos:line="129" pos:column="57">(</op:operator><name><name pos:line="129" pos:column="58">System</name><op:operator pos:line="129" pos:column="64">.</op:operator><name pos:line="129" pos:column="65">Web</name><op:operator pos:line="129" pos:column="68">.</op:operator><name pos:line="129" pos:column="69">Routing</name><op:operator pos:line="129" pos:column="76">.</op:operator><name pos:line="129" pos:column="77">Route</name></name><op:operator pos:line="129" pos:column="82">)</op:operator><name pos:line="129" pos:column="83">route</name></expr></argument>, <argument><expr><call><name><name pos:line="129" pos:column="90">It</name><op:operator pos:line="129" pos:column="92">.</op:operator><name><name pos:line="129" pos:column="93">IsAny</name><argument_list pos:line="129" pos:column="98">&lt;<argument><name><name pos:line="129" pos:column="99">IEnumerable</name><argument_list pos:line="129" pos:column="110">&lt;<argument><name pos:line="129" pos:column="111">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="129" pos:column="129">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="129" pos:column="133">It</name><op:operator pos:line="129" pos:column="135">.</op:operator><name><name pos:line="129" pos:column="136">IsAny</name><argument_list pos:line="129" pos:column="141">&lt;<argument><name><name pos:line="129" pos:column="142">IEnumerable</name><argument_list pos:line="129" pos:column="153">&lt;<argument><name pos:line="129" pos:column="154">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="129" pos:column="162">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="129" pos:column="166">It</name><op:operator pos:line="129" pos:column="168">.</op:operator><name><name pos:line="129" pos:column="169">IsAny</name><argument_list pos:line="129" pos:column="174">&lt;<argument><name><name pos:line="129" pos:column="175">object</name><index pos:line="129" pos:column="181">[]</index></name></argument>&gt;</argument_list></name></name><argument_list pos:line="129" pos:column="184">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="188">.</op:operator><call><name pos:line="129" pos:column="189">Returns</name><argument_list pos:line="129" pos:column="196">(<argument><expr><name pos:line="129" pos:column="197">newRoute</name></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="206">.</op:operator><call><name pos:line="129" pos:column="207">Verifiable</name><argument_list pos:line="129" pos:column="217">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="130" pos:column="13">context</name><op:operator pos:line="130" pos:column="20">.</op:operator><name pos:line="130" pos:column="21">ProxyFactory</name><op:operator pos:line="130" pos:column="33">.</op:operator><name pos:line="130" pos:column="34">Setup</name></name><argument_list pos:line="130" pos:column="39">(<argument><expr><lambda><name pos:line="130" pos:column="40">x</name> <op:operator pos:line="130" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="130" pos:column="45">x</name><op:operator pos:line="130" pos:column="46">.</op:operator><name><name pos:line="130" pos:column="47">IsWrapInterfaceEligible</name><argument_list pos:line="130" pos:column="70">&lt;<argument><name pos:line="130" pos:column="71">IRouteConstraint</name></argument>&gt;</argument_list></name></name><argument_list pos:line="130" pos:column="88">(<argument><expr><call><name pos:line="130" pos:column="89">typeof</name><argument_list pos:line="130" pos:column="95">(<argument><expr><name pos:line="130" pos:column="96">IRouteConstraint</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="130" pos:column="115">.</op:operator><call><name pos:line="130" pos:column="116">Returns</name><argument_list pos:line="130" pos:column="123">(<argument><expr><lit:literal type="boolean" pos:line="130" pos:column="124">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="130" pos:column="129">.</op:operator><call><name pos:line="130" pos:column="130">Verifiable</name><argument_list pos:line="130" pos:column="140">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="131" pos:column="13">context</name><op:operator pos:line="131" pos:column="20">.</op:operator><name pos:line="131" pos:column="21">ProxyFactory</name><op:operator pos:line="131" pos:column="33">.</op:operator><name pos:line="131" pos:column="34">Setup</name></name><argument_list pos:line="131" pos:column="39">(<argument><expr><lambda><name pos:line="131" pos:column="40">x</name> <op:operator pos:line="131" pos:column="42">=&gt;</op:operator> <call><name><name pos:line="131" pos:column="45">x</name><op:operator pos:line="131" pos:column="46">.</op:operator><name pos:line="131" pos:column="47">WrapInterface</name></name><argument_list pos:line="131" pos:column="60">(<argument><expr><name pos:line="131" pos:column="61">routeConstraint</name></expr></argument>, <argument><expr><call><name><name pos:line="131" pos:column="78">It</name><op:operator pos:line="131" pos:column="80">.</op:operator><name><name pos:line="131" pos:column="81">IsAny</name><argument_list pos:line="131" pos:column="86">&lt;<argument><name><name pos:line="131" pos:column="87">IEnumerable</name><argument_list pos:line="131" pos:column="98">&lt;<argument><name pos:line="131" pos:column="99">IAlternateMethod</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="131" pos:column="117">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="131" pos:column="121">It</name><op:operator pos:line="131" pos:column="123">.</op:operator><name><name pos:line="131" pos:column="124">IsAny</name><argument_list pos:line="131" pos:column="129">&lt;<argument><name><name pos:line="131" pos:column="130">IEnumerable</name><argument_list pos:line="131" pos:column="141">&lt;<argument><name pos:line="131" pos:column="142">object</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></name><argument_list pos:line="131" pos:column="150">()</argument_list></call></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call><op:operator pos:line="131" pos:column="154">.</op:operator><call><name pos:line="131" pos:column="155">Returns</name><argument_list pos:line="131" pos:column="162">(<argument><expr><name pos:line="131" pos:column="163">newRouteConstraint</name></expr></argument>)</argument_list></call><op:operator pos:line="131" pos:column="182">.</op:operator><call><name pos:line="131" pos:column="183">Verifiable</name><argument_list pos:line="131" pos:column="193">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="133" pos:column="13">sut</name><op:operator pos:line="133" pos:column="16">.</op:operator><name pos:line="133" pos:column="17">Setup</name></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="135" pos:column="13">context</name><op:operator pos:line="135" pos:column="20">.</op:operator><name pos:line="135" pos:column="21">ProxyFactory</name><op:operator pos:line="135" pos:column="33">.</op:operator><name pos:line="135" pos:column="34">VerifyAll</name></name><argument_list pos:line="135" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="136" pos:column="13">Assert</name><op:operator pos:line="136" pos:column="19">.</op:operator><name pos:line="136" pos:column="20">Same</name></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">newRouteConstraint</name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="45">route</name><op:operator pos:line="136" pos:column="50">.</op:operator><name pos:line="136" pos:column="51">Constraints</name><index pos:line="136" pos:column="62">[<expr><lit:literal type="string" pos:line="136" pos:column="63">"controller"</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>


        <class><specifier pos:line="140" pos:column="9">public</specifier> class <name pos:line="140" pos:column="22">NewRouteBase</name> <super pos:line="140" pos:column="35">: <name pos:line="140" pos:column="37">RouteBase</name></super>
        <block pos:line="141" pos:column="9">{
            <function><type><specifier pos:line="142" pos:column="13">public</specifier> <specifier pos:line="142" pos:column="20">override</specifier> <name><name pos:line="142" pos:column="29">System</name><op:operator pos:line="142" pos:column="35">.</op:operator><name pos:line="142" pos:column="36">Web</name><op:operator pos:line="142" pos:column="39">.</op:operator><name pos:line="142" pos:column="40">Routing</name><op:operator pos:line="142" pos:column="47">.</op:operator><name pos:line="142" pos:column="48">RouteData</name></name></type> <name pos:line="142" pos:column="58">GetRouteData</name><parameter_list pos:line="142" pos:column="70">(<param><decl><type><name pos:line="142" pos:column="71">HttpContextBase</name></type> <name pos:line="142" pos:column="87">httpContext</name></decl></param>)</parameter_list>
            <block pos:line="143" pos:column="13">{ 
                <return pos:line="144" pos:column="17">return <expr><op:operator pos:line="144" pos:column="24">new</op:operator> <call><name><name pos:line="144" pos:column="28">System</name><op:operator pos:line="144" pos:column="34">.</op:operator><name pos:line="144" pos:column="35">Web</name><op:operator pos:line="144" pos:column="38">.</op:operator><name pos:line="144" pos:column="39">Routing</name><op:operator pos:line="144" pos:column="46">.</op:operator><name pos:line="144" pos:column="47">RouteData</name></name><argument_list pos:line="144" pos:column="56">()</argument_list></call></expr>;</return>
            }</block></function>

            <function><type><specifier pos:line="147" pos:column="13">public</specifier> <specifier pos:line="147" pos:column="20">override</specifier> <name><name pos:line="147" pos:column="29">System</name><op:operator pos:line="147" pos:column="35">.</op:operator><name pos:line="147" pos:column="36">Web</name><op:operator pos:line="147" pos:column="39">.</op:operator><name pos:line="147" pos:column="40">Routing</name><op:operator pos:line="147" pos:column="47">.</op:operator><name pos:line="147" pos:column="48">VirtualPathData</name></name></type> <name pos:line="147" pos:column="64">GetVirtualPath</name><parameter_list pos:line="147" pos:column="78">(<param><decl><type><name><name pos:line="147" pos:column="79">System</name><op:operator pos:line="147" pos:column="85">.</op:operator><name pos:line="147" pos:column="86">Web</name><op:operator pos:line="147" pos:column="89">.</op:operator><name pos:line="147" pos:column="90">Routing</name><op:operator pos:line="147" pos:column="97">.</op:operator><name pos:line="147" pos:column="98">RequestContext</name></name></type> <name pos:line="147" pos:column="113">requestContext</name></decl></param>, <param><decl><type><name><name pos:line="147" pos:column="129">System</name><op:operator pos:line="147" pos:column="135">.</op:operator><name pos:line="147" pos:column="136">Web</name><op:operator pos:line="147" pos:column="139">.</op:operator><name pos:line="147" pos:column="140">Routing</name><op:operator pos:line="147" pos:column="147">.</op:operator><name pos:line="147" pos:column="148">RouteValueDictionary</name></name></type> <name pos:line="147" pos:column="169">values</name></decl></param>)</parameter_list>
            <block pos:line="148" pos:column="13">{
                <return pos:line="149" pos:column="17">return <expr><op:operator pos:line="149" pos:column="24">new</op:operator> <call><name><name pos:line="149" pos:column="28">System</name><op:operator pos:line="149" pos:column="34">.</op:operator><name pos:line="149" pos:column="35">Web</name><op:operator pos:line="149" pos:column="38">.</op:operator><name pos:line="149" pos:column="39">Routing</name><op:operator pos:line="149" pos:column="46">.</op:operator><name pos:line="149" pos:column="47">VirtualPathData</name></name><argument_list pos:line="149" pos:column="62">(<argument><expr><name pos:line="149" pos:column="63">this</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="149" pos:column="69">"Test"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
            }</block></function>
        }</block></class>

        <class><specifier pos:line="153" pos:column="9">public</specifier> class <name pos:line="153" pos:column="22">NewConstructorRouteBase</name> <super pos:line="153" pos:column="46">: <name pos:line="153" pos:column="48">NewRouteBase</name></super>
        <block pos:line="154" pos:column="9">{
            <constructor><specifier pos:line="155" pos:column="13">public</specifier> <name pos:line="155" pos:column="20">NewConstructorRouteBase</name><parameter_list pos:line="155" pos:column="43">(<param><decl><type><name pos:line="155" pos:column="44">string</name></type> <name pos:line="155" pos:column="51">name</name></decl></param>)</parameter_list>
            <block pos:line="156" pos:column="13">{
            }</block></constructor>
        }</block></class>

        <class><specifier pos:line="160" pos:column="9">public</specifier> class <name pos:line="160" pos:column="22">NewRoute</name> <super pos:line="160" pos:column="31">: <name><name pos:line="160" pos:column="33">System</name><op:operator pos:line="160" pos:column="39">.</op:operator><name pos:line="160" pos:column="40">Web</name><op:operator pos:line="160" pos:column="43">.</op:operator><name pos:line="160" pos:column="44">Routing</name><op:operator pos:line="160" pos:column="51">.</op:operator><name pos:line="160" pos:column="52">Route</name></name></super>
        <block pos:line="161" pos:column="9">{
            <constructor><specifier pos:line="162" pos:column="13">public</specifier> <name pos:line="162" pos:column="20">NewRoute</name><parameter_list pos:line="162" pos:column="28">(<param><decl><type><name pos:line="162" pos:column="29">string</name></type> <name pos:line="162" pos:column="36">url</name></decl></param>, <param><decl><type><name><name pos:line="162" pos:column="41">System</name><op:operator pos:line="162" pos:column="47">.</op:operator><name pos:line="162" pos:column="48">Web</name><op:operator pos:line="162" pos:column="51">.</op:operator><name pos:line="162" pos:column="52">Routing</name><op:operator pos:line="162" pos:column="59">.</op:operator><name pos:line="162" pos:column="60">IRouteHandler</name></name></type> <name pos:line="162" pos:column="74">routeHandler</name></decl></param>)</parameter_list>
                <member_list pos:line="163" pos:column="17">: <call><name pos:line="163" pos:column="19">base</name><argument_list pos:line="163" pos:column="23">(<argument><expr><name pos:line="163" pos:column="24">url</name></expr></argument>, <argument><expr><name pos:line="163" pos:column="29">routeHandler</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="164" pos:column="13">{
            }</block></constructor>

            <constructor><specifier pos:line="167" pos:column="13">public</specifier> <name pos:line="167" pos:column="20">NewRoute</name><parameter_list pos:line="167" pos:column="28">(<param><decl><type><name pos:line="167" pos:column="29">string</name></type> <name pos:line="167" pos:column="36">url</name></decl></param>, <param><decl><type><name><name pos:line="167" pos:column="41">System</name><op:operator pos:line="167" pos:column="47">.</op:operator><name pos:line="167" pos:column="48">Web</name><op:operator pos:line="167" pos:column="51">.</op:operator><name pos:line="167" pos:column="52">Routing</name><op:operator pos:line="167" pos:column="59">.</op:operator><name pos:line="167" pos:column="60">RouteValueDictionary</name></name></type> <name pos:line="167" pos:column="81">defaults</name></decl></param>, <param><decl><type><name><name pos:line="167" pos:column="91">System</name><op:operator pos:line="167" pos:column="97">.</op:operator><name pos:line="167" pos:column="98">Web</name><op:operator pos:line="167" pos:column="101">.</op:operator><name pos:line="167" pos:column="102">Routing</name><op:operator pos:line="167" pos:column="109">.</op:operator><name pos:line="167" pos:column="110">IRouteHandler</name></name></type> <name pos:line="167" pos:column="124">routeHandler</name></decl></param>)</parameter_list>
                <member_list pos:line="168" pos:column="17">: <call><name pos:line="168" pos:column="19">base</name><argument_list pos:line="168" pos:column="23">(<argument><expr><name pos:line="168" pos:column="24">url</name></expr></argument>, <argument><expr><name pos:line="168" pos:column="29">defaults</name></expr></argument>, <argument><expr><name pos:line="168" pos:column="39">routeHandler</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="169" pos:column="13">{
            }</block></constructor>

            <constructor><specifier pos:line="172" pos:column="13">public</specifier> <name pos:line="172" pos:column="20">NewRoute</name><parameter_list pos:line="172" pos:column="28">(<param><decl><type><name pos:line="172" pos:column="29">string</name></type> <name pos:line="172" pos:column="36">url</name></decl></param>, <param><decl><type><name><name pos:line="172" pos:column="41">System</name><op:operator pos:line="172" pos:column="47">.</op:operator><name pos:line="172" pos:column="48">Web</name><op:operator pos:line="172" pos:column="51">.</op:operator><name pos:line="172" pos:column="52">Routing</name><op:operator pos:line="172" pos:column="59">.</op:operator><name pos:line="172" pos:column="60">RouteValueDictionary</name></name></type> <name pos:line="172" pos:column="81">defaults</name></decl></param>, <param><decl><type><name><name pos:line="172" pos:column="91">System</name><op:operator pos:line="172" pos:column="97">.</op:operator><name pos:line="172" pos:column="98">Web</name><op:operator pos:line="172" pos:column="101">.</op:operator><name pos:line="172" pos:column="102">Routing</name><op:operator pos:line="172" pos:column="109">.</op:operator><name pos:line="172" pos:column="110">RouteValueDictionary</name></name></type> <name pos:line="172" pos:column="131">constraints</name></decl></param>, <param><decl><type><name><name pos:line="172" pos:column="144">System</name><op:operator pos:line="172" pos:column="150">.</op:operator><name pos:line="172" pos:column="151">Web</name><op:operator pos:line="172" pos:column="154">.</op:operator><name pos:line="172" pos:column="155">Routing</name><op:operator pos:line="172" pos:column="162">.</op:operator><name pos:line="172" pos:column="163">IRouteHandler</name></name></type> <name pos:line="172" pos:column="177">routeHandler</name></decl></param>)</parameter_list>
                <member_list pos:line="173" pos:column="17">: <call><name pos:line="173" pos:column="19">base</name><argument_list pos:line="173" pos:column="23">(<argument><expr><name pos:line="173" pos:column="24">url</name></expr></argument>, <argument><expr><name pos:line="173" pos:column="29">defaults</name></expr></argument>, <argument><expr><name pos:line="173" pos:column="39">constraints</name></expr></argument>, <argument><expr><name pos:line="173" pos:column="52">routeHandler</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="174" pos:column="13">{
            }</block></constructor>

            <constructor><specifier pos:line="177" pos:column="13">public</specifier> <name pos:line="177" pos:column="20">NewRoute</name><parameter_list pos:line="177" pos:column="28">(<param><decl><type><name pos:line="177" pos:column="29">string</name></type> <name pos:line="177" pos:column="36">url</name></decl></param>, <param><decl><type><name><name pos:line="177" pos:column="41">System</name><op:operator pos:line="177" pos:column="47">.</op:operator><name pos:line="177" pos:column="48">Web</name><op:operator pos:line="177" pos:column="51">.</op:operator><name pos:line="177" pos:column="52">Routing</name><op:operator pos:line="177" pos:column="59">.</op:operator><name pos:line="177" pos:column="60">RouteValueDictionary</name></name></type> <name pos:line="177" pos:column="81">defaults</name></decl></param>, <param><decl><type><name><name pos:line="177" pos:column="91">System</name><op:operator pos:line="177" pos:column="97">.</op:operator><name pos:line="177" pos:column="98">Web</name><op:operator pos:line="177" pos:column="101">.</op:operator><name pos:line="177" pos:column="102">Routing</name><op:operator pos:line="177" pos:column="109">.</op:operator><name pos:line="177" pos:column="110">RouteValueDictionary</name></name></type> <name pos:line="177" pos:column="131">constraints</name></decl></param>, <param><decl><type><name><name pos:line="177" pos:column="144">System</name><op:operator pos:line="177" pos:column="150">.</op:operator><name pos:line="177" pos:column="151">Web</name><op:operator pos:line="177" pos:column="154">.</op:operator><name pos:line="177" pos:column="155">Routing</name><op:operator pos:line="177" pos:column="162">.</op:operator><name pos:line="177" pos:column="163">RouteValueDictionary</name></name></type> <name pos:line="177" pos:column="184">dataTokens</name></decl></param>, <param><decl><type><name><name pos:line="177" pos:column="196">System</name><op:operator pos:line="177" pos:column="202">.</op:operator><name pos:line="177" pos:column="203">Web</name><op:operator pos:line="177" pos:column="206">.</op:operator><name pos:line="177" pos:column="207">Routing</name><op:operator pos:line="177" pos:column="214">.</op:operator><name pos:line="177" pos:column="215">IRouteHandler</name></name></type> <name pos:line="177" pos:column="229">routeHandler</name></decl></param>)</parameter_list>
                <member_list pos:line="178" pos:column="17">: <call><name pos:line="178" pos:column="19">base</name><argument_list pos:line="178" pos:column="23">(<argument><expr><name pos:line="178" pos:column="24">url</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="29">defaults</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="39">constraints</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="52">dataTokens</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="64">routeHandler</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="179" pos:column="13">{
            }</block></constructor>
        }</block></class>

        <class><specifier pos:line="183" pos:column="9">public</specifier> class <name pos:line="183" pos:column="22">NewConstructorRoute</name> <super pos:line="183" pos:column="42">: <name><name pos:line="183" pos:column="44">System</name><op:operator pos:line="183" pos:column="50">.</op:operator><name pos:line="183" pos:column="51">Web</name><op:operator pos:line="183" pos:column="54">.</op:operator><name pos:line="183" pos:column="55">Routing</name><op:operator pos:line="183" pos:column="62">.</op:operator><name pos:line="183" pos:column="63">Route</name></name></super>
        <block pos:line="184" pos:column="9">{
            <constructor><specifier pos:line="185" pos:column="13">public</specifier> <name pos:line="185" pos:column="20">NewConstructorRoute</name><parameter_list pos:line="185" pos:column="39">(<param><decl><type><name pos:line="185" pos:column="40">string</name></type> <name pos:line="185" pos:column="47">url</name></decl></param>, <param><decl><type><name><name pos:line="185" pos:column="52">System</name><op:operator pos:line="185" pos:column="58">.</op:operator><name pos:line="185" pos:column="59">Web</name><op:operator pos:line="185" pos:column="62">.</op:operator><name pos:line="185" pos:column="63">Routing</name><op:operator pos:line="185" pos:column="70">.</op:operator><name pos:line="185" pos:column="71">IRouteHandler</name></name></type> <name pos:line="185" pos:column="85">routeHandler</name></decl></param>, <param><decl><type><name pos:line="185" pos:column="99">string</name></type> <name pos:line="185" pos:column="106">name</name></decl></param>)</parameter_list>
                <member_list pos:line="186" pos:column="17">: <call><name pos:line="186" pos:column="19">base</name><argument_list pos:line="186" pos:column="23">(<argument><expr><name pos:line="186" pos:column="24">url</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="29">routeHandler</name></expr></argument>)</argument_list></call>
            </member_list><block pos:line="187" pos:column="13">{
            }</block></constructor>
        }</block></class>
    }</block></class>
}</block></namespace>
</unit>
