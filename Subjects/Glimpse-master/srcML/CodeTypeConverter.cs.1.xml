<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="D:\Research\Subjects\Glimpse-master\source\Glimpse.Core\Tab\Assist\CodeTypeConverter.cs" pos:tabs="8"><using pos:line="1" pos:column="1">using <name><name pos:line="1" pos:column="7">System</name><op:operator pos:line="1" pos:column="13">.</op:operator><name pos:line="1" pos:column="14">Collections</name><op:operator pos:line="1" pos:column="25">.</op:operator><name pos:line="1" pos:column="26">Generic</name></name>;</using>

<namespace pos:line="3" pos:column="1">namespace <name><name pos:line="3" pos:column="11">Glimpse</name><op:operator pos:line="3" pos:column="18">.</op:operator><name pos:line="3" pos:column="19">Core</name><op:operator pos:line="3" pos:column="23">.</op:operator><name pos:line="3" pos:column="24">Tab</name><op:operator pos:line="3" pos:column="27">.</op:operator><name pos:line="3" pos:column="28">Assist</name></name>
<block pos:line="4" pos:column="1">{
    <class><specifier pos:line="5" pos:column="5">public</specifier> <specifier pos:line="5" pos:column="12">static</specifier> class <name pos:line="5" pos:column="25">CodeTypeConverter</name>
    <block pos:line="6" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">private</specifier> <specifier pos:line="7" pos:column="17">static</specifier> <specifier pos:line="7" pos:column="24">readonly</specifier> <name><name pos:line="7" pos:column="33">IDictionary</name><argument_list pos:line="7" pos:column="44">&lt;<argument><name pos:line="7" pos:column="45">CodeType</name></argument>, <argument><name pos:line="7" pos:column="55">string</name></argument>&gt;</argument_list></name></type> <name pos:line="7" pos:column="63">Map</name> <init pos:line="7" pos:column="67">= <expr><op:operator pos:line="7" pos:column="69">new</op:operator> <name><name pos:line="7" pos:column="73">Dictionary</name><argument_list pos:line="7" pos:column="83">&lt;<argument><name pos:line="7" pos:column="84">CodeType</name></argument>, <argument><name pos:line="7" pos:column="94">string</name></argument>&gt;</argument_list></name>
        <block pos:line="8" pos:column="9">{
            <expr><block pos:line="9" pos:column="13">{ <expr><name><name pos:line="9" pos:column="15">CodeType</name><op:operator pos:line="9" pos:column="23">.</op:operator><name pos:line="9" pos:column="24">Bash</name></name></expr>, <expr><lit:literal type="string" pos:line="9" pos:column="30">"bsh"</lit:literal></expr> }</block></expr>,
            <expr><block pos:line="10" pos:column="13">{ <expr><name><name pos:line="10" pos:column="15">CodeType</name><op:operator pos:line="10" pos:column="23">.</op:operator><name pos:line="10" pos:column="24">Csharp</name></name></expr>, <expr><lit:literal type="string" pos:line="10" pos:column="32">"cs"</lit:literal></expr> }</block></expr>,
            <expr><block pos:line="11" pos:column="13">{ <expr><name><name pos:line="11" pos:column="15">CodeType</name><op:operator pos:line="11" pos:column="23">.</op:operator><name pos:line="11" pos:column="24">Javascript</name></name></expr>, <expr><lit:literal type="string" pos:line="11" pos:column="36">"js"</lit:literal></expr> }</block></expr>,
            <expr><block pos:line="12" pos:column="13">{ <expr><name><name pos:line="12" pos:column="15">CodeType</name><op:operator pos:line="12" pos:column="23">.</op:operator><name pos:line="12" pos:column="24">Python</name></name></expr>, <expr><lit:literal type="string" pos:line="12" pos:column="32">"py"</lit:literal></expr> }</block></expr>,
            <expr><block pos:line="13" pos:column="13">{ <expr><name><name pos:line="13" pos:column="15">CodeType</name><op:operator pos:line="13" pos:column="23">.</op:operator><name pos:line="13" pos:column="24">Ruby</name></name></expr>, <expr><lit:literal type="string" pos:line="13" pos:column="30">"rb"</lit:literal></expr> }</block></expr>,
            <expr><block pos:line="14" pos:column="13">{ <expr><name><name pos:line="14" pos:column="15">CodeType</name><op:operator pos:line="14" pos:column="23">.</op:operator><name pos:line="14" pos:column="24">Shell</name></name></expr>, <expr><lit:literal type="string" pos:line="14" pos:column="31">"sh"</lit:literal></expr> }</block></expr>,
        }</block></expr></init></decl>;</decl_stmt>

        <function><type><specifier pos:line="17" pos:column="9">public</specifier> <specifier pos:line="17" pos:column="16">static</specifier> <name pos:line="17" pos:column="23">string</name></type> <name pos:line="17" pos:column="30">Convert</name><parameter_list pos:line="17" pos:column="37">(<param><decl><type><name pos:line="17" pos:column="38">CodeType</name></type> <name pos:line="17" pos:column="47">codeType</name></decl></param>)</parameter_list>
        <block pos:line="18" pos:column="9">{
            <return pos:line="19" pos:column="13">return <expr><call><name><name pos:line="19" pos:column="20">Map</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">ContainsKey</name></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">codeType</name></expr></argument>)</argument_list></call> <op:operator pos:line="19" pos:column="46">?</op:operator> <name><name pos:line="19" pos:column="48">Map</name><index pos:line="19" pos:column="51">[<expr><name pos:line="19" pos:column="52">codeType</name></expr>]</index></name> <op:operator pos:line="19" pos:column="62">:</op:operator> <call><name><name pos:line="19" pos:column="64">codeType</name><op:operator pos:line="19" pos:column="72">.</op:operator><name pos:line="19" pos:column="73">ToString</name></name><argument_list pos:line="19" pos:column="81">()</argument_list></call><op:operator pos:line="19" pos:column="83">.</op:operator><call><name pos:line="19" pos:column="84">ToLower</name><argument_list pos:line="19" pos:column="91">()</argument_list></call></expr>;</return>
        }</block></function>
    }</block></class>
}</block></namespace></unit>
